var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,0.9,1,1.034]],["body/interfaces/Account.html",[0,1.501,1,1.826,2,1.831,3,0.207,4,0.184,5,0.199,6,2.8,7,0.333,8,1.35,9,1.23,10,3.99,11,4.293,12,1.024,13,2.958,14,3.99,15,3.99,16,2.958,17,4.293,18,4.293,19,3.505,20,0.805,21,0.018,22,4.563,23,1.224,24,2.519,25,4.053,26,4.293,27,0.318,28,2.155,29,3.953,30,3.953,31,1.656,32,1.74,33,2.519,34,4.339,35,3.953,36,4.339,37,3.953,38,3.334,39,3.334,40,3.334,41,3.334,42,3.334,43,0.01,44,0.013,45,0.01]],["title/interfaces/ApiError.html",[0,0.9,46,2.429]],["body/interfaces/ApiError.html",[0,1.345,2,2.375,3,0.269,4,0.238,5,0.179,7,0.432,8,1.586,20,0.724,21,0.017,23,1.145,24,2.832,27,0.269,43,0.013,44,0.015,45,0.013,46,4.283,47,4.838,48,5.103,49,5.602]],["title/pipes/ApiPathPipe.html",[50,1.87,51,2.258]],["body/pipes/ApiPathPipe.html",[3,0.241,4,0.214,5,0.16,9,1.1,20,0.552,21,0.018,23,1.171,25,3.262,27,0.241,43,0.012,44,0.014,45,0.012,50,3.09,51,3.732,52,3.538,53,5.349,54,4.346,55,1.522,56,1.093,57,6.214,58,0.953,59,5.048,60,6.214,61,2.319,62,0.907,63,5.048,64,1.153,65,5.349,66,0.907,67,0.44,68,6.214,69,0.552,70,2.133,71,2.511,72,0.451,73,1.208,74,2.664,75,3.262,76,2.836,77,5.048,78,5.048,79,1.266,80,5.048]],["title/components/AppComponent.html",[81,0.385,82,1.034]],["body/components/AppComponent.html",[3,0.21,4,0.186,5,0.14,12,0.678,21,0.018,27,0.21,43,0.01,44,0.013,45,0.01,55,1.327,56,1.026,67,0.311,69,0.481,72,0.393,81,0.647,82,1.837,83,1.8,84,1.457,85,1.457,86,3.789,87,1.8,88,1.8,89,2.338,90,2.127,91,2.408,92,1.886,93,1.39,94,1.006,95,1.886,96,1.8,97,1.21,98,2.212,99,1.457,100,1.457,101,1.21,102,1.457,103,1.21,104,1.457,105,1.21,106,1.718,107,1.457,108,1.21,109,1.886,110,1.21,111,1.718,112,1.457,113,1.21,114,1.129,115,1.21,116,1.457,117,1.156,118,1.457,119,1.21,120,2.111,121,1.457,122,1.21,123,1.457,124,1.21,125,1.457,126,1.21,127,1.457,128,1.21,129,1.327,130,1.886,131,1.21,132,1.457,133,1.21,134,1.327,135,1.21,136,0.959,137,1.21,138,1.103,139,1.39,140,1.457]],["title/modules/AppModule.html",[141,1.305,142,2.635]],["body/modules/AppModule.html",[3,0.206,4,0.182,5,0.137,21,0.018,27,0.268,33,2.83,43,0.01,44,0.013,45,0.01,67,0.469,69,0.47,72,0.384,82,2.069,94,0.982,136,0.937,141,1.492,142,5.158,143,2.021,144,1.915,145,3.297,146,3.297,147,2.961,148,2.269,149,3.702,150,3.702,151,3.702,152,3.702,153,4.553,154,2.961,155,2.139,156,4.3,157,2.961,158,3.153,159,2.583,160,4.038,161,1.492,162,4.3,163,4.3,164,1.182,165,5.613,166,3.933,167,5.613,168,4.832,169,6.624,170,4.3,171,4.3,172,2.961,173,4.3,174,3.014,175,4.3,176,4.3,177,3.308,178,4.3,179,4.3,180,3.014,181,4.3,182,4.3,183,4.3,184,4.3,185,4.3]],["title/classes/AppPage.html",[72,0.336,186,2.892]],["body/classes/AppPage.html",[3,0.255,4,0.226,5,0.17,7,0.41,21,0.018,27,0.255,43,0.012,44,0.015,45,0.012,58,1.213,62,1.155,66,1.155,67,0.378,72,0.477,79,1.612,91,2.256,96,1.686,186,4.945,187,5.338,188,4.595,189,7.16,190,7.16,191,5.338,192,5.725,193,5.338,194,2.998,195,5.338,196,5.338,197,5.338,198,2.377,199,5.338]],["title/components/ArticleComponent.html",[81,0.385,101,1.034]],["body/components/ArticleComponent.html",[3,0.198,4,0.176,5,0.132,7,0.319,12,0.639,21,0.017,27,0.198,43,0.01,44,0.013,45,0.01,55,1.251,56,0.997,58,1.035,62,0.745,66,0.745,67,0.294,69,0.453,72,0.371,73,1.312,81,0.629,82,1.14,83,1.731,84,1.373,85,1.373,87,1.731,88,1.731,89,2.326,90,2.115,92,1.373,93,1.31,94,0.948,95,1.814,96,1.731,97,1.14,98,2.162,99,1.373,100,1.373,101,1.796,102,1.373,103,1.14,104,1.373,105,1.14,106,1.653,107,1.373,108,1.14,109,1.814,110,1.14,111,1.653,112,1.373,113,1.14,114,1.086,115,1.14,116,1.373,117,1.089,118,1.373,119,1.14,120,2.063,121,1.373,122,1.14,123,1.373,124,1.14,125,1.373,126,1.14,127,1.373,128,1.14,129,1.251,130,1.814,131,1.14,132,1.373,133,1.14,134,1.251,135,1.14,136,0.904,137,1.14,138,1.04,139,1.31,140,1.373,180,4.577,200,1.439,201,3.571,202,2.032,203,1.814,204,6.14,205,1.814,206,5.482,207,2.162,208,4.148,209,1.374,210,4.719]],["title/modules/ArticleModule.html",[141,1.305,211,2.635]],["body/modules/ArticleModule.html",[3,0.239,4,0.212,5,0.159,21,0.018,27,0.239,33,2.009,43,0.012,44,0.014,45,0.012,67,0.509,69,0.547,72,0.447,81,0.513,94,1.143,101,2.042,136,1.091,141,1.736,143,2.352,144,2.228,145,3.538,146,2.64,147,2.64,148,2.64,154,3.26,155,2.488,157,2.64,158,3.471,159,3.005,160,4.332,161,1.736,164,1.375,211,5.136,212,4.307,213,4.307,214,5.003,215,3.993,216,3.005,217,4.331,218,5.003,219,4.307,220,5.003,221,3.233,222,3.506]],["title/components/AuthComponent.html",[81,0.385,103,1.034]],["body/components/AuthComponent.html",[3,0.162,4,0.143,5,0.108,7,0.26,8,1.142,9,1.04,12,0.522,20,0.656,21,0.018,23,0.974,27,0.162,43,0.008,44,0.011,45,0.008,55,1.021,56,1.027,58,0.901,62,1.179,64,1.09,66,0.858,67,0.391,69,0.37,70,1.431,71,1.685,72,0.303,73,1.142,81,0.566,82,0.931,83,1.507,84,1.121,85,1.121,87,1.507,88,1.507,89,2.278,90,2.07,92,1.121,93,1.07,94,0.774,95,1.58,96,1.507,97,0.931,98,1.986,99,1.121,100,1.121,101,0.931,102,1.121,103,1.65,104,1.121,105,0.931,106,1.439,107,1.121,108,0.931,109,1.58,110,0.931,111,1.439,112,1.121,113,0.931,114,0.946,115,0.931,116,1.121,117,0.889,118,1.121,119,0.931,120,1.895,121,1.121,122,0.931,123,1.121,124,0.931,125,1.121,126,0.931,127,1.121,128,0.931,129,1.021,130,1.58,131,0.931,132,1.121,133,0.931,134,1.021,135,0.931,136,0.738,137,0.931,138,0.849,139,1.07,140,1.121,177,3.672,200,1.175,202,1.829,203,1.58,205,1.58,207,1.986,209,1.504,223,2.916,224,5.527,225,4.773,226,4.088,227,4.252,228,4.524,229,4.773,230,0.931,231,3.387,232,4.6,233,4.773,234,3.387,235,4.773,236,3.387,237,1.918,238,1.918,239,3.387,240,3.672,241,3.387,242,2.916,243,2.374,244,0.931,245,3.084,246,2.606,247,3.387,248,3.387,249,3.672,250,4.773,251,4.773]],["title/modules/AuthModule.html",[141,1.305,252,2.635]],["body/modules/AuthModule.html",[3,0.175,4,0.155,5,0.116,12,0.889,21,0.018,27,0.175,33,2.615,43,0.008,44,0.012,45,0.008,67,0.526,69,0.4,72,0.327,81,0.667,94,0.837,103,1.895,105,1.93,106,1.872,108,1.85,110,1.895,111,1.738,113,1.85,114,1.142,128,1.85,129,1.105,133,1.85,134,1.105,135,1.895,136,1.256,141,1.272,143,1.723,144,1.632,145,3.042,146,1.934,147,1.934,148,1.934,154,2.66,155,1.823,157,2.66,158,2.832,159,2.201,160,3.725,161,1.272,164,1.008,215,3.258,216,2.201,219,3.155,221,3.725,222,2.569,252,5.368,253,3.155,254,3.155,255,3.155,256,3.779,257,3.665,258,4.04,259,3.665,260,3.534,261,3.665,262,2.819,263,3.665,264,2.368,265,3.534,266,2.819,267,3.665,268,2.569,269,2.819,270,5.042,271,2.819,272,5.042,273,2.819,274,2.819,275,3.665,276,3.665]],["title/injectables/AuthService.html",[277,1.187,278,1.984]],["body/injectables/AuthService.html",[3,0.148,4,0.132,5,0.099,7,0.238,8,1.074,9,1.433,12,0.691,14,3.465,20,0.718,21,0.018,23,1.157,24,2.115,27,0.148,31,1.187,43,0.007,44,0.01,45,0.007,50,1.544,56,1.068,58,0.847,62,1.209,64,1.502,66,1.146,67,0.476,69,0.339,70,1.312,71,1.544,72,0.277,79,1.787,91,1.312,129,1.352,134,1.352,164,0.853,227,4.051,230,1.233,237,1.077,238,1.077,240,3.45,242,2.673,244,1.233,277,1.417,278,2.367,279,1.744,280,2.673,281,4.485,282,4.485,283,4.485,284,4.534,285,2.673,286,2.695,287,4.534,288,4.966,289,4.485,290,3.861,291,3.105,292,2.839,293,3.577,294,4.485,295,3.105,296,4.485,297,2.712,298,3.105,299,3.469,300,4.485,301,2.712,302,3.105,303,4.485,304,3.105,305,3.105,306,2.712,307,3.105,308,2.006,309,1.028,310,1.744,311,2.673,312,2.673,313,1.077,314,2.673,315,2.176,316,3.144,317,2.176,318,2.176,319,3.144,320,2.176,321,1.744,322,1.544,323,1.485,324,5.489,325,3.105,326,4.485,327,5.768,328,5.768,329,5.266,330,3.105,331,4.485,332,3.105,333,3.105,334,4.485,335,3.105,336,2.673,337,3.105,338,2.176,339,2.673,340,2.388,341,3.105,342,4.485,343,4.485,344,4.485,345,3.105,346,3.105,347,3.105,348,3.105,349,3.105,350,3.105,351,3.105,352,2.673,353,3.105,354,3.105]],["title/components/ConfirmEmailComponent.html",[81,0.385,105,1.034]],["body/components/ConfirmEmailComponent.html",[1,1.594,3,0.103,4,0.091,5,0.068,7,0.165,8,0.813,9,0.74,12,0.996,20,0.523,21,0.018,23,0.846,27,0.103,31,0.822,43,0.005,44,0.008,45,0.005,49,1.655,50,1.69,55,0.648,56,0.846,58,0.641,61,2.04,62,1.161,64,0.776,66,0.859,67,0.448,69,0.235,72,0.192,73,0.813,79,1.056,81,0.431,82,0.591,83,1.073,84,0.712,85,0.712,87,1.073,88,1.073,89,2.141,90,1.94,92,0.712,93,0.679,94,0.491,95,1.124,96,1.073,97,0.591,98,1.583,99,0.712,100,0.712,101,0.591,102,0.712,103,0.591,104,0.712,105,1.315,106,1.981,107,0.712,108,0.934,109,1.124,110,0.591,111,1.024,112,0.712,113,0.591,114,0.673,115,0.591,116,0.712,117,0.565,118,0.712,119,0.591,120,1.511,121,0.712,122,0.591,123,0.712,124,0.591,125,0.712,126,0.591,127,0.712,128,0.591,129,0.648,130,1.124,131,0.591,132,0.712,133,0.591,134,0.648,135,0.591,136,0.469,137,0.591,138,0.539,139,0.679,140,0.712,161,0.746,198,0.958,200,0.746,202,1.394,203,1.124,205,1.124,207,1.583,209,1.199,230,0.934,232,4.062,237,1.921,238,1.921,244,1.7,246,3.239,264,1.39,265,1.507,266,5.054,278,3.058,286,2.45,290,1.852,292,2.13,309,0.712,310,1.208,313,0.746,314,1.852,321,1.208,323,2.174,340,1.655,355,5.054,356,1.852,357,2.222,358,4.211,359,3.397,360,4.211,361,2.222,362,2.951,363,4.211,364,2.524,365,4.783,366,3.397,367,2.151,368,4.766,369,2.529,370,3.352,371,3.058,372,3.397,373,2.151,374,2.151,375,2.151,376,2.925,377,3.397,378,2.151,379,2.151,380,2.907,381,2.151,382,1.669,383,2.094,384,2.151,385,2.151,386,2.151,387,1.208,388,2.925,389,1.135,390,1.208,391,0.909,392,1.39,393,2.613,394,1.39,395,2.151,396,4.211,397,1.852,398,2.925,399,1.852,400,2.151,401,2.151,402,1.135,403,1.135,404,2.151,405,1.691,406,2.151,407,2.151,408,1.655,409,1.852,410,2.381,411,2.151,412,1.655,413,2.381,414,1.39,415,1.135,416,1.507,417,2.151,418,1.69,419,1.655,420,2.151,421,3.679,422,3.397,423,3.397,424,2.925,425,2.687,426,2.381,427,5.536,428,4.118,429,3.577,430,3.397,431,2.925,432,2.925,433,3.88,434,3.091,435,4.118,436,4.118,437,3.352,438,4.118,439,4.783,440,3.091,441,2.925,442,3.397,443,1.513,444,3.397,445,1.39,446,1.39,447,1.135,448,1.135,449,1.208,450,1.208,451,1.208,452,1.292,453,1.655,454,1.655,455,3.625,456,1.208,457,1.208]],["title/components/ConfirmEmailDialogComponent.html",[81,0.385,108,1.034]],["body/components/ConfirmEmailDialogComponent.html",[3,0.17,4,0.15,5,0.113,7,0.273,9,0.773,12,1.17,20,0.388,21,0.018,27,0.17,43,0.008,44,0.011,45,0.008,55,1.07,56,0.994,58,0.931,62,1.018,64,0.811,66,0.886,67,0.349,69,0.388,72,0.317,73,1.18,81,0.581,82,0.976,83,1.557,84,1.174,85,1.174,87,1.557,88,1.557,89,2.29,90,2.081,92,1.174,93,1.121,94,0.811,95,1.632,96,1.557,97,0.976,98,2.027,99,1.174,100,1.174,101,0.976,102,1.174,103,0.976,104,1.174,105,0.976,106,2.182,107,1.174,108,1.684,109,1.632,110,0.976,111,1.487,112,1.174,113,0.976,114,0.977,115,0.976,116,1.174,117,0.932,118,1.174,119,0.976,120,1.934,121,1.174,122,0.976,123,1.174,124,0.976,125,1.174,126,0.976,127,1.174,128,0.976,129,1.07,130,1.632,131,0.976,132,1.174,133,0.976,134,1.07,135,0.976,136,0.773,137,0.976,138,0.89,139,1.121,140,1.174,200,1.231,202,1.876,203,1.632,205,1.632,207,2.027,209,1.535,230,1.356,244,0.976,264,3.957,323,1.174,336,4.245,355,4.711,369,2.962,387,1.993,431,4.245,433,3.456,458,2.73,459,4.879,460,4.245,461,5.272,462,3.055,463,5.272,464,3.055,465,4.245,466,3.055,467,3.055,468,3.055,469,3.957,470,4.245,471,4.931,472,3.793,473,4.245,474,4.931,475,4.245]],["title/guards/ConfirmedUserGuard.html",[217,2.635,476,2.258]],["body/guards/ConfirmedUserGuard.html",[3,0.217,4,0.193,5,0.144,7,0.349,9,0.991,12,0.701,15,3.494,20,0.497,21,0.018,27,0.217,43,0.011,44,0.013,45,0.011,56,0.738,58,1.098,62,1.045,64,1.038,66,0.817,67,0.506,69,0.497,72,0.406,73,1.088,79,1.608,91,1.921,161,1.577,164,1.249,217,4.077,221,4.621,230,1.599,244,1.764,277,1.837,286,3.073,293,3.191,309,1.504,313,1.577,322,2.26,323,2.123,338,3.185,371,3.836,380,2.137,397,3.913,405,1.825,477,3.185,478,5.523,479,3.496,480,2.937,481,3.557,482,3.913,483,3.913,484,3.496,485,3.185,486,2.553,487,2.73,488,2.553,489,3.496,490,3.496,491,2.937,492,4.545]],["title/modules/CoreModule.html",[141,1.305,153,2.429]],["body/modules/CoreModule.html",[3,0.18,4,0.159,5,0.119,21,0.018,27,0.18,43,0.009,44,0.012,45,0.009,67,0.531,69,0.411,70,1.588,71,1.869,72,0.336,94,0.858,117,1.935,119,1.864,122,1.864,124,1.864,126,1.864,136,0.819,141,1.304,143,1.766,144,1.673,145,3.081,146,1.983,147,3.081,148,3.081,153,4.949,154,2.706,155,1.869,157,2.706,158,2.881,159,3.081,161,1.304,194,2.111,256,3.808,262,2.89,308,2.428,405,2.06,493,3.235,494,3.757,495,3.235,496,3.235,497,3.235,498,4.381,499,4.381,500,3.757,501,5.129,502,5.84,503,5.129,504,3.595,505,5.129,506,3.757,507,3.757,508,3.235,509,3.235,510,5.129,511,3.757,512,3.757,513,6.275,514,2.89,515,3.757,516,2.89,517,3.757,518,2.89,519,3.757,520,2.89,521,3.757,522,3.757,523,3.757,524,3.757,525,3.757,526,3.235,527,5.129,528,5.129,529,5.129]],["title/interfaces/Destination.html",[0,0.9,530,2.635]],["body/interfaces/Destination.html",[0,0.879,1,1.586,2,1.551,3,0.176,4,0.156,5,0.117,7,0.388,8,1.208,20,0.63,21,0.018,23,1.183,24,2.028,27,0.241,33,2.704,43,0.009,44,0.012,45,0.009,56,1.12,61,1.594,67,0.497,69,0.401,70,1.551,71,1.826,72,0.328,73,0.879,79,1.265,81,0.517,87,1.159,88,1.159,89,1.107,90,1.009,93,1.159,117,0.964,120,1.159,166,3.538,180,2.573,194,2.062,198,1.635,202,1.671,203,1.215,205,1.215,207,1.215,209,1.446,230,1.009,244,1.896,286,2.438,309,1.215,313,1.274,323,2.228,357,2.664,361,1.937,364,1.937,376,2.836,382,1.107,383,2.511,389,1.937,393,2.824,394,2.372,402,1.937,403,1.937,405,1.474,415,1.937,416,3.538,418,1.826,452,4.043,488,2.062,504,2.573,530,4.043,531,2.824,532,4.346,533,4.967,534,3.16,535,4.346,536,3.883,537,2.205,538,3.466,539,2.824,540,3.16,541,3.16,542,3.16,543,3.16,544,3.16,545,3.16,546,2.824,547,2.824,548,2.573,549,2.824,550,3.16,551,3.16,552,3.16,553,3.16,554,3.16,555,3.16,556,3.16,557,3.16,558,3.16,559,3.538,560,3.16,561,3.16,562,2.573,563,3.16,564,3.16,565,3.16,566,3.16,567,4.346,568,3.16,569,3.16,570,3.16,571,2.573]],["title/components/ForgotPasswordComponent.html",[81,0.385,110,1.034]],["body/components/ForgotPasswordComponent.html",[3,0.109,4,0.097,5,0.073,7,0.176,8,0.854,9,0.778,12,0.994,20,0.541,21,0.018,23,0.712,27,0.109,43,0.005,44,0.008,45,0.005,50,1.139,55,0.69,56,0.871,58,0.674,61,1.127,62,1.199,64,0.815,66,0.964,67,0.456,69,0.25,72,0.205,73,0.854,74,1.208,79,1.241,81,0.449,82,0.629,83,1.127,84,0.758,85,0.758,87,1.127,88,1.127,89,2.162,90,1.96,92,0.758,93,0.723,94,0.523,95,1.181,96,1.127,97,0.629,98,1.638,99,0.758,100,0.758,101,0.629,102,0.758,103,0.629,104,0.758,105,0.629,106,1.076,107,0.758,108,0.629,109,1.181,110,1.361,111,2.012,112,0.758,113,0.981,114,1.278,115,0.629,116,0.758,117,0.601,118,0.758,119,0.629,120,1.563,121,0.758,122,0.629,123,0.758,124,0.629,125,0.758,126,0.629,127,0.758,128,0.629,129,0.69,130,1.181,131,0.629,132,0.758,133,0.629,134,0.69,135,0.629,136,0.499,137,0.629,138,0.574,139,0.723,140,0.758,161,0.795,198,1.02,200,0.795,202,1.451,203,1.181,205,1.181,207,1.638,209,1.425,226,2.833,230,0.981,237,1.718,238,1.718,244,1.688,245,3.199,265,1.605,268,1.605,269,5.203,278,3.131,309,0.758,310,1.286,313,0.795,321,1.286,323,2.265,357,2.313,361,2.313,362,3.072,364,2.612,369,2.633,370,3.469,371,3.131,376,2.463,380,2.061,382,1.076,383,2.18,387,1.286,389,1.208,391,0.968,392,1.48,402,1.208,403,1.208,405,1.988,408,1.761,410,1.605,413,2.501,414,1.48,415,1.208,418,1.775,419,1.761,429,3.673,440,2.306,445,1.48,446,1.48,447,1.208,448,1.208,449,1.286,450,1.286,451,1.286,457,1.286,469,2.306,472,2.745,572,5.203,573,1.761,574,3.774,575,3.072,576,4.302,577,3.072,578,2.501,579,3.469,580,3.469,581,2.501,582,3.072,583,1.605,584,3.983,585,3.131,586,1.971,587,2.501,588,3.76,589,3.467,590,2.29,591,2.501,592,2.29,593,2.29,594,2.29,595,2.29,596,1.971,597,1.971,598,1.971,599,2.29,600,1.971,601,1.605,602,1.971,603,2.501,604,2.306,605,1.375,606,1.605,607,1.48,608,1.605,609,1.605,610,1.605,611,1.605,612,2.29,613,2.29,614,1.971,615,1.971,616,1.605,617,1.605,618,1.605,619,1.605,620,1.761,621,1.605,622,1.605,623,2.29,624,2.29,625,1.605,626,1.605,627,1.286,628,3.072,629,3.072,630,3.568,631,2.306,632,2.833,633,2.745,634,2.745,635,1.605,636,1.286]],["title/components/ForgotPasswordDialogComponent.html",[81,0.385,113,1.034]],["body/components/ForgotPasswordDialogComponent.html",[3,0.169,4,0.15,5,0.112,7,0.272,9,0.771,12,0.991,20,0.387,21,0.018,27,0.169,43,0.008,44,0.011,45,0.008,55,1.066,56,0.993,58,0.929,62,1.017,64,0.808,66,0.884,67,0.348,69,0.387,72,0.316,73,1.178,81,0.58,82,0.972,83,1.554,84,1.171,85,1.171,87,1.554,88,1.554,89,2.289,90,2.08,92,1.171,93,1.117,94,0.808,95,1.628,96,1.554,97,0.972,98,2.024,99,1.171,100,1.171,101,0.972,102,1.171,103,0.972,104,1.171,105,0.972,106,1.483,107,1.171,108,0.972,109,1.628,110,0.972,111,2.132,112,1.171,113,1.681,114,1.499,115,0.972,116,1.171,117,0.929,118,1.171,119,0.972,120,1.932,121,1.171,122,0.972,123,1.171,124,0.972,125,1.171,126,0.972,127,1.171,128,0.972,129,1.066,130,1.628,131,0.972,132,1.171,133,0.972,134,1.066,135,0.972,136,0.771,137,0.972,138,0.887,139,1.117,140,1.171,200,1.227,202,1.872,203,1.628,205,1.628,207,2.024,209,1.533,230,1.353,244,0.972,268,4.286,323,1.171,369,2.955,387,1.987,429,3.952,433,3.448,458,2.721,459,4.87,460,4.236,461,5.265,462,3.045,463,5.265,464,3.045,465,4.236,466,3.045,467,3.045,468,3.045,469,3.179,470,4.236,475,4.236,572,4.705,629,4.236,637,2.447,638,4.92,639,4.92,640,4.92,641,4.92]],["title/interfaces/ForogtPasswordDto.html",[0,0.9,642,2.112]],["body/interfaces/ForogtPasswordDto.html",[0,1.698,1,1.804,2,2.015,3,0.228,4,0.202,5,0.152,7,0.366,8,1.435,12,1.164,13,2.123,16,2.123,20,0.521,21,0.018,23,1.234,27,0.346,28,2.371,31,1.822,32,1.915,43,0.011,44,0.014,45,0.011,67,0.337,114,1.364,172,2.516,292,2.123,297,2.241,301,2.241,306,2.241,382,1.438,390,2.678,391,2.015,425,2.678,443,2.67,637,2.371,642,3.369,643,2.678,644,2.864,645,3.941,646,2.864,647,2.864,648,2.864,649,2.864,650,2.864,651,2.864,652,2.516,653,2.678,654,2.864]],["title/components/HomeComponent.html",[81,0.385,115,1.034]],["body/components/HomeComponent.html",[3,0.171,4,0.152,5,0.114,7,0.275,12,0.552,21,0.017,27,0.171,43,0.008,44,0.012,45,0.008,55,1.08,56,0.925,58,0.937,62,0.644,66,0.644,67,0.254,69,0.391,72,0.32,73,1.188,81,0.584,82,0.985,83,1.568,84,1.186,85,1.186,87,1.568,88,1.568,89,2.292,90,2.083,92,1.186,93,1.132,94,0.818,95,1.643,96,1.568,97,0.985,98,2.035,99,1.186,100,1.186,101,0.985,102,1.186,103,0.985,104,1.186,105,0.985,106,1.497,107,1.186,108,0.985,109,1.643,110,0.985,111,1.497,112,1.186,113,0.985,114,0.984,115,1.691,116,1.186,117,0.941,118,1.186,119,0.985,120,1.942,121,1.186,122,0.985,123,1.186,124,0.985,125,1.186,126,0.985,127,1.186,128,0.985,129,1.08,130,1.643,131,0.985,132,1.186,133,0.985,134,1.08,135,0.985,136,0.781,137,0.985,138,0.898,139,1.132,140,1.186,166,3.479,200,1.243,202,1.885,203,1.643,205,1.643,207,2.035,209,1.244,627,2.788,655,3.084,656,5.696,657,4.964,658,3.583,659,4.964,660,7.178,661,4.964,662,4.964,663,4.964,664,4.964,665,4.964,666,4.964,667,4.964,668,4.964,669,4.964,670,6.149,671,4.964,672,4.964,673,4.964,674,4.964,675,4.964,676,4.964,677,4.964,678,4.964,679,4.964,680,4.964,681,4.964,682,4.964,683,4.964,684,4.964,685,4.964,686,4.964,687,4.964,688,4.964,689,4.964,690,4.964,691,4.964,692,4.964,693,4.964,694,4.964,695,4.273,696,4.273]],["title/modules/HomeModule.html",[141,1.305,697,2.635]],["body/modules/HomeModule.html",[3,0.237,4,0.21,5,0.157,21,0.018,27,0.237,33,1.987,43,0.011,44,0.014,45,0.011,67,0.507,69,0.541,72,0.442,81,0.507,94,1.13,115,2.037,136,1.078,141,1.717,143,2.326,144,2.203,145,3.52,146,2.611,147,2.611,148,2.611,154,3.238,155,2.461,157,3.238,158,3.447,159,2.972,160,4.311,161,1.717,164,1.36,215,3.966,216,2.972,222,3.468,256,4.105,262,3.806,697,5.247,698,4.259,699,4.259,700,4.948,701,4.948,702,4.948]],["title/interceptors/HttpErrorInterceptor.html",[498,2.429,703,2.892]],["body/interceptors/HttpErrorInterceptor.html",[3,0.207,4,0.184,5,0.138,7,0.333,9,1.23,20,0.616,21,0.018,27,0.207,43,0.01,44,0.013,45,0.01,46,2.8,56,0.916,58,1.065,62,1.014,64,1.289,66,0.779,67,0.5,69,0.474,72,0.387,73,1.037,74,2.286,75,4.293,76,2.434,79,1.414,164,1.191,230,1.191,243,3.037,244,1.191,277,1.782,293,3.119,308,2.8,309,1.867,313,1.504,434,3.645,480,2.8,481,3.512,487,2.603,491,2.8,498,3.645,704,3.731,705,4.825,706,3.731,707,4.395,708,4.333,709,3.731,710,5.719,711,5.719,712,4.333,713,4.856,714,3.731,715,4.856,716,3.731,717,4.333,718,4.333,719,4.333,720,4.333,721,4.333,722,4.333,723,4.333,724,5.641,725,4.333,726,6.643,727,6.272,728,4.856,729,4.333,730,4.333,731,4.333,732,4.333,733,3.334,734,4.333]],["title/interceptors/HttpJwtInterceptor.html",[499,2.429,703,2.892]],["body/interceptors/HttpJwtInterceptor.html",[3,0.199,4,0.177,5,0.133,7,0.32,9,1.199,20,0.601,21,0.018,27,0.199,32,2.629,43,0.01,44,0.013,45,0.01,56,0.893,58,1.039,61,1.318,62,0.989,64,1.257,66,0.75,67,0.494,69,0.456,72,0.373,73,0.998,75,3.978,79,1.046,164,1.147,230,1.513,244,1.513,277,1.738,285,3.591,286,2.953,293,3.062,308,2.696,309,1.381,312,4.737,313,1.447,323,1.821,418,2.736,434,4.23,481,3.544,486,2.343,487,2.506,488,2.343,491,3.555,499,3.555,704,3.591,705,4.736,707,4.315,709,3.591,710,5.635,711,5.635,713,4.737,714,3.591,715,4.737,728,3.591,735,3.591,736,4.172,737,4.172,738,3.591,739,5.502,740,4.172,741,4.172,742,4.172,743,4.172,744,4.737,745,5.502,746,3.591,747,4.172,748,2.696,749,4.172,750,5.502,751,4.172,752,3.591]],["title/directives/ImageDefaultDirective.html",[97,1.034,138,0.942]],["body/directives/ImageDefaultDirective.html",[3,0.214,4,0.189,5,0.142,7,0.344,20,0.629,21,0.018,23,0.935,27,0.214,43,0.01,44,0.013,45,0.01,55,1.348,61,1.412,62,1.144,65,5.481,67,0.316,69,0.489,72,0.569,74,3.038,75,3.72,76,3.234,89,1.92,97,1.75,137,1.229,138,1.443,139,1.818,164,1.229,209,1.121,237,2.414,299,3.359,437,4.035,571,3.134,753,5.788,754,3.85,755,4.956,756,5.757,757,6.131,758,4.956,759,6.723,760,5.757,761,5.757,762,3.72,763,5.757,764,4.462,765,5.757,766,5.757,767,4.472,768,4.472,769,4.472,770,4.472,771,4.472,772,4.472,773,4.472,774,4.472,775,4.472,776,5.757,777,6.367,778,4.472,779,4.472]],["title/components/LayoutComponent.html",[81,0.385,117,0.987]],["body/components/LayoutComponent.html",[0,0.576,1,1.595,3,0.115,4,0.102,5,0.077,7,0.348,8,0.888,9,1.265,12,0.371,20,0.682,21,0.018,23,0.982,24,2.206,27,0.177,33,1.818,43,0.006,44,0.009,45,0.006,55,0.726,56,1.04,58,0.7,61,1.43,62,1.255,64,0.848,66,0.987,67,0.442,69,0.263,70,1.018,71,1.198,72,0.215,73,0.888,79,0.93,81,0.464,82,0.662,83,1.172,84,0.797,85,0.797,87,1.172,88,1.172,89,2.179,90,1.997,92,0.797,93,0.761,94,0.55,95,1.228,96,1.172,97,0.662,98,1.683,99,0.797,100,0.797,101,0.662,102,0.797,103,0.662,104,0.797,105,0.662,106,1.119,107,0.797,108,0.662,109,1.228,110,0.662,111,1.119,112,0.797,113,0.662,114,0.735,115,0.662,116,0.797,117,1.335,118,0.797,119,0.662,120,1.971,121,0.797,122,0.662,123,0.797,124,0.662,125,0.797,126,0.662,127,0.797,128,0.662,129,0.726,130,1.228,131,0.662,132,0.797,133,0.662,134,0.726,135,0.662,136,0.525,137,0.662,138,0.604,139,0.761,140,0.797,166,3.564,180,1.688,194,1.353,198,1.652,200,0.836,202,1.498,203,1.228,205,1.228,207,1.683,209,1.454,230,1.02,237,2.013,238,2.013,244,1.88,286,2.555,309,0.797,313,0.836,323,2.164,357,2.388,361,2.388,364,2.683,376,2.542,382,1.533,383,2.251,389,1.271,393,1.853,394,1.556,402,1.271,403,1.271,405,1.49,415,1.271,416,2.6,418,1.198,447,1.271,448,2.388,452,2.719,456,1.353,488,1.353,504,1.688,530,3.172,531,1.853,532,3.897,533,4.728,534,2.073,535,4.378,536,3.912,537,1.447,538,3.631,539,1.853,540,3.194,541,3.897,542,3.194,543,3.897,544,3.194,545,3.897,546,3.482,547,3.482,548,3.172,549,3.482,550,3.194,551,3.897,552,3.194,553,3.897,554,2.073,555,2.073,556,2.073,557,2.073,558,2.073,559,2.6,560,4.378,561,2.073,562,2.6,563,4.378,564,2.073,565,2.073,566,2.073,567,3.194,568,2.073,569,2.073,570,2.073,571,1.688,636,1.353,780,2.854,781,2.408,782,3.71,783,2.408,784,2.408,785,2.408,786,2.408,787,2.408,788,2.408,789,2.408,790,3.71,791,2.408,792,2.408,793,2.408,794,2.408,795,2.408,796,2.408,797,2.854,798,3.194,799,3.194,800,3.194,801,3.194,802,3.71,803,2.408,804,2.073,805,2.408,806,2.408,807,2.073,808,1.556]],["title/components/LayoutFooterComponent.html",[81,0.385,119,1.034]],["body/components/LayoutFooterComponent.html",[3,0.176,4,0.156,5,0.117,7,0.283,12,0.569,20,0.553,21,0.018,23,1.011,27,0.176,43,0.009,44,0.012,45,0.009,55,1.112,56,0.939,58,0.956,62,1.039,66,0.663,67,0.261,69,0.403,72,0.33,73,1.212,76,2.072,81,0.593,82,1.014,83,1.6,84,1.221,85,1.221,87,1.6,88,1.6,89,2.299,90,2.09,92,1.221,93,1.165,94,0.843,95,1.676,96,1.6,97,1.014,98,2.061,99,1.221,100,1.221,101,1.014,102,1.221,103,1.014,104,1.221,105,1.014,106,1.527,107,1.221,108,1.014,109,1.676,110,1.014,111,1.527,112,1.221,113,1.014,114,1.004,115,1.014,116,1.221,117,0.969,118,1.221,119,1.712,120,2.321,121,1.221,122,1.014,123,1.221,124,1.014,125,1.221,126,1.014,127,1.221,128,1.014,129,1.112,130,1.676,131,1.014,132,1.221,133,1.014,134,1.112,135,1.014,136,0.804,137,1.014,138,0.925,139,1.165,140,1.221,198,1.643,200,1.28,202,1.914,203,1.676,205,1.676,207,2.061,209,1.27,299,3.052,447,1.947,448,2.673,449,2.072,450,2.072,451,2.072,456,3.249,514,4.79,547,5.02,549,5.02,762,3.273,804,5.618,809,4.023,810,3.176,811,5.784,812,5.065,813,3.689,814,3.689,815,3.689,816,3.176,817,3.897]],["title/components/LayoutNavComponent.html",[81,0.385,122,1.034]],["body/components/LayoutNavComponent.html",[1,1.745,3,0.147,4,0.13,5,0.097,7,0.402,9,0.668,12,0.473,20,0.694,21,0.018,23,0.989,24,2.445,27,0.147,33,1.232,43,0.007,44,0.01,45,0.007,55,0.924,56,0.989,58,0.839,62,1.141,64,0.7,66,0.799,67,0.37,69,0.335,72,0.274,73,1.064,76,2.497,79,0.769,81,0.536,82,0.843,83,1.404,84,1.015,85,1.015,87,1.404,88,1.404,89,2.252,90,2.067,92,1.015,93,0.968,94,0.7,95,1.471,96,1.404,97,0.843,98,1.898,99,1.015,100,1.015,101,0.843,102,1.015,103,0.843,104,1.015,105,0.843,106,1.34,107,1.015,108,0.843,109,1.471,110,0.843,111,1.34,112,1.015,113,0.843,114,0.881,115,0.843,116,1.015,117,0.805,118,1.015,119,0.843,120,2.246,121,1.015,122,1.577,123,1.015,124,0.843,125,1.015,126,0.843,127,1.015,128,0.843,129,0.924,130,1.471,131,0.843,132,1.015,133,0.843,134,0.924,135,0.843,136,0.668,137,0.843,138,0.769,139,0.968,140,1.015,198,1.365,200,1.064,202,1.731,203,1.471,205,1.471,207,1.898,209,1.114,299,3.212,447,2.345,448,2.759,449,1.722,450,2.497,451,1.722,452,2.67,453,3.42,454,2.359,456,3.679,516,5.038,536,2.359,537,1.842,546,4.683,548,3.665,562,3.115,631,1.981,762,2.872,780,3.42,808,2.872,809,4.232,816,2.64,818,2.64,819,6.549,820,5.229,821,4.445,822,4.502,823,3.066,824,3.066,825,1.842,826,3.066,827,4.502,828,3.066,829,3.066,830,3.066,831,2.359,832,3.827,833,3.827,834,3.827,835,3.827,836,3.827,837,2.149,838,3.066,839,3.066,840,3.066,841,5.229,842,2.359,843,2.359,844,2.149,845,2.149,846,2.359,847,2.359,848,3.066,849,3.066,850,3.066]],["title/components/LayoutSettingsComponent.html",[81,0.385,124,1.034]],["body/components/LayoutSettingsComponent.html",[1,1.566,3,0.098,4,0.087,5,0.181,7,0.158,8,0.785,9,1.017,10,1.236,12,0.317,19,1.731,20,0.557,21,0.018,23,0.664,27,0.098,43,0.005,44,0.008,45,0.005,55,0.62,56,0.925,58,0.619,62,1.185,64,1.066,66,1.063,67,0.431,69,0.225,70,0.87,71,1.023,72,0.184,73,0.785,76,1.156,79,0.822,81,0.419,82,0.566,83,1.036,84,0.681,85,0.681,87,1.036,88,1.036,89,2.125,90,1.925,92,0.681,93,0.65,94,0.47,95,1.086,96,1.036,97,0.566,98,1.544,99,0.681,100,0.681,101,0.566,102,0.681,103,0.566,104,0.681,105,0.566,106,0.989,107,0.681,108,0.566,109,1.086,110,0.566,111,0.989,112,0.681,113,0.566,114,0.65,115,0.566,116,0.681,117,0.54,118,0.681,119,0.566,120,2.015,121,0.681,122,0.566,123,0.681,124,1.283,125,0.681,126,0.566,127,0.681,128,0.566,129,0.62,130,1.086,131,0.566,132,0.681,133,0.566,134,0.62,135,0.566,136,0.449,137,0.566,138,0.516,139,0.65,140,0.681,155,2.701,164,1.401,198,0.916,200,0.714,202,1.354,203,1.086,205,1.086,207,1.544,209,1.728,227,3.146,230,0.902,232,3.993,237,1.419,238,1.419,240,2.523,244,1.676,286,2.408,299,1.731,309,0.681,313,0.714,323,2.112,324,1.771,357,2.158,361,2.158,364,2.462,369,2.457,370,3.27,380,1.542,382,1.233,383,2.034,387,1.156,389,1.086,394,1.33,402,1.086,403,1.086,415,1.086,416,1.442,418,1.023,456,2.297,457,2.297,488,1.156,518,5.14,537,1.236,538,3.422,539,1.583,585,3.006,627,1.842,628,2.824,634,4.55,636,1.842,752,1.771,762,2.119,797,1.583,807,1.771,808,1.33,809,4.318,832,1.771,835,1.771,836,3.521,837,2.299,842,2.523,843,2.523,844,2.299,845,1.442,846,1.583,851,1.771,852,2.824,853,4.09,854,3.28,855,4.09,856,3.28,857,4.017,858,3.28,859,4.666,860,3.28,861,4.666,862,2.058,863,3.28,864,4.666,865,2.058,866,3.28,867,6.495,868,5.43,869,2.058,870,2.058,871,2.058,872,2.058,873,3.28,874,2.058,875,2.058,876,3.28,877,5.096,878,2.058,879,2.058,880,2.058,881,2.058,882,2.058,883,2.058,884,2.058,885,2.058,886,3.28,887,3.28,888,2.058,889,1.771,890,1.771,891,2.058,892,2.824,893,2.058,894,2.058,895,1.771,896,2.058,897,2.058,898,2.058,899,1.771,900,2.058,901,1.771,902,2.058,903,2.058,904,1.771,905,2.058,906,2.058,907,2.058,908,2.058,909,4.666,910,2.824,911,3.28,912,3.28,913,3.28,914,2.824,915,4.017,916,3.28,917,2.523,918,2.824,919,2.824,920,3.28,921,3.28,922,3.28,923,3.28,924,3.28,925,2.523,926,2.824,927,3.28,928,2.058,929,4.666,930,2.058,931,4.666,932,3.28,933,2.058,934,2.058,935,1.771,936,3.28,937,2.058,938,2.058,939,2.058,940,2.058,941,2.058,942,1.771,943,1.771]],["title/components/LayoutSidenavComponent.html",[81,0.385,126,1.034]],["body/components/LayoutSidenavComponent.html",[1,1.793,3,0.159,4,0.141,5,0.106,7,0.42,9,0.724,10,1.995,12,0.512,20,0.686,21,0.018,23,0.888,24,2.522,27,0.159,33,1.334,43,0.008,44,0.011,45,0.008,55,1.001,56,1.02,58,0.889,62,1.128,64,0.759,66,0.846,67,0.387,69,0.363,72,0.297,73,1.127,79,0.833,81,0.56,82,0.913,83,1.487,84,1.099,85,1.099,87,1.487,88,1.487,89,2.273,90,2.065,92,1.099,93,1.049,94,0.759,95,1.558,96,1.487,97,0.913,98,1.969,99,1.099,100,1.099,101,0.913,102,1.099,103,0.913,104,1.099,105,0.913,106,1.419,107,1.099,108,0.913,109,1.558,110,0.913,111,1.419,112,1.099,113,0.913,114,0.933,115,0.913,116,1.099,117,0.872,118,1.099,119,0.913,120,2.298,121,1.099,122,0.913,123,1.099,124,0.913,125,1.099,126,1.635,127,1.099,128,0.913,129,1.001,130,1.558,131,0.913,132,1.099,133,0.913,134,1.001,135,0.913,136,0.724,137,0.913,138,0.833,139,1.049,140,1.099,200,1.153,202,1.81,203,1.558,205,1.558,207,1.969,209,1.18,299,3.139,452,1.995,456,1.866,457,1.866,520,5.017,537,1.995,548,3.832,562,3.299,762,3.042,780,3.621,809,4.214,822,5.774,825,1.995,827,4.708,831,2.555,833,4.053,834,4.053,842,2.555,843,2.555,844,2.328,845,2.328,846,2.555,910,4.053,935,2.86,944,2.86,945,5.468,946,4.708,947,3.322,948,3.322,949,3.322,950,3.322,951,3.322,952,4.708,953,3.322,954,3.322]],["title/injectables/LocalStorageService.html",[277,1.187,955,2.429]],["body/injectables/LocalStorageService.html",[3,0.206,4,0.182,5,0.137,7,0.33,9,1.444,20,0.724,21,0.018,23,1.206,27,0.206,43,0.01,44,0.013,45,0.01,56,1.076,58,1.059,61,1.773,62,1.19,64,1.513,66,1.123,67,0.397,69,0.47,72,0.384,79,1.078,91,1.817,164,1.543,209,1.66,230,1.182,238,2.491,243,3.014,244,1.182,277,1.773,279,2.415,322,2.139,480,2.779,481,3.504,486,2.415,487,2.583,607,4.638,744,3.702,748,4.553,955,3.627,956,5.915,957,3.702,958,5.613,959,5.613,960,5.613,961,4.3,962,5.613,963,4.3,964,5.613,965,4.3,966,5.613,967,4.3,968,4.3,969,4.3,970,4.3,971,4.3,972,4.3,973,4.3,974,5.613,975,3.308,976,4.3,977,4.3]],["title/injectables/LogService.html",[277,1.187,481,1.87]],["body/injectables/LogService.html",[3,0.31,4,0.197,5,0.147,7,0.356,8,1.411,9,1.285,20,0.644,21,0.018,23,1.168,27,0.282,28,2.307,43,0.011,44,0.014,45,0.011,48,5.039,56,0.957,58,1.113,62,1.164,64,1.346,66,1.059,67,0.417,69,0.507,70,1.961,71,2.307,72,0.414,91,1.961,209,1.709,237,1.61,238,1.61,277,1.862,279,2.606,322,2.307,383,2.307,476,2.787,481,2.931,486,3.828,526,5.074,707,3.251,764,4.54,978,3.569,979,6.478,980,5.894,981,4.639,982,5.894,983,4.639,984,4.639,985,3.994,986,5.894,987,4.639,988,4.639]],["title/interfaces/LoggedInUser.html",[0,0.9,31,1.437]],["body/interfaces/LoggedInUser.html",[0,1.69,1,2.038,2,1.985,3,0.225,4,0.199,5,0.149,7,0.361,8,1.422,12,1.129,13,2.092,16,2.092,20,0.649,21,0.018,23,1.231,27,0.345,28,2.336,31,2.271,32,2.75,43,0.011,44,0.014,45,0.011,67,0.332,114,1.357,172,2.479,292,2.092,297,2.208,301,2.208,306,2.208,382,1.416,390,2.639,391,1.985,425,2.639,443,2.646,637,2.336,642,2.639,643,2.639,644,2.822,645,3.914,646,2.822,647,2.822,648,2.822,649,2.822,650,2.822,651,2.822,652,2.479,653,2.639,654,2.822]],["title/interfaces/LoggedInUser-1.html",[0,0.751,31,1.2,808,2.029]],["body/interfaces/LoggedInUser-1.html",[0,1.576,1,2.047,2,2.032,3,0.23,4,0.204,5,0.209,6,3.108,7,0.369,8,1.443,10,2.889,11,3.108,12,0.741,13,2.142,14,2.889,15,2.889,16,2.142,17,3.108,18,3.108,19,3.181,20,0.659,21,0.018,22,3.896,23,1.209,24,1.932,25,3.108,26,3.896,27,0.33,28,2.392,29,4.225,30,4.225,31,2.304,32,2.773,33,2.645,34,4.638,35,4.225,36,4.638,37,4.225,38,3.7,39,3.7,40,3.7,41,3.7,42,3.7,43,0.011,44,0.014,45,0.011]],["title/interfaces/LoginDto.html",[0,0.9,297,1.767]],["body/interfaces/LoginDto.html",[0,1.69,1,1.791,2,1.985,3,0.225,4,0.199,5,0.149,7,0.361,8,1.422,12,1.162,13,2.092,16,2.092,20,0.649,21,0.018,23,1.243,27,0.345,28,2.336,31,1.795,32,1.887,43,0.011,44,0.014,45,0.011,67,0.332,114,1.452,172,2.479,292,2.092,297,2.793,301,2.208,306,2.208,382,1.416,390,2.639,391,1.985,425,2.639,443,2.646,637,2.336,642,2.639,643,2.639,644,2.822,645,3.914,646,2.822,647,2.822,648,2.822,649,2.822,650,2.822,651,2.822,652,2.479,653,2.639,654,2.822]],["title/components/LoginFormComponent.html",[81,0.385,128,1.034]],["body/components/LoginFormComponent.html",[3,0.104,4,0.092,5,0.069,7,0.167,8,0.822,9,0.748,12,0.858,20,0.637,21,0.018,23,0.851,27,0.104,43,0.005,44,0.008,45,0.005,55,0.657,56,0.851,58,0.648,61,1.656,62,1.202,64,0.784,66,0.942,67,0.427,69,0.238,72,0.195,73,0.822,74,1.15,79,1.208,81,0.435,82,0.599,83,1.085,84,0.722,85,0.722,87,1.085,88,1.085,89,2.145,90,1.944,92,0.722,93,0.689,94,0.498,95,1.136,96,1.085,97,0.599,98,1.595,99,0.722,100,0.722,101,0.599,102,0.722,103,0.599,104,0.722,105,0.599,106,1.035,107,0.722,108,0.599,109,1.136,110,0.599,111,1.453,112,0.722,113,0.599,114,1.26,115,0.599,116,0.722,117,0.572,118,0.722,119,0.599,120,1.522,121,0.722,122,0.599,123,0.722,124,0.599,125,0.722,126,0.599,127,0.722,128,1.325,129,1.873,130,1.136,131,0.599,132,0.722,133,0.599,134,0.657,135,0.599,136,0.475,137,0.599,138,0.547,139,0.689,140,0.722,161,0.757,164,0.599,198,0.971,200,0.757,202,1.406,203,1.136,205,1.136,207,1.595,209,1.396,226,2.745,230,0.944,237,1.672,238,1.672,244,1.66,245,3.387,271,5.208,278,3.074,309,0.722,313,0.757,321,1.225,323,2.213,357,2.241,361,2.241,362,2.977,364,2.543,371,3.074,376,2.386,380,1.997,382,1.281,383,2.113,389,1.15,391,0.921,392,1.409,394,1.409,402,1.15,403,1.15,405,2.236,412,1.677,413,2.406,414,1.409,415,1.15,418,1.708,429,2.219,440,2.219,445,1.409,446,1.409,447,1.15,448,1.812,449,1.225,450,1.225,451,1.225,457,1.225,469,3.114,472,3.707,559,1.528,576,4.456,577,3.674,578,2.977,579,3.377,580,3.377,581,2.406,582,2.977,583,1.528,584,3.902,585,3.074,587,1.528,588,3.674,589,2.745,591,2.977,601,1.528,603,2.406,604,2.219,605,1.31,606,1.528,607,2.219,608,1.528,609,1.528,610,1.528,611,1.528,616,1.528,617,1.528,619,2.406,620,1.677,621,1.528,622,1.528,625,2.406,626,1.528,627,1.225,631,3.114,632,3.387,633,2.642,635,2.977,636,1.225,748,1.409,817,2.642,825,2.063,899,2.956,989,5.828,990,1.677,991,3.657,992,2.956,993,2.956,994,3.657,995,1.877,996,3.657,997,2.18,998,3.707,999,2.18,1000,1.528,1001,2.18,1002,2.18,1003,2.18,1004,1.877,1005,1.877,1006,2.18,1007,1.877,1008,2.18,1009,2.18,1010,1.877,1011,2.956,1012,1.677,1013,2.18,1014,1.677,1015,1.877,1016,3.657,1017,1.677,1018,2.18,1019,2.18,1020,2.18,1021,1.877,1022,2.642,1023,2.642]],["title/interfaces/MockUser.html",[0,0.9,228,2.429]],["body/interfaces/MockUser.html",[0,0.754,1,1.92,2,1.331,3,0.151,4,0.133,5,0.1,7,0.242,8,1.084,11,2.928,12,0.818,13,2.018,14,3.487,15,3.188,16,2.018,17,2.034,18,2.928,20,0.344,21,0.018,22,2.928,23,0.999,24,1.265,26,2.034,27,0.323,31,1.203,32,2.132,43,0.007,44,0.011,45,0.007,61,1.431,67,0.411,79,1.834,90,0.866,114,1.308,164,1.997,228,4.14,249,2.422,292,2.585,293,3.283,297,2.13,299,2.801,301,2.13,306,2.13,309,1.042,310,3.599,313,1.092,315,2.206,316,2.206,317,2.206,318,2.206,319,2.206,320,2.206,321,1.768,380,1.48,382,1.75,390,1.768,391,1.331,405,2.471,426,2.206,443,1.402,637,1.566,716,2.71,733,5.078,1024,2.422,1025,4.531,1026,3.148,1027,2.71,1028,2.422,1029,2.71,1030,2.422,1031,2.71,1032,2.71,1033,2.71,1034,2.71,1035,2.71,1036,2.71,1037,2.71,1038,2.71,1039,2.71,1040,2.71,1041,2.71,1042,2.71,1043,2.71,1044,2.71,1045,4.083,1046,2.71,1047,2.422,1048,2.71,1049,3.901,1050,3.901,1051,3.901,1052,5.296,1053,5.296,1054,3.901,1055,3.901,1056,2.71,1057,2.71,1058,4.57,1059,3.901,1060,2.71,1061,2.71,1062,2.71,1063,2.71,1064,2.71,1065,3.901,1066,2.71,1067,3.901,1068,3.901,1069,4.57,1070,2.71,1071,2.71,1072,3.901,1073,3.901,1074,2.71]],["title/components/NotFoundComponent.html",[81,0.385,131,1.034]],["body/components/NotFoundComponent.html",[3,0.196,4,0.173,5,0.13,7,0.315,12,0.631,21,0.018,27,0.196,43,0.009,44,0.013,45,0.009,55,1.235,56,0.991,58,1.026,62,0.736,66,0.736,67,0.29,69,0.447,72,0.366,73,1.301,81,0.625,82,1.126,83,1.717,84,1.355,85,1.355,87,1.717,88,1.717,89,2.323,90,2.113,92,1.355,93,1.293,94,0.935,95,1.799,96,1.717,97,1.126,98,2.151,99,1.355,100,1.355,101,1.126,102,1.355,103,1.126,104,1.355,105,1.126,106,1.639,107,1.355,108,1.126,109,1.799,110,1.126,111,1.639,112,1.355,113,1.126,114,1.077,115,1.126,116,1.355,117,1.075,118,1.355,119,1.126,120,2.052,121,1.355,122,1.126,123,1.355,124,1.126,125,1.355,126,1.126,127,1.355,128,1.126,129,1.235,130,1.799,131,1.786,132,1.355,133,1.126,134,1.235,135,1.126,136,0.893,137,1.126,138,1.027,139,1.293,140,1.355,172,3.429,174,3.809,200,1.421,202,2.019,203,1.799,205,1.799,207,2.151,209,1.362,1075,4.181,1076,3.525,1077,6.1,1078,5.435,1079,4.095,1080,5.435,1081,5.435]],["title/modules/NotFoundModule.html",[141,1.305,1082,2.635]],["body/modules/NotFoundModule.html",[3,0.244,4,0.216,5,0.162,21,0.018,27,0.244,33,2.046,43,0.012,44,0.014,45,0.012,67,0.499,69,0.557,72,0.455,81,0.522,94,1.164,131,2.049,136,1.11,141,1.768,143,2.395,144,2.269,145,3.566,146,2.688,147,2.688,148,2.688,154,3.297,155,2.534,157,2.688,158,3.51,159,3.06,160,4.367,161,1.768,164,1.401,174,3.57,215,4.038,216,3.06,222,3.57,1075,3.919,1082,5.158,1083,4.386,1084,4.386,1085,5.095,1086,5.095]],["title/guards/NotUserGuard.html",[258,2.635,476,2.258]],["body/guards/NotUserGuard.html",[1,1.262,3,0.22,4,0.195,5,0.146,7,0.353,9,1.001,20,0.502,21,0.018,27,0.22,43,0.011,44,0.014,45,0.011,56,0.746,58,1.105,61,1.45,62,1.052,64,1.049,66,0.825,67,0.507,69,0.502,72,0.41,73,1.099,79,1.616,91,1.94,161,1.593,221,4.634,230,1.61,244,1.772,258,4.104,277,1.849,286,3.08,293,3.206,309,1.52,313,1.593,322,2.284,323,2.134,338,3.218,371,3.845,405,1.844,477,3.218,479,3.532,480,2.967,481,3.566,482,3.953,483,3.953,484,3.532,485,3.218,486,2.579,487,2.758,488,2.579,489,3.532,490,3.532,491,2.967,1087,5.55,1088,4.592]],["title/interfaces/RegisterDto.html",[0,0.9,301,1.767]],["body/interfaces/RegisterDto.html",[0,1.675,1,1.767,2,1.929,3,0.218,4,0.193,5,0.145,7,0.351,8,1.396,12,1.156,13,3.017,16,3.017,20,0.74,21,0.018,23,1.255,27,0.342,28,2.27,31,1.744,32,1.833,43,0.011,44,0.014,45,0.011,67,0.323,114,1.442,172,2.408,292,2.032,297,2.145,301,2.742,306,2.145,382,1.376,390,2.563,391,1.929,425,2.563,443,2.597,637,2.27,642,2.563,643,2.563,644,2.741,645,3.861,646,2.741,647,2.741,648,2.741,649,2.741,650,2.741,651,2.741,652,2.408,653,2.563,654,2.741]],["title/components/RegisterFormComponent.html",[81,0.385,133,1.034]],["body/components/RegisterFormComponent.html",[3,0.092,4,0.082,5,0.061,7,0.148,8,0.746,9,0.68,12,0.966,13,1.388,16,1.388,20,0.607,21,0.018,23,0.902,27,0.092,43,0.004,44,0.007,45,0.004,46,1.248,50,0.961,55,0.582,56,0.969,58,0.588,61,1.238,62,1.183,64,0.712,66,0.948,67,0.452,69,0.211,72,0.173,73,0.746,74,1.019,79,1.237,81,0.402,82,0.531,83,0.985,84,0.639,85,0.639,87,0.985,88,0.985,89,2.101,90,1.902,92,0.639,93,0.61,94,0.441,95,1.032,96,0.985,97,0.531,98,1.489,99,0.639,100,0.639,101,0.531,102,0.639,103,0.531,104,0.639,105,0.531,106,1.488,107,0.639,108,0.857,109,1.032,110,0.531,111,0.94,112,0.639,113,0.531,114,1.145,115,0.531,116,0.639,117,0.507,118,0.639,119,0.531,120,1.421,121,0.639,122,0.531,123,0.639,124,0.531,125,0.639,126,0.531,127,0.639,128,0.531,129,0.582,130,1.032,131,0.531,132,0.639,133,1.237,134,1.799,135,0.531,136,0.421,137,0.531,138,0.484,139,0.61,140,0.639,161,0.67,164,0.531,192,2.398,198,0.86,200,0.67,202,1.297,203,1.032,205,1.032,207,1.489,209,1.323,226,2.533,230,0.857,237,1.561,238,1.561,244,1.641,245,2.907,264,1.248,265,1.354,273,5.127,278,2.93,309,0.639,310,1.085,313,0.67,321,1.085,323,2.178,357,2.068,361,2.068,362,2.747,364,2.374,369,2.355,370,3.153,371,2.93,376,2.202,380,1.843,382,1.182,383,1.95,387,1.085,389,1.019,391,0.816,392,1.248,402,1.019,403,1.019,405,1.983,408,1.486,409,1.663,410,1.354,412,1.486,413,2.185,414,1.248,415,1.019,418,1.55,429,2.014,440,2.014,443,1.388,445,1.248,446,1.248,447,1.019,448,1.645,449,1.085,450,1.085,451,1.085,457,1.085,576,4.613,577,3.892,578,2.747,579,3.153,580,3.153,581,2.185,582,2.747,583,1.354,584,3.699,585,2.93,587,1.354,588,3.459,589,2.533,591,2.747,601,1.354,603,2.185,604,2.014,605,1.16,606,1.354,607,2.014,608,1.354,609,1.354,610,1.354,611,1.354,614,1.663,616,1.354,617,1.354,618,3.459,619,3.459,620,1.486,621,1.354,622,1.354,625,1.354,626,1.354,627,1.085,631,3.96,632,4.049,633,2.398,635,2.747,636,1.085,748,1.248,817,2.398,825,1.873,844,3.153,847,4.061,857,3.873,901,1.663,990,1.486,991,3.375,992,2.684,993,2.684,994,3.375,995,1.663,996,3.375,998,3.461,1000,1.354,1004,1.663,1005,1.663,1007,1.663,1010,1.663,1011,2.684,1012,1.486,1014,1.486,1015,1.663,1017,1.486,1022,3.461,1023,3.461,1089,5.737,1090,1.931,1091,1.931,1092,1.931,1093,1.931,1094,1.931,1095,1.931,1096,1.931,1097,1.931,1098,1.931,1099,1.931,1100,1.354,1101,1.663,1102,1.663,1103,1.931,1104,1.931,1105,1.931,1106,3.117,1107,1.931,1108,1.931,1109,2.684,1110,1.663,1111,1.931,1112,1.931,1113,2.684,1114,4.499,1115,4.499,1116,4.544,1117,3.117,1118,3.117,1119,2.684,1120,2.684,1121,1.663,1122,2.684,1123,1.663]],["title/components/ResetPasswordComponent.html",[81,0.385,135,1.034]],["body/components/ResetPasswordComponent.html",[3,0.088,4,0.078,5,0.059,7,0.142,8,0.72,9,0.655,12,0.285,20,0.621,21,0.018,23,0.783,24,0.742,27,0.088,43,0.004,44,0.007,45,0.004,49,1.421,50,0.918,55,0.557,56,0.783,58,0.567,61,1.201,62,1.199,64,0.687,66,0.867,67,0.416,69,0.202,72,0.165,73,0.72,74,0.974,79,1.098,81,0.39,82,0.508,83,0.949,84,0.611,85,0.611,87,0.949,88,0.949,89,2.084,90,1.886,92,0.611,93,0.583,94,0.422,95,0.995,96,0.949,97,0.508,98,1.45,99,0.611,100,0.611,101,0.508,102,0.611,103,0.508,104,0.611,105,0.508,106,1.559,107,0.611,108,0.508,109,0.995,110,0.508,111,1.321,112,0.611,113,0.508,114,1.379,115,0.508,116,0.611,117,0.485,118,0.611,119,0.508,120,1.384,121,0.611,122,0.508,123,0.611,124,0.508,125,0.611,126,0.508,127,0.611,128,0.508,129,0.557,130,0.995,131,0.508,132,0.611,133,0.508,134,0.557,135,1.205,136,1.317,137,0.508,138,0.463,139,0.583,140,0.611,161,0.641,164,0.826,177,1.421,192,2.313,198,1.339,200,0.641,202,1.258,203,0.995,205,0.995,207,1.45,209,1.098,226,2.457,230,0.826,232,3.82,237,1.972,238,1.972,244,1.562,245,3.117,246,1.421,274,5.185,278,2.876,284,1.59,292,1.693,309,0.611,313,0.641,321,1.037,323,2.154,357,2.006,361,2.006,364,2.312,368,4.693,376,2.136,380,2.671,382,1.713,383,1.891,388,2.588,389,0.974,391,0.78,392,1.193,398,2.588,399,1.59,402,0.974,403,0.974,405,2.189,410,1.294,414,1.193,415,0.974,418,1.495,419,1.421,421,2.313,424,2.588,428,2.588,433,2.107,434,1.943,435,2.588,436,2.588,437,2.107,438,2.588,440,1.943,445,1.943,446,1.943,447,1.586,448,1.586,449,1.689,450,1.689,451,1.689,452,1.109,453,1.421,454,1.421,455,3.273,456,1.037,457,2.136,559,1.294,573,1.421,574,3.273,575,2.588,576,4.233,577,3.82,578,2.665,579,3.071,580,3.071,581,2.107,582,2.665,583,1.294,584,3.624,585,2.876,586,1.59,587,1.294,588,3.38,589,2.457,591,2.665,596,1.59,597,1.59,598,1.59,600,1.59,601,1.294,602,1.59,603,2.107,604,1.943,605,1.109,606,1.294,607,1.943,608,1.294,609,1.294,610,1.294,611,1.294,616,1.294,617,1.294,618,2.107,619,2.107,621,1.294,622,1.294,625,1.294,626,1.294,627,1.037,631,1.943,632,2.457,634,2.313,635,1.294,636,1.037,652,1.586,653,1.689,654,1.109,748,1.193,825,1.806,837,2.665,847,2.313,975,2.313,998,3.371,1000,1.294,1012,1.421,1014,1.421,1017,1.421,1021,1.59,1022,3.371,1023,3.371,1100,1.294,1101,1.59,1102,1.59,1109,2.588,1110,1.59,1116,2.588,1119,2.588,1120,2.588,1121,1.59,1122,2.588,1123,1.59,1124,5.803,1125,3.802,1126,3.802,1127,3.802,1128,3.802,1129,3.802,1130,1.847,1131,1.847,1132,1.847,1133,1.847,1134,1.847,1135,1.847,1136,1.847,1137,1.847,1138,1.847,1139,1.847,1140,3.006,1141,1.847,1142,3.006,1143,1.847,1144,1.847,1145,3.802,1146,1.847,1147,1.847,1148,1.847,1149,1.847,1150,4.382,1151,2.588,1152,3.006,1153,3.006,1154,1.847,1155,1.847,1156,1.847]],["title/interfaces/ResetPasswordDto.html",[0,0.9,306,1.767]],["body/interfaces/ResetPasswordDto.html",[0,1.698,1,1.804,2,2.015,3,0.228,4,0.202,5,0.152,7,0.366,8,1.435,12,1.133,13,2.123,16,2.123,20,0.521,21,0.018,23,1.234,27,0.346,28,2.371,31,1.822,32,1.915,43,0.011,44,0.014,45,0.011,67,0.337,114,1.364,172,2.516,292,2.123,297,2.241,301,2.241,306,2.819,382,1.438,390,2.678,391,2.015,425,2.678,443,2.67,637,2.371,642,2.678,643,2.678,644,2.864,645,3.941,646,2.864,647,2.864,648,2.864,649,2.864,650,2.864,651,2.864,652,2.516,653,2.678,654,4.135]],["title/modules/SharedModule.html",[141,1.305,256,2.112]],["body/modules/SharedModule.html",[3,0.187,4,0.165,5,0.124,21,0.018,27,0.187,43,0.009,44,0.012,45,0.009,51,4.422,52,4.173,67,0.543,69,0.426,72,0.349,94,0.891,136,0.85,137,1.637,138,1.846,141,1.354,143,1.834,144,1.738,145,3.142,146,2.059,147,2.059,148,3.142,154,2.776,155,1.941,157,2.059,158,2.956,164,1.637,215,3.4,216,2.344,256,4.099,387,2.192,605,2.344,632,2.521,831,3.002,1157,3.359,1158,3.359,1159,3.359,1160,3.002,1161,5.262,1162,5.262,1163,4.53,1164,3.902,1165,4.53,1166,3.902,1167,4.53,1168,4.53,1169,3.902,1170,4.53,1171,3.902,1172,4.53,1173,3.902,1174,4.53,1175,3.902,1176,4.53,1177,3.902,1178,4.53,1179,3.902,1180,4.53,1181,5.262,1182,4.53,1183,4.53,1184,3.902,1185,4.53,1186,4.53,1187,3.359,1188,4.53,1189,3.902,1190,4.53,1191,3.902,1192,3.902,1193,3.359,1194,3.902,1195,3.902,1196,4.58]],["title/injectables/SnackbarService.html",[277,1.187,585,1.984]],["body/injectables/SnackbarService.html",[3,0.212,4,0.188,5,0.141,7,0.34,8,1.369,9,1.247,20,0.732,21,0.018,23,1.029,27,0.212,43,0.01,44,0.013,45,0.01,48,4.009,56,0.929,58,1.08,61,1.398,62,1.204,64,1.307,66,0.796,67,0.405,69,0.484,72,0.396,79,1.11,91,1.871,230,1.217,237,1.985,238,1.985,243,3.103,244,1.217,277,1.807,279,2.487,322,2.202,585,3.018,627,3.56,695,5.455,696,5.455,942,4.925,1182,3.812,1187,3.812,1197,3.812,1198,6.698,1199,6.698,1200,5.455,1201,4.428,1202,6.698,1203,5.72,1204,5.72,1205,4.428,1206,5.766,1207,4.428,1208,6.337,1209,6.337,1210,5.72,1211,4.428,1212,6.337,1213,5.72,1214,4.428,1215,4.428,1216,4.428,1217,4.428,1218,4.428,1219,4.428,1220,4.428,1221,4.428]],["title/injectables/ThemeService.html",[277,1.187,538,2.258]],["body/injectables/ThemeService.html",[3,0.183,4,0.162,5,0.122,7,0.295,8,1.245,9,1.134,20,0.691,21,0.018,23,0.623,25,4.089,27,0.183,43,0.009,44,0.012,45,0.009,56,0.845,58,0.982,61,1.643,62,1.253,64,1.188,66,1.06,67,0.368,69,0.419,72,0.343,74,2.023,75,2.478,76,2.154,91,1.621,164,1.054,209,1.71,230,1.43,237,1.805,238,1.805,244,1.951,277,1.643,279,2.154,322,1.907,323,2.429,380,2.774,538,3.124,618,3.645,914,3.301,915,4.477,917,2.95,955,4.407,1206,3.301,1222,3.301,1223,6.615,1224,5.902,1225,5.902,1226,5.201,1227,5.448,1228,6.328,1229,3.301,1230,5.902,1231,6.328,1232,5.201,1233,5.201,1234,3.835,1235,3.835,1236,3.835,1237,3.835,1238,3.835,1239,5.902,1240,3.835,1241,2.95,1242,3.301,1243,3.835,1244,3.835,1245,3.835,1246,5.902,1247,3.301,1248,5.201,1249,6.615,1250,3.835,1251,3.835,1252,3.835,1253,5.201,1254,3.835,1255,5.201,1256,5.201,1257,5.201,1258,5.201]],["title/interfaces/Upload.html",[0,0.9,19,1.984]],["body/interfaces/Upload.html",[0,1.559,1,1.791,2,1.985,3,0.225,4,0.199,5,0.224,6,3.036,7,0.361,8,1.422,10,2.822,11,3.036,12,0.724,13,2.092,14,2.822,15,2.822,16,2.092,17,3.036,18,3.036,19,3.438,20,0.649,21,0.018,22,3.839,23,1.224,24,1.887,25,3.036,26,3.839,27,0.327,28,2.336,29,4.164,30,4.164,31,1.795,32,1.887,33,2.977,34,5.267,35,4.798,36,5.267,37,4.164,38,3.614,39,4.57,40,3.614,41,3.614,42,5.267,43,0.011,44,0.014,45,0.011]],["title/guards/UserGuard.html",[260,2.635,476,2.258]],["body/guards/UserGuard.html",[1,1.249,3,0.217,4,0.193,5,0.144,7,0.349,9,0.991,20,0.497,21,0.018,27,0.217,32,2.336,43,0.011,44,0.013,45,0.011,56,0.738,58,1.098,61,1.837,62,1.045,64,1.038,66,0.817,67,0.506,69,0.497,72,0.406,73,1.088,79,1.608,91,1.921,161,1.577,164,1.249,221,4.621,230,1.599,244,1.764,260,4.077,277,1.837,286,3.073,293,3.191,309,1.504,313,1.577,322,2.26,323,2.123,338,3.185,371,3.836,405,1.825,477,3.185,480,2.937,481,3.557,484,3.496,485,3.185,486,2.553,487,2.73,488,2.553,489,3.496,490,3.496,491,2.937,738,3.913,1259,3.913,1260,4.545,1261,4.545,1262,4.545]],["title/injectables/UserService.html",[277,1.187,286,1.589]],["body/injectables/UserService.html",[1,2.05,3,0.16,4,0.141,5,0.106,7,0.256,8,1.13,9,1.195,19,1.76,20,0.714,21,0.018,23,1.114,27,0.16,32,2.925,43,0.008,44,0.011,45,0.008,56,0.89,58,0.891,61,2.121,62,1.254,64,1.252,66,0.985,67,0.485,69,0.365,70,1.41,71,1.659,72,0.298,79,1.184,91,1.41,161,1.158,164,1.298,209,1.184,230,1.298,237,2.068,238,2.068,244,1.986,277,1.492,279,1.874,286,1.996,287,4.719,288,5.131,293,2.726,308,2.156,309,1.104,310,1.874,311,2.872,313,1.158,322,1.659,323,2.391,339,2.872,340,2.567,352,2.872,371,3.543,382,1.424,537,2.004,615,2.872,892,5.415,895,4.066,955,4.22,1000,2.338,1229,2.872,1241,2.567,1242,2.872,1247,2.872,1263,2.872,1264,5.482,1265,5.482,1266,5.482,1267,5.961,1268,4.066,1269,4.723,1270,4.723,1271,3.337,1272,4.723,1273,3.337,1274,3.337,1275,4.723,1276,3.337,1277,3.337,1278,4.723,1279,3.337,1280,3.337,1281,3.337,1282,3.337,1283,4.723,1284,3.337,1285,5.482,1286,3.337,1287,3.337,1288,3.337,1289,3.337,1290,3.337,1291,3.337,1292,3.337,1293,3.337]],["title/changelog.html",[1294,2.703,1295,2.703,1296,2.415]],["body/changelog.html",[5,0.17,10,3.867,12,0.825,19,2.823,21,0.015,43,0.012,44,0.015,45,0.012,106,1.613,111,1.613,114,1.276,157,2.823,426,4.512,604,3.458,757,4.606,764,3.75,917,4.116,925,4.116,1151,4.606,1193,4.606,1296,4.116,1297,5.351,1298,4.606,1299,4.606,1300,5.351,1301,5.351,1302,4.606,1303,4.116,1304,5.542,1305,5.351,1306,5.351,1307,5.351,1308,5.351,1309,5.351,1310,4.606,1311,5.351,1312,5.351,1313,5.351,1314,5.351,1315,5.351,1316,5.351,1317,5.351,1318,5.351,1319,5.351,1320,4.606,1321,5.351,1322,5.351,1323,5.351,1324,5.351,1325,5.351,1326,5.351,1327,5.351]],["title/coverage.html",[1328,4.417]],["body/coverage.html",[0,1.666,1,0.803,5,0.093,6,3.287,12,0.661,19,1.542,20,0.319,21,0.018,31,1.64,43,0.007,44,0.01,45,0.007,46,1.888,47,2.515,50,1.453,51,1.755,52,2.048,53,2.515,54,2.515,70,1.814,72,0.261,81,0.75,82,0.803,86,2.515,97,0.803,101,0.803,103,0.803,105,0.803,108,0.803,110,0.803,113,0.803,114,0.85,115,0.803,117,0.767,119,0.803,122,0.803,124,0.803,126,0.803,128,0.803,131,0.803,133,0.803,135,0.803,137,0.803,138,0.732,174,2.048,186,2.248,188,2.515,201,2.515,217,2.048,223,2.515,228,2.773,258,2.048,260,2.048,264,1.888,266,2.248,268,2.048,269,2.248,271,2.248,273,2.248,274,2.248,277,1.972,278,1.542,280,2.515,286,1.235,297,1.374,301,1.374,306,1.374,315,2.048,316,2.048,317,2.048,318,2.048,319,2.048,320,2.048,355,3.301,356,2.515,382,0.881,458,3.301,476,3.055,478,2.515,479,3.301,481,1.453,498,1.888,499,1.888,514,2.248,516,2.248,518,2.248,520,2.248,530,2.048,531,3.301,538,1.755,572,3.301,573,3.301,585,1.542,636,1.641,642,1.641,643,3.354,655,2.515,703,3.301,705,3.301,706,2.515,735,2.515,753,2.515,754,2.515,809,3.622,810,2.515,818,2.515,837,5.489,851,2.515,944,2.515,955,1.888,956,2.515,957,2.515,978,2.248,989,2.515,990,3.301,1016,2.515,1024,5.282,1045,2.248,1047,2.248,1075,2.248,1076,2.515,1087,2.515,1089,2.515,1100,2.048,1124,2.515,1160,3.913,1196,2.248,1197,2.515,1222,2.515,1259,2.515,1263,2.515,1328,2.515,1329,2.515,1330,2.922,1331,6.867,1332,7.357,1333,6.242,1334,4.292,1335,7.276,1336,2.922,1337,5.086,1338,2.922,1339,5.971,1340,4.292,1341,2.922,1342,4.292,1343,4.292,1344,2.922,1345,4.292,1346,2.922,1347,2.922,1348,2.922,1349,2.922,1350,2.922,1351,2.515,1352,2.515,1353,2.922,1354,2.515,1355,2.515,1356,3.695,1357,2.515,1358,2.515,1359,2.922,1360,2.922]],["title/dependencies.html",[144,2.014,1361,3.14]],["body/dependencies.html",[21,0.018,43,0.012,44,0.015,45,0.012,69,0.587,144,2.394,161,1.866,194,3.627,216,3.23,309,1.779,504,4.525,508,4.629,509,4.629,605,3.23,1362,5.377,1363,7.754,1364,5.377,1365,5.377,1366,5.377,1367,5.377,1368,5.377,1369,5.377,1370,5.377,1371,5.377,1372,5.377,1373,5.377]],["title/miscellaneous/enumerations.html",[1374,1.886,1375,3.893]],["body/miscellaneous/enumerations.html",[6,3.255,7,0.387,12,1.082,21,0.018,26,4.01,29,4.349,30,4.349,43,0.012,44,0.014,45,0.012,114,1.23,172,2.658,238,2.679,292,2.243,382,1.519,391,2.622,425,2.829,443,2.763,476,3.026,486,3.485,637,2.505,643,2.829,644,3.026,645,4.04,646,3.026,647,3.026,648,3.026,649,3.026,650,3.026,651,3.026,652,2.658,653,2.829,707,3.53,764,3.53,978,3.875,985,4.336,1374,3.026,1375,4.336,1376,5.037,1377,5.037,1378,5.037]],["title/miscellaneous/functions.html",[1374,1.886,1379,3.893]],["body/miscellaneous/functions.html",[7,0.445,9,1.263,21,0.017,43,0.013,44,0.016,45,0.013,56,0.941,64,1.324,66,1.041,209,1.453,1100,4.73,1351,4.989,1352,5.81,1374,3.481,1379,4.989,1380,5.795,1381,5.795,1382,6.749,1383,5.795]],["title/index.html",[7,0.241,1294,2.703,1295,2.703]],["body/index.html",[4,0.153,5,0.115,21,0.018,23,0.587,24,0.936,33,0.936,35,1.633,37,4.186,43,0.005,44,0.008,45,0.005,48,3.107,56,0.587,70,0.985,73,0.558,90,1.374,91,0.985,136,0.788,141,0.809,144,1.038,168,2.006,194,1.309,210,2.006,237,0.809,382,1.726,421,1.793,432,2.006,434,1.506,437,1.633,441,2.006,443,1.038,469,1.506,473,3.114,485,2.535,571,1.633,589,1.506,652,1.23,746,2.006,755,3.817,758,4.657,797,3.844,798,4.657,799,2.006,800,3.817,801,2.006,852,2.006,889,2.006,890,3.114,904,2.006,918,2.006,919,2.006,925,4.404,926,2.006,943,2.006,1028,1.793,1030,1.793,1113,3.817,1200,2.006,1227,2.006,1241,2.783,1268,4.302,1296,1.793,1298,5.459,1299,5.913,1302,2.006,1303,4.985,1304,5.681,1310,2.006,1320,2.006,1329,4.657,1384,2.33,1385,3.617,1386,3.617,1387,2.33,1388,2.33,1389,2.33,1390,3.617,1391,7.326,1392,4.433,1393,4.433,1394,2.33,1395,5.974,1396,2.006,1397,4.997,1398,2.33,1399,7.055,1400,3.617,1401,2.33,1402,2.33,1403,2.33,1404,2.33,1405,2.33,1406,2.33,1407,5.725,1408,4.433,1409,2.33,1410,3.617,1411,2.33,1412,4.433,1413,2.33,1414,2.33,1415,2.33,1416,2.33,1417,4.433,1418,2.33,1419,4.997,1420,2.33,1421,2.33,1422,2.33,1423,2.33,1424,2.33,1425,2.33,1426,2.33,1427,3.617,1428,2.33,1429,4.433,1430,2.33,1431,2.33,1432,2.33,1433,2.33,1434,2.33,1435,2.33,1436,3.817,1437,3.617,1438,2.33,1439,5.41,1440,4.433,1441,2.33,1442,3.617,1443,2.33,1444,2.33,1445,2.33,1446,2.33,1447,2.33,1448,2.33,1449,2.33,1450,4.433,1451,2.33,1452,2.33,1453,2.33,1454,2.33,1455,2.33,1456,2.33,1457,2.33,1458,2.33,1459,3.617,1460,2.33,1461,3.617,1462,6.48,1463,2.33,1464,2.33,1465,2.33,1466,2.33,1467,2.33,1468,2.33,1469,2.33,1470,2.33,1471,3.617,1472,3.617,1473,3.617,1474,2.33,1475,4.997,1476,2.33,1477,2.33,1478,3.617,1479,2.33,1480,2.33,1481,2.33,1482,2.33,1483,2.33,1484,2.33,1485,2.33,1486,2.33,1487,2.33,1488,4.997,1489,2.33,1490,5.725,1491,2.33,1492,2.33,1493,2.33,1494,6.599,1495,4.433,1496,4.997,1497,2.33,1498,3.617,1499,2.33,1500,3.617,1501,2.33,1502,2.33,1503,2.33,1504,2.33,1505,4.433,1506,2.33,1507,2.33,1508,3.617,1509,3.617,1510,2.33,1511,2.33,1512,2.33,1513,2.33,1514,4.997,1515,2.33,1516,2.33,1517,2.33,1518,2.33,1519,2.33,1520,2.33,1521,2.33,1522,2.33,1523,2.33,1524,2.33,1525,4.433,1526,3.617,1527,3.617,1528,2.33,1529,2.33,1530,2.33,1531,2.33,1532,2.33,1533,2.33,1534,2.33,1535,2.33,1536,3.617,1537,3.617,1538,2.33,1539,2.33,1540,2.33,1541,2.33,1542,2.33,1543,3.617,1544,4.433,1545,2.33,1546,2.33,1547,2.33,1548,2.33,1549,2.33,1550,2.33,1551,2.33,1552,2.33,1553,4.997,1554,3.617,1555,4.433,1556,2.33,1557,2.33,1558,2.33,1559,2.33,1560,2.33,1561,2.33,1562,2.33,1563,2.33,1564,2.33,1565,2.33,1566,2.33,1567,2.33,1568,2.33,1569,2.33,1570,2.33,1571,3.617,1572,2.33,1573,2.33,1574,2.33,1575,2.33,1576,2.33,1577,2.33,1578,2.33,1579,2.33,1580,2.33,1581,2.33,1582,2.33,1583,2.33,1584,2.33,1585,2.33,1586,2.33,1587,2.33,1588,2.33,1589,2.33,1590,2.33,1591,2.33,1592,2.33,1593,2.33,1594,2.33,1595,2.33,1596,2.33,1597,2.33,1598,3.617,1599,2.33,1600,2.33,1601,3.617,1602,2.33,1603,2.33,1604,2.33,1605,2.33,1606,2.33,1607,4.433,1608,2.33,1609,2.33,1610,2.33,1611,2.33,1612,2.33,1613,2.33,1614,2.33,1615,2.33,1616,2.33,1617,2.33]],["title/modules.html",[143,2.412]],["body/modules.html",[21,0.015,43,0.013,44,0.015,45,0.013,142,3.899,143,2.616,153,3.595,194,4.263,211,3.899,252,3.899,256,3.125,697,3.899,1082,3.899,1618,7.589,1619,7.589,1620,7.589]],["title/overview.html",[1621,4.417]],["body/overview.html",[2,1.591,21,0.018,43,0.009,44,0.012,45,0.009,50,1.872,51,4.17,72,0.336,82,1.908,83,1.189,94,0.86,97,1.035,101,1.607,103,1.607,105,1.607,108,1.607,110,1.607,113,1.607,115,1.607,117,1.822,119,1.607,122,1.607,124,1.607,126,1.607,128,1.607,131,1.607,133,1.607,135,1.607,136,0.82,138,1.74,141,1.306,142,4.865,143,1.769,144,1.676,145,1.986,146,1.986,147,1.986,148,1.986,149,3.24,150,3.24,151,3.24,152,3.24,153,4.937,154,2.709,155,1.872,211,4.4,212,3.24,213,3.24,252,5.355,253,3.24,254,3.24,255,3.24,256,4.11,279,2.114,477,2.638,493,3.24,495,3.24,496,3.24,497,3.24,498,3.777,499,3.777,697,4.753,698,3.24,699,3.24,808,3.777,1082,4.4,1083,3.24,1084,3.24,1157,3.24,1158,3.24,1159,3.24,1621,3.24,1622,3.764,1623,3.764,1624,3.764,1625,3.764,1626,3.764]],["title/miscellaneous/variables.html",[1374,1.886,1627,3.893]],["body/miscellaneous/variables.html",[1,1.832,7,0.213,11,2.67,12,0.761,13,1.84,14,3.285,15,2.965,16,1.84,17,1.794,18,2.67,20,0.741,21,0.018,22,2.67,23,0.949,24,1.66,32,1.983,43,0.006,44,0.01,45,0.006,51,1.668,52,2.896,61,1.305,70,2.311,79,1.796,90,0.763,114,0.978,137,1.136,138,0.696,164,1.607,228,3.777,237,2.487,238,2.487,249,2.136,292,2.435,293,3.048,297,1.305,299,2.605,301,1.305,306,1.305,310,3.284,315,2.896,316,2.896,317,2.896,318,2.896,319,2.896,320,2.896,380,1.943,382,1.649,405,2.549,426,1.946,443,1.236,637,1.381,733,4.883,825,1.668,845,2.896,975,3.179,1024,2.136,1027,2.39,1028,2.136,1029,2.39,1030,2.136,1031,2.39,1032,2.39,1033,2.39,1034,2.39,1035,2.39,1036,2.39,1037,2.39,1038,2.39,1039,2.39,1040,2.39,1041,2.39,1042,2.39,1043,2.39,1044,2.39,1045,4.206,1046,2.39,1047,3.179,1048,2.39,1049,3.558,1050,3.558,1051,3.558,1052,5.033,1053,5.033,1054,3.558,1055,3.558,1056,2.39,1057,2.39,1058,4.25,1059,3.558,1060,2.39,1061,2.39,1062,2.39,1063,2.39,1064,2.39,1065,3.558,1066,2.39,1067,3.558,1068,3.558,1069,4.25,1070,2.39,1071,2.39,1072,3.558,1073,3.558,1074,2.39,1160,2.136,1163,2.39,1165,2.39,1167,2.39,1168,2.39,1170,2.39,1172,2.39,1174,2.39,1176,2.39,1178,2.39,1180,2.39,1183,2.39,1185,2.39,1186,2.39,1188,2.39,1190,2.39,1196,3.179,1303,3.179,1354,2.39,1355,2.39,1356,2.39,1357,3.558,1358,3.558,1374,1.668,1396,2.39,1436,3.558,1627,2.39,1628,6.665,1629,4.133,1630,4.936,1631,2.777,1632,2.777,1633,2.777,1634,2.777,1635,4.133,1636,4.133,1637,4.133,1638,4.133,1639,4.133,1640,2.777]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":837,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1306,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1332,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1333,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1331,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1338,"title":{},"body":{"coverage.html":{}}}],["08",{"_index":1308,"title":{},"body":{"changelog.html":{}}}],["0e4e9dc",{"_index":1324,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":808,"title":{"interfaces/LoggedInUser-1.html":{}},"body":{"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1522,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1144,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["100",{"_index":636,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1048,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":954,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["10px",{"_index":940,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["11",{"_index":1626,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1041,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["12.0.0",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["15:00:00",{"_index":1039,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["17",{"_index":1623,"title":{},"body":{"overview.html":{}}}],["19:00:00",{"_index":1043,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":1114,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["2.0.0",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1038,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":1042,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["2021",{"_index":1307,"title":{},"body":{"changelog.html":{}}}],["20px",{"_index":848,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["21",{"_index":1309,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1037,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":953,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["2px",{"_index":835,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["3",{"_index":1625,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":1217,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["400px",{"_index":1156,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["401",{"_index":750,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["404",{"_index":1080,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["42",{"_index":1031,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["43",{"_index":1061,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["443:443",{"_index":1444,"title":{},"body":{"index.html":{}}}],["50",{"_index":844,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/RegisterFormComponent.html":{}}}],["500",{"_index":248,"title":{},"body":{"components/AuthComponent.html":{}}}],["50px",{"_index":816,"title":{},"body":{"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{}}}],["5809b0f",{"_index":1317,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1624,"title":{},"body":{"overview.html":{}}}],["6.6.7",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["68d0e53",{"_index":1327,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1622,"title":{},"body":{"overview.html":{}}}],["75px",{"_index":455,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["8",{"_index":1119,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["80:8080",{"_index":1443,"title":{},"body":{"index.html":{}}}],["88c485a",{"_index":1318,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":838,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["ab",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["abstractcontrol",{"_index":603,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["accent",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnackbarService.html":{}}}],["accept",{"_index":1413,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":581,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["according",{"_index":1550,"title":{},"body":{"index.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"interfaces/ForogtPasswordDto.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["account!.firstname",{"_index":423,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["account)?.email",{"_index":407,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["account.email",{"_index":911,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["account.isconfirmed",{"_index":1066,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["account?.email",{"_index":952,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["account?.firstname",{"_index":910,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["account?.isconfirmed",{"_index":397,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{}}}],["accountid",{"_index":1125,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accountkey",{"_index":1264,"title":{},"body":{"injectables/UserService.html":{}}}],["accountsubject",{"_index":1265,"title":{},"body":{"injectables/UserService.html":{}}}],["actions",{"_index":1527,"title":{},"body":{"index.html":{}}}],["activatedroute",{"_index":368,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["actual_component",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["add",{"_index":758,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"index.html":{}}}],["add/modify/delete",{"_index":1551,"title":{},"body":{"index.html":{}}}],["addclass",{"_index":1256,"title":{},"body":{"injectables/ThemeService.html":{}}}],["added",{"_index":746,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"index.html":{}}}],["address",{"_index":429,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["adipisicing",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["admin",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"miscellaneous/enumerations.html":{}}}],["advisable",{"_index":1558,"title":{},"body":{"index.html":{}}}],["afterclosed",{"_index":614,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{}}}],["afterviewchecked",{"_index":532,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["again",{"_index":924,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["alias",{"_index":1428,"title":{},"body":{"index.html":{}}}],["allowed",{"_index":1314,"title":{},"body":{"changelog.html":{}}}],["alphanumeric",{"_index":1115,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["already",{"_index":443,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["always",{"_index":1321,"title":{},"body":{"changelog.html":{}}}],["amet",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["analyze",{"_index":1594,"title":{},"body":{"index.html":{}}}],["analyzemake",{"_index":1597,"title":{},"body":{"index.html":{}}}],["analyzes",{"_index":1584,"title":{},"body":{"index.html":{}}}],["angular",{"_index":798,"title":{},"body":{"components/LayoutComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":216,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":69,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":605,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1164,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1166,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":387,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":1169,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1171,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1173,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1175,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1177,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":1179,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":1181,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":831,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":1187,"title":{},"body":{"modules/SharedModule.html":{},"injectables/SnackbarService.html":{}}}],["angular/material/tabs",{"_index":1189,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1191,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":504,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"modules/HomeModule.html":{},"components/LoginFormComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/service",{"_index":508,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["animi",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{}}}],["api",{"_index":1030,"title":{},"body":{"interfaces/MockUser.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apierror",{"_index":46,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["apierror).message",{"_index":1106,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["apierror)?.message",{"_index":732,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["apipath",{"_index":57,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["apipathpipe",{"_index":51,"title":{"pipes/ApiPathPipe.html":{}},"body":{"pipes/ApiPathPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":82,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdescription",{"_index":547,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{}}}],["appdescriptionelement",{"_index":545,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["application",{"_index":926,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["applications",{"_index":1452,"title":{},"body":{"index.html":{}}}],["applypropertheme",{"_index":1226,"title":{},"body":{"injectables/ThemeService.html":{}}}],["applypropertheme(isdarktheme",{"_index":1233,"title":{},"body":{"injectables/ThemeService.html":{}}}],["appmodule",{"_index":142,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":186,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apps",{"_index":1585,"title":{},"body":{"index.html":{}}}],["apptitle",{"_index":546,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{}}}],["apptitleelement",{"_index":543,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["appversion",{"_index":549,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{}}}],["areconsolesallowed",{"_index":979,"title":{},"body":{"injectables/LogService.html":{}}}],["article",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"components/ArticleComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["article'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["article.component",{"_index":220,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.component.html",{"_index":206,"title":{},"body":{"components/ArticleComponent.html":{}}}],["article.component.scss",{"_index":204,"title":{},"body":{"components/ArticleComponent.html":{}}}],["articlecomponent",{"_index":101,"title":{"components/ArticleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["articlemodule",{"_index":211,"title":{"modules/ArticleModule.html":{}},"body":{"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articles",{"_index":802,"title":{},"body":{"components/LayoutComponent.html":{}}}],["asperiores",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["asset",{"_index":1613,"title":{},"body":{"index.html":{}}}],["assets",{"_index":1611,"title":{},"body":{"index.html":{}}}],["assets/images/default_${this.default}.jpg",{"_index":779,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["assets/images/default_broken.jpg",{"_index":778,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["assumenda",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["async",{"_index":1129,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["attention",{"_index":1480,"title":{},"body":{"index.html":{}}}],["autem",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{}}}],["auth",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth.component",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.component.html",{"_index":225,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":224,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.mock",{"_index":242,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["auth.model",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth.service",{"_index":392,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["authcomponent",{"_index":103,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticate",{"_index":1152,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["autherror",{"_index":391,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["autherror.emailconfirmed",{"_index":420,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["autherror.emailexists",{"_index":1111,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["autherror.emailnotfound",{"_index":623,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["autherror.invalidemail",{"_index":1018,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["autherror.invalidpassword",{"_index":1020,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["autherror.newpasswordmustbedifferentfromcurrent",{"_index":1147,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["authmodule",{"_index":252,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":742,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["authservice",{"_index":278,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["auto",{"_index":840,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["automatically",{"_index":1412,"title":{},"body":{"index.html":{}}}],["available",{"_index":889,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["avatar",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["backend",{"_index":1387,"title":{},"body":{"index.html":{}}}],["bar",{"_index":1182,"title":{},"body":{"modules/SharedModule.html":{},"injectables/SnackbarService.html":{}}}],["basically",{"_index":1466,"title":{},"body":{"index.html":{}}}],["bb2997f",{"_index":1315,"title":{},"body":{"changelog.html":{}}}],["bearer",{"_index":743,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["before",{"_index":1500,"title":{},"body":{"index.html":{}}}],["best",{"_index":1592,"title":{},"body":{"index.html":{}}}],["better",{"_index":1312,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":451,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["book",{"_index":558,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/Account.html":{},"pipes/ApiPathPipe.html":{},"interfaces/LoggedInUser-1.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{}}}],["bootstrap",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":842,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["brand",{"_index":841,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["breaking",{"_index":1508,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1620,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":194,"title":{},"body":{"classes/AppPage.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":196,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":506,"title":{},"body":{"modules/CoreModule.html":{}}}],["browseranimationsmodule",{"_index":505,"title":{},"body":{"modules/CoreModule.html":{}}}],["browsermodule",{"_index":503,"title":{},"body":{"modules/CoreModule.html":{}}}],["bug",{"_index":1319,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1440,"title":{},"body":{"index.html":{}}}],["built",{"_index":1562,"title":{},"body":{"index.html":{}}}],["bump",{"_index":1514,"title":{},"body":{"index.html":{}}}],["bumps",{"_index":1510,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":1596,"title":{},"body":{"index.html":{}}}],["button",{"_index":445,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["button($sizeinpixels",{"_index":930,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["button(100px",{"_index":939,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["button(36px",{"_index":937,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["byte",{"_index":1574,"title":{},"body":{"index.html":{}}}],["called",{"_index":1474,"title":{},"body":{"index.html":{}}}],["came",{"_index":1576,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":221,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["cancel",{"_index":927,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["card",{"_index":1154,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["catch",{"_index":721,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror",{"_index":717,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror((err",{"_index":722,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["center",{"_index":1210,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["change",{"_index":589,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["changed",{"_index":1151,"title":{},"body":{"components/ResetPasswordComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["changedetectionstrategy",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["changedetectorref",{"_index":232,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["changelog",{"_index":1296,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changelog.md",{"_index":1541,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1298,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["characters",{"_index":1116,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["check",{"_index":469,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/LoginFormComponent.html":{},"index.html":{}}}],["chrome",{"_index":1417,"title":{},"body":{"index.html":{}}}],["chromium",{"_index":1423,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1604,"title":{},"body":{"index.html":{}}}],["class",{"_index":72,"title":{"classes/AppPage.html":{}},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":187,"title":{},"body":{"classes/AppPage.html":{}}}],["cli",{"_index":1487,"title":{},"body":{"index.html":{}}}],["click",{"_index":432,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"index.html":{}}}],["clone",{"_index":1599,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":212,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_declarations",{"_index":213,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":493,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":495,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":496,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":494,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_providers",{"_index":497,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":698,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":699,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":700,"title":{},"body":{"modules/HomeModule.html":{}}}],["cluster_notfoundmodule",{"_index":1083,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_notfoundmodule_declarations",{"_index":1084,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1157,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1159,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1158,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":1407,"title":{},"body":{"index.html":{}}}],["collecting",{"_index":1586,"title":{},"body":{"index.html":{}}}],["color",{"_index":1206,"title":{},"body":{"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{}}}],["column",{"_index":806,"title":{},"body":{"components/LayoutComponent.html":{}}}],["comfortable",{"_index":1513,"title":{},"body":{"index.html":{}}}],["coming",{"_index":1581,"title":{},"body":{"index.html":{}}}],["command",{"_index":1429,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1447,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1304,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commitizen",{"_index":1473,"title":{},"body":{"index.html":{}}}],["commits",{"_index":1461,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":215,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{}}}],["compodoc",{"_index":1385,"title":{},"body":{"index.html":{}}}],["component",{"_index":81,"title":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["components",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"overview.html":{}}}],["confirm",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{}}}],["confirmation",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailDialogComponent.html":{}}}],["confirmed",{"_index":425,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["confirmedmockuser",{"_index":1068,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["confirmeduserguard",{"_index":217,"title":{"guards/ConfirmedUserGuard.html":{}},"body":{"modules/ArticleModule.html":{},"guards/ConfirmedUserGuard.html":{},"coverage.html":{}}}],["confirmemail",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmemail$(token",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{}}}],["confirmemailcomponent",{"_index":105,"title":{"components/ConfirmEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmemaildialogcomponent",{"_index":108,"title":{"components/ConfirmEmailDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmemailfortest",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmemailfortest$(account",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmpassword",{"_index":1109,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["consectetur",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["consequuntur",{"_index":690,"title":{},"body":{"components/HomeComponent.html":{}}}],["considered",{"_index":1506,"title":{},"body":{"index.html":{}}}],["console.error(`${logsubject.error",{"_index":988,"title":{},"body":{"injectables/LogService.html":{}}}],["console.info(`${subject",{"_index":987,"title":{},"body":{"injectables/LogService.html":{}}}],["const",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":230,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["constructor(activatedroute",{"_index":367,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["constructor(changedetectorref",{"_index":231,"title":{},"body":{"components/AuthComponent.html":{}}}],["constructor(dialogref",{"_index":462,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["constructor(formbuilder",{"_index":583,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(localeid",{"_index":862,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["constructor(localstorageservice",{"_index":1229,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["constructor(logservice",{"_index":480,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["constructor(metaservice",{"_index":781,"title":{},"body":{"components/LayoutComponent.html":{}}}],["constructor(private",{"_index":243,"title":{},"body":{"components/AuthComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/SnackbarService.html":{}}}],["constructor(snackbar",{"_index":1201,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["constructor(userservice",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["contain",{"_index":847,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["container",{"_index":1438,"title":{},"body":{"index.html":{}}}],["containerized",{"_index":1437,"title":{},"body":{"index.html":{}}}],["content",{"_index":198,"title":{},"body":{"classes/AppPage.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["context",{"_index":1357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":427,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["controlname",{"_index":1383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convention",{"_index":1463,"title":{},"body":{"index.html":{}}}],["conventional",{"_index":1460,"title":{},"body":{"index.html":{}}}],["core/core.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/confirmed",{"_index":218,"title":{},"body":{"modules/ArticleModule.html":{}}}],["core/guards/not",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/guards/user.guard",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/models/error.model",{"_index":1099,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["core/models/user.model",{"_index":390,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{}}}],["core/services/snackbar.service",{"_index":606,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/services/user.service",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{}}}],["coremodule",{"_index":153,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":1543,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":1386,"title":{},"body":{"index.html":{}}}],["cover",{"_index":935,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["coverage",{"_index":1328,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1427,"title":{},"body":{"index.html":{}}}],["create/update",{"_index":1540,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["createformgroup",{"_index":578,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["createformgroup(updateon",{"_index":587,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["credentials",{"_index":923,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["css",{"_index":760,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["current",{"_index":653,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["cz",{"_index":1475,"title":{},"body":{"index.html":{}}}],["dark",{"_index":917,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{},"changelog.html":{}}}],["dark)')?.matches",{"_index":1252,"title":{},"body":{"injectables/ThemeService.html":{}}}],["database",{"_index":638,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{}}}],["datatransfer",{"_index":868,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["datatransfer)?.files)[0",{"_index":908,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["date",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["date('october",{"_index":1040,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["date('september",{"_index":1036,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["debug",{"_index":1410,"title":{},"body":{"index.html":{}}}],["debugger",{"_index":1404,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decorators",{"_index":790,"title":{},"body":{"components/LayoutComponent.html":{}}}],["deep",{"_index":941,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["default",{"_index":237,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default.directive",{"_index":1193,"title":{},"body":{"modules/SharedModule.html":{},"changelog.html":{}}}],["default.directive.ts",{"_index":754,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"coverage.html":{}}}],["default.directive.ts:15",{"_index":767,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["default.directive.ts:16",{"_index":768,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["default.directive.ts:19",{"_index":769,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["defined",{"_index":62,"title":{},"body":{"pipes/ApiPathPipe.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":1026,"title":{},"body":{"interfaces/MockUser.html":{}}}],["delay(mockdelay",{"_index":1053,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1267,"title":{},"body":{"injectables/UserService.html":{}}}],["demo",{"_index":890,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["demos",{"_index":1538,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":144,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":571,"title":{},"body":{"interfaces/Destination.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"index.html":{}}}],["destination",{"_index":530,"title":{"interfaces/Destination.html":{}},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"coverage.html":{}}}],["destination.icon",{"_index":833,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["destination.name",{"_index":834,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["destinations",{"_index":548,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["determines",{"_index":1572,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1396,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["developer",{"_index":1591,"title":{},"body":{"index.html":{}}}],["development",{"_index":1392,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":369,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{}}}],["dialog'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dialog.component",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{}}}],["dialog.component.html",{"_index":460,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog.component.scss",{"_index":459,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog.component.ts",{"_index":458,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":464,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":466,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":467,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog/confirm",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["dialog/forgot",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":465,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["different",{"_index":652,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["differently",{"_index":1501,"title":{},"body":{"index.html":{}}}],["dignissimos",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{}}}],["direction",{"_index":805,"title":{},"body":{"components/LayoutComponent.html":{}}}],["directive",{"_index":97,"title":{"directives/ImageDefaultDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directives/image",{"_index":1192,"title":{},"body":{"modules/SharedModule.html":{}}}],["display",{"_index":447,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["distro",{"_index":1435,"title":{},"body":{"index.html":{}}}],["distros",{"_index":1426,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1455,"title":{},"body":{"index.html":{}}}],["docgit",{"_index":1457,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1439,"title":{},"body":{"index.html":{}}}],["docker:build:prod",{"_index":1448,"title":{},"body":{"index.html":{}}}],["docker:proddocumentation",{"_index":1449,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1539,"title":{},"body":{"index.html":{}}}],["document.body",{"_index":1258,"title":{},"body":{"injectables/ThemeService.html":{}}}],["documentation",{"_index":1329,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":1300,"title":{},"body":{"changelog.html":{}}}],["doe",{"_index":1035,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["doesn't",{"_index":1121,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["doesn\\'t",{"_index":1123,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dolor",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["dom",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["done",{"_index":421,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["ducimus",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["duration",{"_index":1216,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":188,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":193,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":191,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":1573,"title":{},"body":{"index.html":{}}}],["easily",{"_index":1408,"title":{},"body":{"index.html":{}}}],["element",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["element(by.css('app",{"_index":197,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":533,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["elit",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["email",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["email.component",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["email.component.html",{"_index":359,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.scss",{"_index":358,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts",{"_index":356,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:26",{"_index":384,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:27",{"_index":385,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:28",{"_index":381,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:29",{"_index":386,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:30",{"_index":379,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:31",{"_index":372,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:42",{"_index":374,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:58",{"_index":373,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:63",{"_index":375,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:81",{"_index":378,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.tolowercase",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/${email",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/${token",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/:token",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{}}}],["email/confirm",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["emailconfirmed",{"_index":648,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["emailexists",{"_index":647,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["emailnotfound",{"_index":649,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["empty",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["en",{"_index":1384,"title":{},"body":{"index.html":{}}}],["enable",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enabled",{"_index":525,"title":{},"body":{"modules/CoreModule.html":{}}}],["end",{"_index":1468,"title":{},"body":{"index.html":{}}}],["english",{"_index":920,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["enim",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{}}}],["enter",{"_index":628,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["enum",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ForogtPasswordDto.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{}}}],["enumerations",{"_index":1375,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":70,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":240,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/LayoutSettingsComponent.html":{}}}],["environment.apiurl}/${src",{"_index":80,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["environment.apiurl}/accounts/${account.id}/avatar",{"_index":1292,"title":{},"body":{"injectables/UserService.html":{}}}],["environment.apiurl}/auth/forgot",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apiurl}/auth/resend",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apiurl}/auth/reset",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.production",{"_index":526,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LogService.html":{}}}],["environment.version",{"_index":550,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["environments/environment",{"_index":71,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":418,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["err.error",{"_index":727,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["err.message",{"_index":724,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["err.status",{"_index":749,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["err?.error?.message",{"_index":730,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error",{"_index":764,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"injectables/LogService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('email",{"_index":1060,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["error('invalid",{"_index":1054,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["error(autherror.emailconfirmed",{"_index":1065,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["error(autherror.invalidtoken",{"_index":1067,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["error(message",{"_index":980,"title":{},"body":{"injectables/LogService.html":{}}}],["error(messagetoenduser",{"_index":734,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error).message",{"_index":899,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{}}}],["error)?.message",{"_index":419,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["error.interceptor",{"_index":511,"title":{},"body":{"modules/CoreModule.html":{}}}],["error.interceptor.ts",{"_index":706,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:16",{"_index":708,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:19",{"_index":712,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error_outline",{"_index":428,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errorevent",{"_index":729,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["errorhappens",{"_index":994,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["errormessage",{"_index":226,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["esse",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["establish",{"_index":1533,"title":{},"body":{"index.html":{}}}],["event",{"_index":867,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["event.preventdefault",{"_index":903,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["event.target",{"_index":905,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["eventemitter",{"_index":996,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["everything",{"_index":441,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"index.html":{}}}],["example",{"_index":37,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"index.html":{}}}],["exists",{"_index":637,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["exit_to_app",{"_index":912,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["experimental",{"_index":1507,"title":{},"body":{"index.html":{}}}],["expired",{"_index":438,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["explorer",{"_index":1571,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["expressions",{"_index":78,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["extends",{"_index":1025,"title":{},"body":{"interfaces/MockUser.html":{}}}],["extension",{"_index":1411,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":1415,"title":{},"body":{"index.html":{}}}],["ey",{"_index":1058,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":582,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["fail",{"_index":1489,"title":{},"body":{"index.html":{}}}],["fake",{"_index":1027,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":380,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["feat",{"_index":1532,"title":{},"body":{"index.html":{}}}],["features",{"_index":1310,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["feel",{"_index":1512,"title":{},"body":{"index.html":{}}}],["few",{"_index":640,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{}}}],["field",{"_index":632,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["file(s",{"_index":1557,"title":{},"body":{"index.html":{}}}],["fill",{"_index":631,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["finalize",{"_index":388,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["first",{"_index":1113,"title":{},"body":{"components/RegisterFormComponent.html":{},"index.html":{}}}],["firstname",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["fit",{"_index":846,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["fix",{"_index":1531,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":1320,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flex",{"_index":448,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["flow",{"_index":1458,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1419,"title":{},"body":{"index.html":{}}}],["follow",{"_index":473,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"index.html":{}}}],["following",{"_index":1526,"title":{},"body":{"index.html":{}}}],["font",{"_index":453,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/LayoutNavComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["footer",{"_index":804,"title":{},"body":{"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{}}}],["footer'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["footer.component",{"_index":515,"title":{},"body":{"modules/CoreModule.html":{}}}],["footer.component.html",{"_index":812,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer.component.scss",{"_index":811,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer.component.ts",{"_index":810,"title":{},"body":{"components/LayoutFooterComponent.html":{},"coverage.html":{}}}],["footer.component.ts:15",{"_index":813,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer.component.ts:16",{"_index":814,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer.component.ts:18",{"_index":815,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer/layout",{"_index":514,"title":{},"body":{"modules/CoreModule.html":{},"components/LayoutFooterComponent.html":{},"coverage.html":{}}}],["forbidden",{"_index":751,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["forgot",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{}}}],["forgotpassword",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword$(email",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword$(this.f.email?.value",{"_index":612,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordcomponent",{"_index":110,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpassworddialogcomponent",{"_index":113,"title":{"components/ForgotPasswordDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpasswordfortest",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":635,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form.component",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{}}}],["form.component.html",{"_index":992,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.scss",{"_index":991,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts",{"_index":990,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1001,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:130",{"_index":1092,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:30",{"_index":997,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:31",{"_index":1006,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":1008,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:33",{"_index":1009,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":1005,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:35",{"_index":1007,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:36",{"_index":1097,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:37",{"_index":1010,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:38",{"_index":1096,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:39",{"_index":995,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:41",{"_index":1098,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:43",{"_index":1090,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:50",{"_index":1003,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:52",{"_index":1002,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:55",{"_index":1093,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:57",{"_index":1004,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:62",{"_index":1095,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:79",{"_index":999,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:91",{"_index":1094,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:97",{"_index":1091,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form/login",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/register",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":1485,"title":{},"body":{"index.html":{}}}],["formbuilder",{"_index":584,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formdata",{"_index":892,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/UserService.html":{}}}],["formdata.append('file",{"_index":893,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["formgroup",{"_index":576,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formgroup.controls.email.seterrors",{"_index":1112,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["formgroup.setvalue(previousvalue",{"_index":1017,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":1161,"title":{},"body":{"modules/SharedModule.html":{}}}],["forogtpassworddto",{"_index":642,"title":{"interfaces/ForogtPasswordDto.html":{}},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{}}}],["found",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/NotFoundComponent.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["found'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["found.component",{"_index":1086,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found.component.html",{"_index":1078,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1077,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1076,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:10",{"_index":1079,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.module').then((m",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["found.module.ts",{"_index":1085,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found/not",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"coverage.html":{}}}],["fr",{"_index":919,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["français",{"_index":921,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["french",{"_index":1402,"title":{},"body":{"index.html":{}}}],["full",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["function",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1379,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1554,"title":{},"body":{"index.html":{}}}],["generates",{"_index":1453,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1614,"title":{},"body":{"index.html":{}}}],["get(`${environment.apiurl}/auth/confirm",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["getf",{"_index":601,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["getfilefromevent",{"_index":856,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["getfilefromevent($event",{"_index":866,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["getiteminstorage",{"_index":958,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getiteminstorage(key",{"_index":962,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getting",{"_index":1294,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gettitletext",{"_index":189,"title":{},"body":{"classes/AppPage.html":{}}}],["ghost",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"miscellaneous/enumerations.html":{}}}],["git",{"_index":1462,"title":{},"body":{"index.html":{}}}],["github",{"_index":1536,"title":{},"body":{"index.html":{}}}],["go",{"_index":1617,"title":{},"body":{"index.html":{}}}],["good",{"_index":1616,"title":{},"body":{"index.html":{}}}],["google",{"_index":1416,"title":{},"body":{"index.html":{}}}],["group",{"_index":446,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["guard",{"_index":476,"title":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["guards",{"_index":477,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["guide",{"_index":1420,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1305,"title":{},"body":{"changelog.html":{}}}],["h1",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["h2",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["h3",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["h4",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["h5",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["handling",{"_index":1325,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":456,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["help",{"_index":1580,"title":{},"body":{"index.html":{}}}],["here",{"_index":1390,"title":{},"body":{"index.html":{}}}],["history",{"_index":1601,"title":{},"body":{"index.html":{}}}],["home",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Destination.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{}}}],["home'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["home.component",{"_index":702,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":115,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":697,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["hooks",{"_index":1606,"title":{},"body":{"index.html":{}}}],["horizontalposition",{"_index":1198,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["host",{"_index":36,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["hostbinding",{"_index":770,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["hostbinding('src",{"_index":772,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["hostlistener",{"_index":771,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["hostlistener('error",{"_index":774,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["hostlisteners",{"_index":763,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["htmlinputelement",{"_index":906,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["http",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["http://localhost:3000/api",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":502,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":501,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorinterceptor",{"_index":498,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["httperrorresponse",{"_index":713,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["httpevent",{"_index":714,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["httphandler",{"_index":711,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["httpinterceptor",{"_index":715,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["httpjwtinterceptor",{"_index":499,"title":{"interceptors/HttpJwtInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/HttpJwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["httprequest",{"_index":710,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["i18nsupport",{"_index":1567,"title":{},"body":{"index.html":{}}}],["icon",{"_index":452,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["icons",{"_index":1610,"title":{},"body":{"index.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1016,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["idfromurl",{"_index":1140,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["image",{"_index":757,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"changelog.html":{}}}],["imagedefaultdirective",{"_index":138,"title":{"directives/ImageDefaultDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":934,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["img[default",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["implements",{"_index":73,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["implicit",{"_index":720,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["import",{"_index":67,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["import('./article/article.module').then((m",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["import('./home/home.module').then((m",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["import('./not",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["important",{"_index":943,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["imports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"changelog.html":{}}}],["inbox",{"_index":431,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{}}}],["include",{"_index":936,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["increment",{"_index":1528,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["info(subject",{"_index":982,"title":{},"body":{"injectables/LogService.html":{}}}],["init",{"_index":1227,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["initial",{"_index":1316,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":882,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["inject(locale_id",{"_index":885,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["injectable",{"_index":277,"title":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.email",{"_index":1064,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.email.tolowercase",{"_index":1050,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.firstname",{"_index":1062,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.lastname",{"_index":1063,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.password",{"_index":1056,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":762,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["insights",{"_index":1590,"title":{},"body":{"index.html":{}}}],["install",{"_index":1398,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1445,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":728,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["instead",{"_index":1424,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":630,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["intercept",{"_index":707,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["intercept(request",{"_index":709,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["interceptor",{"_index":703,"title":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":704,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["interceptors/http",{"_index":510,"title":{},"body":{"modules/CoreModule.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"interfaces/Destination.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{}},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"interfaces/Destination.html":{},"interfaces/ForogtPasswordDto.html":{},"components/LayoutComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"interfaces/Destination.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"overview.html":{}}}],["internationalization",{"_index":1544,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":645,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["invalidemail",{"_index":644,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["invalidpassword",{"_index":646,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["invalidtoken",{"_index":650,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["ipsa",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{}}}],["ipsum",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["isaccountalreadyconfirmed",{"_index":360,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["isconfirmed",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["isdarktheme",{"_index":1235,"title":{},"body":{"injectables/ThemeService.html":{}}}],["isdarkthemetoggled",{"_index":855,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["isdarktoggled",{"_index":1223,"title":{},"body":{"injectables/ThemeService.html":{}}}],["isdarktoggledkey",{"_index":1224,"title":{},"body":{"injectables/ThemeService.html":{}}}],["isdestroyed",{"_index":361,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isemailcorrect",{"_index":1049,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["isformsubmitted",{"_index":1126,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isloading",{"_index":362,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["isparamscorrect",{"_index":1073,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["ispasswordcorrect",{"_index":1055,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["ispasswordhidden",{"_index":577,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isprocessed",{"_index":1072,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["isprocessing",{"_index":363,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["isresetpasswordfailed",{"_index":1127,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isresetpasswordsucceed",{"_index":1128,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["issourcefilled",{"_index":776,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["issuccess",{"_index":1070,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["isunknownuserallowedtonavigate",{"_index":551,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["isusablewithoutapi",{"_index":227,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/LayoutSettingsComponent.html":{}}}],["john",{"_index":1034,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["johndoe.test.token",{"_index":1046,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["johndoe@email.com",{"_index":1032,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["johndoepass123",{"_index":1033,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["json.parse(stringvalue",{"_index":970,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":973,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["justify",{"_index":449,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["jwt",{"_index":32,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ForogtPasswordDto.html":{},"interceptors/HttpJwtInterceptor.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["jwt.interceptor",{"_index":512,"title":{},"body":{"modules/CoreModule.html":{}}}],["jwt.interceptor.ts",{"_index":735,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"coverage.html":{}}}],["jwt.interceptor.ts:16",{"_index":736,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["jwt.interceptor.ts:22",{"_index":737,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["jwtkey",{"_index":1266,"title":{},"body":{"injectables/UserService.html":{}}}],["key",{"_index":607,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["keyword",{"_index":1243,"title":{},"body":{"injectables/ThemeService.html":{}}}],["kicks",{"_index":1517,"title":{},"body":{"index.html":{}}}],["know",{"_index":1421,"title":{},"body":{"index.html":{}}}],["known",{"_index":1516,"title":{},"body":{"index.html":{}}}],["landscape",{"_index":766,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["language",{"_index":1400,"title":{},"body":{"index.html":{}}}],["languages",{"_index":1546,"title":{},"body":{"index.html":{}}}],["large",{"_index":938,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["last",{"_index":1117,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["lastname",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["launch",{"_index":1409,"title":{},"body":{"index.html":{}}}],["layout",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["layout'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["layout.component.html",{"_index":540,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":541,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["layout/layout",{"_index":513,"title":{},"body":{"modules/CoreModule.html":{}}}],["layout/layout.component",{"_index":522,"title":{},"body":{"modules/CoreModule.html":{}}}],["layoutcomponent",{"_index":117,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutfootercomponent",{"_index":119,"title":{"components/LayoutFooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutnavcomponent",{"_index":122,"title":{"components/LayoutNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutsettingscomponent",{"_index":124,"title":{"components/LayoutSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutsidenavcomponent",{"_index":126,"title":{"components/LayoutSidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legacy",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["lib",{"_index":1568,"title":{},"body":{"index.html":{}}}],["light",{"_index":914,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{}}}],["line",{"_index":76,"title":{},"body":{"pipes/ApiPathPipe.html":{},"interceptors/HttpErrorInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{}}}],["link",{"_index":433,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["lint",{"_index":1484,"title":{},"body":{"index.html":{}}}],["linux",{"_index":1425,"title":{},"body":{"index.html":{}}}],["literal",{"_index":825,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["ln",{"_index":1431,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["loaded",{"_index":759,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["local",{"_index":1241,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["locale",{"_index":1553,"title":{},"body":{"index.html":{}}}],["locale_id",{"_index":883,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["localeid",{"_index":864,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["localize`:@@articles:articles",{"_index":557,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["localize`:@@home:home",{"_index":556,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["localized",{"_index":1552,"title":{},"body":{"index.html":{}}}],["localstorage.getitem(key",{"_index":969,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":976,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":972,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":955,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/LocalStorageService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["logged",{"_index":1313,"title":{},"body":{"changelog.html":{}}}],["loggedinuser",{"_index":31,"title":{"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{}},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["loggedinuser).pipe(delay(mockdelay",{"_index":1059,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["loggedinuser.account",{"_index":417,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["loggedinuser.jwt",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login$(input",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":297,"title":{"interfaces/LoginDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginformcomponent",{"_index":128,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginfortest",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginfortest$(input).pipe",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["logservice",{"_index":481,"title":{"injectables/LogService.html":{}},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["logsubject",{"_index":486,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"miscellaneous/enumerations.html":{}}}],["logsubject.intercept",{"_index":745,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["logsubject.store",{"_index":971,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["lorem",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["lowercaseemail",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["m.articlemodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["m.authmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["m.homemodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["m.notfoundmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["made",{"_index":1464,"title":{},"body":{"index.html":{}}}],["mailbox",{"_index":470,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["major",{"_index":1518,"title":{},"body":{"index.html":{}}}],["make",{"_index":1477,"title":{},"body":{"index.html":{}}}],["manually",{"_index":1478,"title":{},"body":{"index.html":{}}}],["map",{"_index":485,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["map((account",{"_index":489,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["mat",{"_index":942,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/SnackbarService.html":{}}}],["matbuttonmodule",{"_index":1163,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1165,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1122,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["match.validator",{"_index":1102,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["match.validator.ts",{"_index":1352,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":44,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdialog",{"_index":370,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{}}}],["matdialogmodule",{"_index":1167,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":463,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["matdividermodule",{"_index":1168,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["materialmodules",{"_index":1196,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1170,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":1172,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":1174,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1176,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":1178,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":1180,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1183,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenav",{"_index":827,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["matsidenavmodule",{"_index":1185,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1202,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["matsnackbarhorizontalposition",{"_index":1209,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["matsnackbarmodule",{"_index":1186,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbarref",{"_index":1208,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["matsnackbarverticalposition",{"_index":1212,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["mattabsmodule",{"_index":1188,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1190,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1155,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["measure",{"_index":1583,"title":{},"body":{"index.html":{}}}],["menu",{"_index":832,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["merge",{"_index":1563,"title":{},"body":{"index.html":{}}}],["message",{"_index":48,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/LogService.html":{},"injectables/SnackbarService.html":{},"index.html":{}}}],["messages.fr.xlf",{"_index":1564,"title":{},"body":{"index.html":{}}}],["messages.xlf",{"_index":1555,"title":{},"body":{"index.html":{}}}],["messages.{fr,others}.xlf",{"_index":1556,"title":{},"body":{"index.html":{}}}],["messagetodev",{"_index":723,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["messagetoenduser",{"_index":726,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["meta",{"_index":535,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["metaservice",{"_index":552,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["methods",{"_index":58,"title":{},"body":{"pipes/ApiPathPipe.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["metrics",{"_index":1589,"title":{},"body":{"index.html":{}}}],["miaborde",{"_index":1608,"title":{},"body":{"index.html":{}}}],["min",{"_index":807,"title":{},"body":{"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["minified",{"_index":1575,"title":{},"body":{"index.html":{}}}],["minima",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["minor",{"_index":1509,"title":{},"body":{"index.html":{}}}],["minutes",{"_index":641,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{}}}],["miscellaneous",{"_index":1374,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":928,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["mockdelay",{"_index":1047,"title":{},"body":{"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocked",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockuser",{"_index":228,"title":{"interfaces/MockUser.html":{}},"body":{"components/AuthComponent.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser.email",{"_index":1051,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["mockuser.id",{"_index":1074,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["mockuser.password",{"_index":1057,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["mockuser?.email",{"_index":250,"title":{},"body":{"components/AuthComponent.html":{}}}],["mockuser?.password",{"_index":251,"title":{},"body":{"components/AuthComponent.html":{}}}],["mode",{"_index":1395,"title":{},"body":{"index.html":{}}}],["models/error.model",{"_index":718,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["models/user.model",{"_index":537,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/UserService.html":{}}}],["modern",{"_index":1587,"title":{},"body":{"index.html":{}}}],["module",{"_index":141,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":143,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1511,"title":{},"body":{"index.html":{}}}],["monitoring",{"_index":1570,"title":{},"body":{"index.html":{}}}],["more",{"_index":1422,"title":{},"body":{"index.html":{}}}],["move",{"_index":1600,"title":{},"body":{"index.html":{}}}],["multi",{"_index":529,"title":{},"body":{"modules/CoreModule.html":{}}}],["multiple",{"_index":1545,"title":{},"body":{"index.html":{}}}],["mustmatchvalidator",{"_index":1100,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatchvalidator('password",{"_index":1110,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mustmatchvalidator(controlname",{"_index":1381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mustnotberejected",{"_index":625,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mustnotberejectedvalidator",{"_index":579,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["name",{"_index":56,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["natus",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{}}}],["nav",{"_index":819,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["nav.component",{"_index":517,"title":{},"body":{"modules/CoreModule.html":{}}}],["nav.component.html",{"_index":821,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.scss",{"_index":820,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts",{"_index":818,"title":{},"body":{"components/LayoutNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:18",{"_index":828,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:19",{"_index":824,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:20",{"_index":823,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:21",{"_index":826,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:23",{"_index":829,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:25",{"_index":830,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav/layout",{"_index":516,"title":{},"body":{"modules/CoreModule.html":{},"components/LayoutNavComponent.html":{},"coverage.html":{}}}],["navigateto",{"_index":190,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":1397,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1451,"title":{},"body":{"index.html":{}}}],["new",{"_index":382,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":654,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{}}}],["newpasswordmustbedifferentfromcurrent",{"_index":651,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["newrequest",{"_index":739,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["next",{"_index":75,"title":{},"body":{"pipes/ApiPathPipe.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"injectables/ThemeService.html":{}}}],["next.handle(newrequest).pipe",{"_index":747,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":719,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":797,"title":{},"body":{"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["ngafterviewchecked",{"_index":560,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["nginx",{"_index":1547,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":364,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngoninit",{"_index":207,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngx",{"_index":1566,"title":{},"body":{"index.html":{}}}],["nights_stay",{"_index":916,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["node.js",{"_index":1393,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":1481,"title":{},"body":{"index.html":{}}}],["normal",{"_index":850,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["notable",{"_index":1297,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":1498,"title":{},"body":{"index.html":{}}}],["notfoundcomponent",{"_index":131,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notfoundmodule",{"_index":1082,"title":{"modules/NotFoundModule.html":{}},"body":{"modules/NotFoundModule.html":{},"modules.html":{},"overview.html":{}}}],["notuserguard",{"_index":258,"title":{"guards/NotUserGuard.html":{}},"body":{"modules/AuthModule.html":{},"guards/NotUserGuard.html":{},"coverage.html":{}}}],["now",{"_index":424,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["npm",{"_index":1399,"title":{},"body":{"index.html":{}}}],["null",{"_index":618,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{}}}],["number",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":845,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["obligated",{"_index":1476,"title":{},"body":{"index.html":{}}}],["observable",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["occurrence",{"_index":1607,"title":{},"body":{"index.html":{}}}],["of(undefined",{"_index":1293,"title":{},"body":{"injectables/UserService.html":{}}}],["of(undefined).pipe",{"_index":1052,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":475,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["old",{"_index":436,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["onclose",{"_index":461,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["onclosedialog",{"_index":857,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{}}}],["ondestroy",{"_index":357,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":437,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["onerror",{"_index":775,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["onerrorhappens",{"_index":229,"title":{},"body":{"components/AuthComponent.html":{}}}],["onerrorhappens(errormessage",{"_index":235,"title":{},"body":{"components/AuthComponent.html":{}}}],["onimportimage",{"_index":858,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["onimportimage($event",{"_index":873,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["oninit",{"_index":202,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["onlogout",{"_index":859,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["onopendialog",{"_index":860,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["onopendialog(templateref",{"_index":876,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["onrequestconfirmemail",{"_index":365,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["onsubmit",{"_index":580,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ontoggledarktheme",{"_index":861,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["open",{"_index":1200,"title":{},"body":{"injectables/SnackbarService.html":{},"index.html":{}}}],["open(message",{"_index":1205,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["open_in_new",{"_index":1150,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1482,"title":{},"body":{"index.html":{}}}],["out",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"components/LayoutSettingsComponent.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":1011,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["outputs",{"_index":993,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["overview",{"_index":1621,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1442,"title":{},"body":{"index.html":{}}}],["package",{"_index":1361,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":1529,"title":{},"body":{"index.html":{}}}],["padding",{"_index":836,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["paddinginpixels",{"_index":931,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["page",{"_index":1081,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["pages",{"_index":1537,"title":{},"body":{"index.html":{}}}],["palette",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{}}}],["panelclass",{"_index":1220,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(idfromurl",{"_index":1143,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["password.component.html",{"_index":575,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":574,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":573,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:104",{"_index":1131,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:133",{"_index":1132,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":597,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":599,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":600,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":596,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":598,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":602,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1138,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:38",{"_index":586,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1136,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:40",{"_index":1137,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1139,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1130,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":594,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:52",{"_index":593,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":1134,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:57",{"_index":595,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:62",{"_index":1133,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:67",{"_index":1135,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:79",{"_index":590,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:93",{"_index":592,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/${id}/${token",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["password/${lowercaseemail",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["password/:id/:token",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["password/forgot",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":1120,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["patch",{"_index":1519,"title":{},"body":{"index.html":{}}}],["path",{"_index":33,"title":{},"body":{"interfaces/Account.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"interfaces/Destination.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser-1.html":{},"modules/NotFoundModule.html":{},"interfaces/Upload.html":{},"index.html":{}}}],["path.pipe",{"_index":1195,"title":{},"body":{"modules/SharedModule.html":{}}}],["path.pipe.ts",{"_index":54,"title":{},"body":{"pipes/ApiPathPipe.html":{},"coverage.html":{}}}],["path.pipe.ts:9",{"_index":63,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["pathmatch",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["perferendis",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["perform",{"_index":1490,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1588,"title":{},"body":{"index.html":{}}}],["performances",{"_index":1569,"title":{},"body":{"index.html":{}}}],["person",{"_index":909,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["pipe",{"_index":50,"title":{"pipes/ApiPathPipe.html":{}},"body":{"pipes/ApiPathPipe.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(delay(2000",{"_index":1071,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["pipe(delay(mockdelay",{"_index":1069,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["pipe(takeuntil(this.isdestroyed",{"_index":394,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{}}}],["pipe(tap((res",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes",{"_index":52,"title":{},"body":{"pipes/ApiPathPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipes/api",{"_index":1194,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":68,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["please",{"_index":472,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{}}}],["poedit",{"_index":1561,"title":{},"body":{"index.html":{}}}],["post(`${environment.apiurl}/auth/login",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["post(`${environment.apiurl}/auth/register",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["practices",{"_index":1593,"title":{},"body":{"index.html":{}}}],["pre",{"_index":1605,"title":{},"body":{"index.html":{}}}],["prefixed",{"_index":34,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["prerelease",{"_index":1523,"title":{},"body":{"index.html":{}}}],["previous",{"_index":1492,"title":{},"body":{"index.html":{}}}],["previousvalue",{"_index":998,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primary",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnackbarService.html":{}}}],["private",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1535,"title":{},"body":{"index.html":{}}}],["production",{"_index":1436,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":765,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["progressevent",{"_index":731,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["progressive",{"_index":799,"title":{},"body":{"components/LayoutComponent.html":{},"index.html":{}}}],["project",{"_index":1299,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":192,"title":{},"body":{"classes/AppPage.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":195,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":527,"title":{},"body":{"modules/CoreModule.html":{}}}],["provided",{"_index":1472,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["pull",{"_index":1467,"title":{},"body":{"index.html":{}}}],["push",{"_index":1488,"title":{},"body":{"index.html":{}}}],["pwa",{"_index":1612,"title":{},"body":{"index.html":{}}}],["radius",{"_index":843,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["ratione",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["reactiveformsmodule",{"_index":1162,"title":{},"body":{"modules/SharedModule.html":{}}}],["readonly",{"_index":244,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":442,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["receive",{"_index":629,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["recommended",{"_index":1414,"title":{},"body":{"index.html":{}}}],["recovery",{"_index":639,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{}}}],["redirects",{"_index":1548,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["refresh",{"_index":1326,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["register$(input",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerdto",{"_index":301,"title":{"interfaces/RegisterDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerformcomponent",{"_index":133,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerfortest",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerfortest$(input).pipe",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":474,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{}}}],["relative",{"_index":1322,"title":{},"body":{"changelog.html":{}}}],["relativelinkresolution",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["release",{"_index":1494,"title":{},"body":{"index.html":{}}}],["release:prerelease",{"_index":1524,"title":{},"body":{"index.html":{}}}],["rem",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["remaining",{"_index":839,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["remove",{"_index":977,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeclass",{"_index":1257,"title":{},"body":{"injectables/ThemeService.html":{}}}],["removeiteminstorage",{"_index":959,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeiteminstorage(key",{"_index":964,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["renderer",{"_index":1225,"title":{},"body":{"injectables/ThemeService.html":{}}}],["renderer2",{"_index":1239,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory",{"_index":1230,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory2",{"_index":1231,"title":{},"body":{"injectables/ThemeService.html":{}}}],["replace",{"_index":755,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"index.html":{}}}],["replaysubject",{"_index":1281,"title":{},"body":{"injectables/UserService.html":{}}}],["replaysubject(1",{"_index":1278,"title":{},"body":{"injectables/UserService.html":{}}}],["request",{"_index":434,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["request.clone",{"_index":740,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["require",{"_index":1358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":559,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LoginFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["res.jwt",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["resend",{"_index":439,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["resendconfirmationemail",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendconfirmationemail$(email",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendconfirmationemailfortest",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["resetpassword",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword$(input",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":135,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpassworddto",{"_index":306,"title":{"interfaces/ResetPasswordDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfortest",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfortest$(input",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["resized",{"_index":39,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["respect",{"_index":1471,"title":{},"body":{"index.html":{}}}],["respects",{"_index":1459,"title":{},"body":{"index.html":{}}}],["result",{"_index":43,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":45,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":1491,"title":{},"body":{"index.html":{}}}],["retrycreate",{"_index":1493,"title":{},"body":{"index.html":{}}}],["return",{"_index":79,"title":{},"body":{"pipes/ApiPathPipe.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":66,"title":{},"body":{"pipes/ApiPathPipe.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rf",{"_index":1603,"title":{},"body":{"index.html":{}}}],["rm",{"_index":1602,"title":{},"body":{"index.html":{}}}],["role",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/enumerations.html":{}}}],["role.ghost",{"_index":1044,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"index.html":{}}}],["root'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["round",{"_index":929,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["router",{"_index":371,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{}}}],["routermodule.forchild(routes",{"_index":222,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{}}}],["routermodule.forroot(routes",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{}}}],["run",{"_index":1391,"title":{},"body":{"index.html":{}}}],["running",{"_index":1029,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["s",{"_index":1432,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":1251,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scripts",{"_index":1486,"title":{},"body":{"index.html":{}}}],["scrollbar",{"_index":1311,"title":{},"body":{"changelog.html":{}}}],["sed",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{}}}],["see",{"_index":1301,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["semantic",{"_index":1495,"title":{},"body":{"index.html":{}}}],["send",{"_index":440,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sent",{"_index":471,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{}}}],["server",{"_index":35,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"index.html":{}}}],["services/log.service",{"_index":487,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["services/snackbar.service",{"_index":884,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["services/theme.service",{"_index":539,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["services/user.service",{"_index":488,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["serviceworkermodule",{"_index":507,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":523,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":975,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["setheaders",{"_index":741,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["setiteminstorage",{"_index":960,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setiteminstorage(key",{"_index":966,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setmeta",{"_index":563,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["settimeout",{"_index":247,"title":{},"body":{"components/AuthComponent.html":{}}}],["settings",{"_index":852,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["settings'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["settings.component",{"_index":519,"title":{},"body":{"modules/CoreModule.html":{}}}],["settings.component.html",{"_index":854,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.scss",{"_index":853,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts",{"_index":851,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:29",{"_index":865,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:30",{"_index":880,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:31",{"_index":881,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:32",{"_index":863,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:43",{"_index":871,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:47",{"_index":870,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:52",{"_index":874,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:75",{"_index":875,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:79",{"_index":878,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:83",{"_index":872,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:87",{"_index":879,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:92",{"_index":869,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings/layout",{"_index":518,"title":{},"body":{"modules/CoreModule.html":{},"components/LayoutSettingsComponent.html":{},"coverage.html":{}}}],["shared/shared.module",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{}}}],["shared/validators/must",{"_index":1101,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sharedmodule",{"_index":256,"title":{"modules/SharedModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["short",{"_index":1446,"title":{},"body":{"index.html":{}}}],["shows",{"_index":1577,"title":{},"body":{"index.html":{}}}],["sidenav",{"_index":822,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sidenav.component",{"_index":521,"title":{},"body":{"modules/CoreModule.html":{}}}],["sidenav.component.html",{"_index":946,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":945,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts",{"_index":944,"title":{},"body":{"components/LayoutSidenavComponent.html":{},"coverage.html":{}}}],["sidenav.component.ts:18",{"_index":949,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts:19",{"_index":947,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts:20",{"_index":948,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts:22",{"_index":950,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts:24",{"_index":951,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav/layout",{"_index":520,"title":{},"body":{"modules/CoreModule.html":{},"components/LayoutSidenavComponent.html":{},"coverage.html":{}}}],["sign",{"_index":634,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sint",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{}}}],["sit",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":454,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/LayoutNavComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sizeinpixels",{"_index":932,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["snackbar",{"_index":1204,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":585,"title":{"injectables/SnackbarService.html":{}},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["software",{"_index":1560,"title":{},"body":{"index.html":{}}}],["soluta",{"_index":692,"title":{},"body":{"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":450,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["span')).gettext",{"_index":199,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specification",{"_index":1497,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1184,"title":{},"body":{"modules/SharedModule.html":{}}}],["src",{"_index":65,"title":{},"body":{"pipes/ApiPathPipe.html":{},"directives/ImageDefaultDirective.html":{}}}],["src/.../auth.mock.ts",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.model.ts",{"_index":1376,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.service.ts",{"_index":1377,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../must",{"_index":1380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../shared.module.ts",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":1378,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/article/article.component.ts",{"_index":201,"title":{},"body":{"components/ArticleComponent.html":{},"coverage.html":{}}}],["src/app/article/article.component.ts:10",{"_index":208,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/article/article.module.ts",{"_index":214,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":223,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:19",{"_index":239,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:20",{"_index":241,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":233,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:25",{"_index":234,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:27",{"_index":236,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.mock.ts",{"_index":1024,"title":{},"body":{"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.model.ts",{"_index":643,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/auth/auth.module.ts",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:101",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:28",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:35",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:47",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:59",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:69",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:89",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/confirm",{"_index":355,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"coverage.html":{}}}],["src/app/auth/forgot",{"_index":572,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"coverage.html":{}}}],["src/app/auth/login",{"_index":989,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/register",{"_index":1089,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/reset",{"_index":1124,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":500,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/confirmed",{"_index":478,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/not",{"_index":1087,"title":{},"body":{"guards/NotUserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts",{"_index":1259,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts:12",{"_index":1260,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/guards/user.guard.ts:19",{"_index":1261,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/interceptors/http",{"_index":705,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"coverage.html":{}}}],["src/app/core/layout/layout",{"_index":809,"title":{},"body":{"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/layout.component.ts",{"_index":531,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/layout.component.ts:33",{"_index":793,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:34",{"_index":791,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:38",{"_index":792,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:39",{"_index":789,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:40",{"_index":795,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:41",{"_index":788,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:42",{"_index":794,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:43",{"_index":796,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:44",{"_index":782,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:67",{"_index":785,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:76",{"_index":783,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:80",{"_index":784,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:85",{"_index":787,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:89",{"_index":786,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/models/error.model.ts",{"_index":47,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/local",{"_index":956,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/core/services/log.service.ts",{"_index":978,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/log.service.ts:16",{"_index":984,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/services/log.service.ts:18",{"_index":983,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/services/log.service.ts:24",{"_index":981,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/services/snackbar.service.ts",{"_index":1197,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/app/core/services/snackbar.service.ts:14",{"_index":1211,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/core/services/snackbar.service.ts:15",{"_index":1203,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/core/services/snackbar.service.ts:19",{"_index":1207,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/core/services/theme.service.ts",{"_index":1222,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/services/theme.service.ts:10",{"_index":1232,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:20",{"_index":1236,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:33",{"_index":1237,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:42",{"_index":1234,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:8",{"_index":1240,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:9",{"_index":1238,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1263,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:16",{"_index":1277,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1280,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:18",{"_index":1279,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":1276,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:20",{"_index":1270,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:37",{"_index":1273,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:49",{"_index":1271,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:57",{"_index":1274,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/home/home.component.ts",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.ts",{"_index":701,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/not",{"_index":1075,"title":{},"body":{"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"coverage.html":{}}}],["src/app/shared/directives/image",{"_index":753,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"coverage.html":{}}}],["src/app/shared/pipes/api",{"_index":53,"title":{},"body":{"pipes/ApiPathPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1160,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/validators/must",{"_index":1351,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.ts",{"_index":1354,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1355,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":1521,"title":{},"body":{"index.html":{}}}],["stack",{"_index":1389,"title":{},"body":{"index.html":{}}}],["staged",{"_index":1542,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1302,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standardized",{"_index":1470,"title":{},"body":{"index.html":{}}}],["start",{"_index":1401,"title":{},"body":{"index.html":{}}}],["start:frvscode",{"_index":1403,"title":{},"body":{"index.html":{}}}],["started",{"_index":1295,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starter",{"_index":801,"title":{},"body":{"components/LayoutComponent.html":{},"index.html":{}}}],["starting",{"_index":1503,"title":{},"body":{"index.html":{}}}],["stash",{"_index":1499,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1330,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1454,"title":{},"body":{"index.html":{}}}],["status",{"_index":49,"title":{},"body":{"interfaces/ApiError.html":{},"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sticky",{"_index":803,"title":{},"body":{"components/LayoutComponent.html":{}}}],["storage.service",{"_index":1242,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["storage.service.ts",{"_index":957,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":963,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:22",{"_index":967,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:27",{"_index":965,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:8",{"_index":961,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":985,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["strict",{"_index":77,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stringvalue",{"_index":968,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["studio",{"_index":1406,"title":{},"body":{"index.html":{}}}],["styles",{"_index":200,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["styleurls",{"_index":203,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subject",{"_index":383,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submit",{"_index":588,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe",{"_index":415,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((account",{"_index":395,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["subscribe((afterclosed",{"_index":411,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["subscription",{"_index":376,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sudo",{"_index":1430,"title":{},"body":{"index.html":{}}}],["support",{"_index":1618,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":922,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["svg",{"_index":1619,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/MockUser.html":{},"components/RegisterFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["switchmap((account",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"injectables/UserService.html":{}}}],["switchmap((res",{"_index":408,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{}}}],["t",{"_index":1441,"title":{},"body":{"index.html":{}}}],["table",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1534,"title":{},"body":{"index.html":{}}}],["tags",{"_index":1525,"title":{},"body":{"index.html":{}}}],["take",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["take(1",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["taken",{"_index":1118,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["takeuntil",{"_index":389,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["takeuntil(this.isdestroyed",{"_index":410,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["tap",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["tap((loggedinuser",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap((res",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["target",{"_index":904,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["target?.files",{"_index":907,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["team",{"_index":1465,"title":{},"body":{"index.html":{}}}],["template",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["templateref",{"_index":877,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["templateurl",{"_index":205,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["test",{"_index":249,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["tested",{"_index":1479,"title":{},"body":{"index.html":{}}}],["textcontent",{"_index":569,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["textonlysnackbar",{"_index":1214,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["theme",{"_index":915,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{}}}],["themefromstorage",{"_index":1246,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":538,"title":{"injectables/ThemeService.html":{}},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["this.account",{"_index":416,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["this.account$.pipe",{"_index":1291,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountid",{"_index":1142,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.accountkey",{"_index":1282,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountsubject$.asobservable",{"_index":1275,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountsubject$.next(account",{"_index":1283,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountsubject$.next(undefined",{"_index":1289,"title":{},"body":{"injectables/UserService.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":1141,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('token",{"_index":399,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.appdescription",{"_index":567,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.appdescriptionelement?.nativeelement",{"_index":568,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.applypropertheme(this.isdarktoggled",{"_index":1253,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.apptitle",{"_index":564,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.apptitleelement?.nativeelement?.textcontent",{"_index":565,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.areconsolesallowed",{"_index":986,"title":{},"body":{"injectables/LogService.html":{}}}],["this.authservice",{"_index":414,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.authservice.resendconfirmationemail",{"_index":406,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["this.changedetectorref.detectchanges",{"_index":246,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.changedetectorref.markforcheck",{"_index":897,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.constructor.name",{"_index":491,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["this.createformgroup('change",{"_index":610,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.destinations",{"_index":555,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.dialog.closeall",{"_index":901,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.dialog.open(confirmemaildialogcomponent).afterclosed",{"_index":409,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.dialog.open(forgotpassworddialogcomponent).afterclosed",{"_index":613,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.dialog.open(templateref",{"_index":900,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.dialogref.close",{"_index":468,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["this.errorhappens.emit((err",{"_index":1015,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.errormessage",{"_index":245,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.f.email.seterrors",{"_index":624,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.f.email?.value",{"_index":1105,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.f.firstname?.value",{"_index":1103,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.f.identifier.seterrors",{"_index":1019,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.f.identifier?.value",{"_index":1013,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.f.lastname?.value",{"_index":1104,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.f.password.seterrors",{"_index":1021,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.f.password?.value",{"_index":1014,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":617,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formgroup",{"_index":609,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formgroup.controls",{"_index":608,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formgroup.disable",{"_index":611,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formgroup.enable",{"_index":616,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.getfilefromevent($event",{"_index":891,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.horizontalposition",{"_index":1218,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.http",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.isaccountalreadyconfirmed",{"_index":396,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["this.isdarkthemetoggled",{"_index":886,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.isdarktoggled",{"_index":1249,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.isdarktoggledkey",{"_index":1248,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.isdestroyed$.complete",{"_index":403,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.isdestroyed$.next(true",{"_index":402,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.isformsubmitted",{"_index":1145,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.isloading",{"_index":413,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.ispasswordhidden",{"_index":1012,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.isprocessing",{"_index":404,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["this.isresetpasswordfailed",{"_index":1148,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.isresetpasswordsucceed",{"_index":1146,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.isusablewithoutapi",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutSettingsComponent.html":{}}}],["this.jwt",{"_index":1285,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.getiteminstorage",{"_index":1247,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["this.localstorageservice.getiteminstorage(this.jwtkey",{"_index":1284,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.removeiteminstorage(this.accountkey",{"_index":1288,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.removeiteminstorage(this.jwtkey",{"_index":1290,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.setiteminstorage",{"_index":1254,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.setiteminstorage(this.accountkey",{"_index":1286,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.setiteminstorage(this.jwtkey",{"_index":1287,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logservice.error(messagetodev",{"_index":725,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["this.logservice.info",{"_index":744,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{}}}],["this.logservice.info(logsubject.guard",{"_index":490,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["this.logservice.info(logsubject.store",{"_index":974,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.metaservice.updatetag",{"_index":570,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.mustnotberejectedvalidator",{"_index":621,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.renderer",{"_index":1244,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.renderer[isdarktheme",{"_index":1255,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.rendererfactory.createrenderer(undefined",{"_index":1245,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.router.navigate",{"_index":412,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":615,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"injectables/UserService.html":{}}}],["this.router.navigate(['home",{"_index":1107,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.router.parseurl",{"_index":1088,"title":{},"body":{"guards/NotUserGuard.html":{}}}],["this.router.parseurl('/auth",{"_index":1262,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.router.parseurl('/auth/confirm",{"_index":492,"title":{},"body":{"guards/ConfirmedUserGuard.html":{}}}],["this.setmeta",{"_index":561,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.snackbar.open(message",{"_index":1215,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.open('not",{"_index":888,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.snackbarservice.open((err",{"_index":898,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.snackbarservice.open(this.errormessage",{"_index":626,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.src",{"_index":777,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["this.themeservice.init",{"_index":554,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.themeservice.isdarktoggled",{"_index":887,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.themeservice.toggledark",{"_index":902,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.titleservice.settitle(this.apptitle",{"_index":566,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.token",{"_index":398,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.userservice",{"_index":894,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.userservice.account",{"_index":393,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.userservice.account$.pipe",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["this.userservice.delete",{"_index":752,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"components/LayoutSettingsComponent.html":{}}}],["this.userservice.jwt",{"_index":738,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"guards/UserGuard.html":{}}}],["this.userservice.update",{"_index":896,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.userservice.update(loggedinuser.account",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(res.account",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifytoken(this.token",{"_index":400,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["this.verticalposition",{"_index":1219,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["throwerror",{"_index":716,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interfaces/MockUser.html":{}}}],["throwerror(new",{"_index":733,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["thumb.jpg",{"_index":41,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["thumbpath",{"_index":42,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["title",{"_index":536,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{}}}],["titleservice",{"_index":553,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["toggledark",{"_index":1228,"title":{},"body":{"injectables/ThemeService.html":{}}}],["token",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":1450,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":1221,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["top",{"_index":1213,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["trackbyindex",{"_index":780,"title":{},"body":{"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["trackbyindex(index",{"_index":562,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["transform",{"_index":59,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["transform(src",{"_index":60,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["translate",{"_index":918,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["translation",{"_index":1559,"title":{},"body":{"index.html":{}}}],["tree",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["treemap",{"_index":1578,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":1483,"title":{},"body":{"index.html":{}}}],["true",{"_index":405,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":74,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{}}}],["tslint:enable",{"_index":622,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["type",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1323,"title":{},"body":{"changelog.html":{}}}],["typography",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":61,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["undefined/unreachable",{"_index":756,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["unknown",{"_index":748,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["unsafe",{"_index":773,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["unset",{"_index":933,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["unsubscribe",{"_index":401,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["up",{"_index":1469,"title":{},"body":{"index.html":{}}}],["update",{"_index":1268,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["update(account",{"_index":1272,"title":{},"body":{"injectables/UserService.html":{}}}],["updateavatar",{"_index":1269,"title":{},"body":{"injectables/UserService.html":{}}}],["updateavatar$(formdata",{"_index":895,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["updateon",{"_index":591,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["upload",{"_index":19,"title":{"interfaces/Upload.html":{}},"body":{"interfaces/Account.html":{},"components/LayoutSettingsComponent.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{}}}],["uploads/public/uuid",{"_index":40,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["uploads/public/uuid.jpg",{"_index":38,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["urltree",{"_index":484,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["usage",{"_index":761,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["use",{"_index":925,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"changelog.html":{},"index.html":{}}}],["useclass",{"_index":528,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":426,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/MockUser.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["user.guard",{"_index":219,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{}}}],["user.guard.ts",{"_index":479,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"coverage.html":{}}}],["user.guard.ts:12",{"_index":482,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{}}}],["user.guard.ts:19",{"_index":483,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{}}}],["userguard",{"_index":260,"title":{"guards/UserGuard.html":{}},"body":{"modules/AuthModule.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["username",{"_index":1609,"title":{},"body":{"index.html":{}}}],["users",{"_index":1549,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":286,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uses",{"_index":1530,"title":{},"body":{"index.html":{}}}],["using",{"_index":1565,"title":{},"body":{"index.html":{}}}],["usr/bin/chromium",{"_index":1433,"title":{},"body":{"index.html":{}}}],["usr/bin/google",{"_index":1434,"title":{},"body":{"index.html":{}}}],["v${packagejson.version",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v0.0.0",{"_index":1520,"title":{},"body":{"index.html":{}}}],["v0.x.x",{"_index":1504,"title":{},"body":{"index.html":{}}}],["v1.0.0",{"_index":1505,"title":{},"body":{"index.html":{}}}],["valid",{"_index":633,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["validators",{"_index":604,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{}}}],["validators.email",{"_index":620,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["validators.pattern(/^.{8,191",{"_index":1149,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.pattern(/^.{8,255",{"_index":1108,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["validators.required",{"_index":619,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validtoken",{"_index":1045,"title":{},"body":{"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":238,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["variable",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1627,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":691,"title":{},"body":{"components/HomeComponent.html":{}}}],["verification",{"_index":435,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["verified",{"_index":444,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["verify",{"_index":430,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["verifytoken",{"_index":366,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["verifytoken(token",{"_index":377,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["version",{"_index":1303,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["versioning",{"_index":1496,"title":{},"body":{"index.html":{}}}],["versions",{"_index":1502,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":1199,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["viewchild",{"_index":534,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["viewchild('appdescriptionelement",{"_index":544,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["viewchild('apptitleelement",{"_index":542,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["visibility",{"_index":1023,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["visibility_off",{"_index":1022,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["visual",{"_index":1405,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1579,"title":{},"body":{"index.html":{}}}],["void",{"_index":209,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["voluptates",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{}}}],["vscode",{"_index":1418,"title":{},"body":{"index.html":{}}}],["want",{"_index":1388,"title":{},"body":{"index.html":{}}}],["warn",{"_index":627,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{}}}],["watch/debug",{"_index":1394,"title":{},"body":{"index.html":{}}}],["wb_sunny",{"_index":913,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["web",{"_index":800,"title":{},"body":{"components/LayoutComponent.html":{},"index.html":{}}}],["webdev",{"_index":1582,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":1595,"title":{},"body":{"index.html":{}}}],["website",{"_index":1456,"title":{},"body":{"index.html":{}}}],["weight",{"_index":849,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["welcome",{"_index":422,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["well",{"_index":1515,"title":{},"body":{"index.html":{}}}],["width",{"_index":457,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["window?.matchmedia('(prefers",{"_index":1250,"title":{},"body":{"injectables/ThemeService.html":{}}}],["without",{"_index":1028,"title":{},"body":{"interfaces/MockUser.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["worker",{"_index":509,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":524,"title":{},"body":{"modules/CoreModule.html":{}}}],["works",{"_index":210,"title":{},"body":{"components/ArticleComponent.html":{},"index.html":{}}}],["wrap",{"_index":817,"title":{},"body":{"components/LayoutFooterComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["yes",{"_index":1000,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserService.html":{}}}],["you're",{"_index":1615,"title":{},"body":{"index.html":{}}}],["yours",{"_index":1598,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":1153,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["zone.js",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        avatar\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        isConfirmed\n                                \n                                \n                                        lastName\n                                \n                                \n                                        roles\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         Upload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Upload\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isConfirmed\n                                    \n                                \n                                \n                                    \n                                        isConfirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum Role {\n  Admin = 'admin',\n  Ghost = 'ghost',\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\nexport interface Account {\n  id: number;\n  createdAt: Date;\n  updatedAt: Date;\n  firstName: string;\n  lastName: string;\n  email: string;\n  roles: Role[];\n  avatar?: Upload;\n  isConfirmed: boolean;\n}\n\nexport interface Upload {\n  /**\n   * File path, must be prefixed by server host\n   * @example 'uploads/public/uuid.jpg'\n   */\n  path: string;\n\n  /**\n   * Resized file path, must be prefixed by server host\n   * @example 'uploads/public/uuid-thumb.jpg'\n   */\n  thumbPath: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/error.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  status: number;\n  message: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ApiPathPipe.html":{"url":"pipes/ApiPathPipe.html","title":"pipe - ApiPathPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ApiPathPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/api-path.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        apiPath\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(src: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/api-path.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { environment } from '../../../environments/environment';\n\n@Pipe({\n  name: 'apiPath',\n})\nexport class ApiPathPipe implements PipeTransform {\n  transform(src: string | undefined): string | undefined {\n    // tslint:disable-next-line: strict-boolean-expressions\n    return src ? `${environment.apiUrl}/${src}` : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then((m) => m.HomeModule)\",\n  },\n  {\n    path: 'not-found',\n    loadChildren: () =>\n      \"import('./not-found/not-found.module').then((m) => m.NotFoundModule)\",\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'article',\n    loadChildren: () =>\n      \"import('./article/article.module').then((m) => m.ArticleModule)\",\n  },\n  { path: '**', redirectTo: 'not-found', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CoreModule,\n    RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArticleComponent.html":{"url":"components/ArticleComponent.html","title":"component - ArticleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArticleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/article/article.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-article\n            \n\n            \n                styleUrls\n                ./article.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./article.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/article/article.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleComponent implements OnInit {\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        article works!\n\n    \n\n    \n                \n                    ./article.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'article works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArticleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_declarations\n\n\n\n\nArticleComponent\n\nArticleComponent\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nArticleComponent->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArticleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConfirmedUserGuard } from '../core/guards/confirmed-user.guard';\n\nimport { ArticleComponent } from './article.component';\n\nconst routes: Routes = [\n  { path: '', component: ArticleComponent, canActivate: [ConfirmedUserGuard] },\n];\n\n@NgModule({\n  declarations: [ArticleComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class ArticleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                isUsableWithoutApi\n                            \n                            \n                                mockUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onErrorHappens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onErrorHappens\n                        \n                        \n                    \n                \n            \n            \n                \nonErrorHappens(errorMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUsableWithoutApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl === ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockUser\n\n                        \n                    \n                    \n                        \n                            Default value : mockUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n} from '@angular/core';\n\nimport { environment } from '../../environments/environment';\n\nimport { MockUser, mockUser } from './auth.mock';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthComponent implements OnInit {\n  errorMessage = '';\n  isUsableWithoutApi = environment.apiUrl === '';\n  mockUser: MockUser = mockUser;\n\n  constructor(private readonly changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {}\n\n  onErrorHappens(errorMessage: string): void {\n    this.errorMessage = errorMessage;\n    this.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.errorMessage = '';\n    }, 500);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n  Test: {{ mockUser?.email }} / {{ mockUser?.password }}\n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      Test: {{ mockUser?.email }} / {{ mockUser?.password }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConfirmEmailComponent\n\nConfirmEmailComponent\n\nAuthModule -->\n\nConfirmEmailComponent->AuthModule\n\n\n\n\n\nConfirmEmailDialogComponent\n\nConfirmEmailDialogComponent\n\nAuthModule -->\n\nConfirmEmailDialogComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nForgotPasswordDialogComponent\n\nForgotPasswordDialogComponent\n\nAuthModule -->\n\nForgotPasswordDialogComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAuthModule -->\n\nRegisterFormComponent->AuthModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthModule -->\n\nResetPasswordComponent->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            ConfirmEmailComponent\n                        \n                        \n                            ConfirmEmailDialogComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            ForgotPasswordDialogComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NotUserGuard } from '../core/guards/not-user.guard';\nimport { UserGuard } from '../core/guards/user.guard';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AuthComponent } from './auth.component';\nimport { ConfirmEmailDialogComponent } from './confirm-email-dialog/confirm-email-dialog.component';\nimport { ConfirmEmailComponent } from './confirm-email/confirm-email.component';\nimport { ForgotPasswordDialogComponent } from './forgot-password-dialog/forgot-password-dialog.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  { path: '', component: AuthComponent, canActivate: [NotUserGuard] },\n  {\n    path: 'confirm-email',\n    component: ConfirmEmailComponent,\n    canActivate: [UserGuard],\n  },\n  {\n    path: 'confirm-email/:token',\n    component: ConfirmEmailComponent,\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent,\n    canActivate: [NotUserGuard],\n  },\n  {\n    path: 'reset-password/:id/:token',\n    component: ResetPasswordComponent,\n  },\n];\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginFormComponent,\n    RegisterFormComponent,\n    ConfirmEmailDialogComponent,\n    ConfirmEmailComponent,\n    ForgotPasswordComponent,\n    ForgotPasswordDialogComponent,\n    ResetPasswordComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isUsableWithoutApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                login$\n                            \n                            \n                                register$\n                            \n                            \n                                resendConfirmationEmail$\n                            \n                            \n                                resetPassword$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail$\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail$(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword$\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword$(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login$\n                        \n                        \n                    \n                \n            \n            \n                \nlogin$(input: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register$\n                        \n                        \n                    \n                \n            \n            \n                \nregister$(input: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendConfirmationEmail$\n                        \n                        \n                    \n                \n            \n            \n                \nresendConfirmationEmail$(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword$\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword$(input: ResetPasswordDto, id: number, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUsableWithoutApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl === ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, take, tap } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { UserService } from '../core/services/user.service';\n\nimport {\n  confirmEmailForTest$,\n  forgotPasswordForTest$,\n  loginForTest$,\n  registerForTest$,\n  resendConfirmationEmailForTest$,\n  resetPasswordForTest$,\n} from './auth.mock';\nimport {\n  LoggedInUser,\n  LoginDto,\n  RegisterDto,\n  ResetPasswordDto,\n} from './auth.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  isUsableWithoutApi = environment.apiUrl === '';\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly http: HttpClient,\n  ) {}\n\n  login$(input: LoginDto): Observable {\n    if (this.isUsableWithoutApi) {\n      return loginForTest$(input).pipe(\n        tap((res) => this.userService.update(res.account, res.jwt)),\n      );\n    }\n\n    return this.http\n      .post(`${environment.apiUrl}/auth/login`, input)\n      .pipe(tap((res) => this.userService.update(res.account, res.jwt)));\n  }\n\n  register$(input: RegisterDto): Observable {\n    if (this.isUsableWithoutApi) {\n      return registerForTest$(input).pipe(\n        tap((res) => this.userService.update(res.account, res.jwt)),\n      );\n    }\n\n    return this.http\n      .post(`${environment.apiUrl}/auth/register`, input)\n      .pipe(tap((res) => this.userService.update(res.account, res.jwt)));\n  }\n\n  resendConfirmationEmail$(email: string): Observable {\n    if (this.isUsableWithoutApi) {\n      return resendConfirmationEmailForTest$();\n    }\n\n    return this.http.get(\n      `${environment.apiUrl}/auth/resend-confirmation-email/${email}`,\n    );\n  }\n\n  confirmEmail$(token: string): Observable {\n    if (this.isUsableWithoutApi) {\n      return this.userService.account$.pipe(\n        take(1),\n        switchMap((account) => confirmEmailForTest$(account, token)),\n        tap((loggedInUser) => {\n          this.userService.update(loggedInUser.account, loggedInUser.jwt);\n        }),\n      );\n    }\n\n    return this.http\n      .get(`${environment.apiUrl}/auth/confirm-email/${token}`)\n      .pipe(\n        tap((loggedInUser) =>\n          this.userService.update(loggedInUser.account, loggedInUser.jwt),\n        ),\n      );\n  }\n\n  forgotPassword$(email: string): Observable {\n    const lowerCaseEmail = email.toLowerCase();\n\n    if (this.isUsableWithoutApi) {\n      return forgotPasswordForTest$();\n    }\n\n    return this.http.get(\n      `${environment.apiUrl}/auth/forgot-password/${lowerCaseEmail}`,\n    );\n  }\n\n  resetPassword$(\n    input: ResetPasswordDto,\n    id: number,\n    token: string,\n  ): Observable {\n    if (this.isUsableWithoutApi) {\n      return resetPasswordForTest$(input, id, token);\n    }\n\n    return this.http.post(\n      `${environment.apiUrl}/auth/reset-password/${id}/${token}`,\n      input,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailComponent.html":{"url":"components/ConfirmEmailComponent.html","title":"component - ConfirmEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/confirm-email/confirm-email.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email\n            \n\n            \n                styleUrls\n                ./confirm-email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                isAccountAlreadyConfirmed\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isProcessing\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRequestConfirmEmail\n                            \n                            \n                                    Private\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, changeDetectorRef: ChangeDetectorRef, authService: AuthService, userService: UserService, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/confirm-email/confirm-email.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRequestConfirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nonRequestConfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            verifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account | undefined\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAccountAlreadyConfirmed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isProcessing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { finalize, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { Account } from '../../core/models/user.model';\nimport { UserService } from '../../core/services/user.service';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\nimport { ConfirmEmailDialogComponent } from '../confirm-email-dialog/confirm-email-dialog.component';\n\n@Component({\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n  styleUrls: ['./confirm-email.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmEmailComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  isProcessing = false;\n  isAccountAlreadyConfirmed = false;\n  token: string | undefined = undefined;\n  account: Account | undefined = undefined;\n  private readonly isDestroyed$ = new Subject();\n\n  constructor(\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n    private readonly dialog: MatDialog,\n    private readonly router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.account$\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe((account) => {\n        this.isAccountAlreadyConfirmed = account?.isConfirmed ?? false;\n\n        this.token =\n          this.activatedRoute.snapshot.paramMap.get('token') ?? undefined;\n\n        return this.token === undefined\n          ? undefined\n          : this.verifyToken(this.token);\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onRequestConfirmEmail(): Subscription {\n    this.isProcessing = true;\n\n    return this.userService.account$\n      .pipe(\n        switchMap((account) =>\n          this.authService.resendConfirmationEmail$(\n            (account as Account)?.email,\n          ),\n        ),\n        switchMap((res) =>\n          this.dialog.open(ConfirmEmailDialogComponent).afterClosed(),\n        ),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe((afterClosed) => this.router.navigate(['/']));\n  }\n\n  private verifyToken(token: string): Subscription {\n    this.isAccountAlreadyConfirmed = false;\n    this.isLoading = true;\n\n    return this.authService\n      .confirmEmail$(token)\n      .pipe(\n        finalize(() => {\n          this.isLoading = false;\n          this.changeDetectorRef.detectChanges();\n        }),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe(\n        (loggedInUser) => {\n          this.account = loggedInUser.account;\n          this.changeDetectorRef.detectChanges();\n        },\n        (err) => {\n          if ((err as Error)?.message === AuthError.EmailConfirmed) {\n            this.isAccountAlreadyConfirmed = true;\n            this.changeDetectorRef.detectChanges();\n          }\n        },\n      );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n    \n  \n\n\n\n  \n\n\n\n  \n    done\n  \n  Welcome {{ account!.firstName }} ! Your are now a confirmed user !\n  \n    \n    Continue\n  \n\n\n\n  \n    error_outline\n  \n  You have not confirmed your email address, verify your inbox and click on\n    the link in the email to continue.\n  You can request a new verification link if the old one has expired.\n  \n    \n\n    \n\n    \n      Resend\n      send\n    \n  \n\n\n\n  \n    error_outline\n  \n  Could not confirm your address.\n  You can request a new verification link if the old one has expired.\n  \n    \n\n    \n\n    \n      Resend\n      send\n    \n  \n\n\n\n  \n    done\n  \n  Everything is ready, your email address has already been verified.\n  \n    \n    Continue\n  \n\n\n    \n\n    \n                \n                    ./confirm-email.component.scss\n                \n                .button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n.status-icon {\n  font-size: 75px;\n  height: 75px;\n  width: 75px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                done    Welcome {{ account!.firstName }} ! Your are now a confirmed user !          Continue        error_outline    You have not confirmed your email address, verify your inbox and click on    the link in the email to continue.  You can request a new verification link if the old one has expired.                    Resend      send            error_outline    Could not confirm your address.  You can request a new verification link if the old one has expired.                    Resend      send            done    Everything is ready, your email address has already been verified.          Continue  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailDialogComponent.html":{"url":"components/ConfirmEmailDialogComponent.html","title":"component - ConfirmEmailDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmEmailDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email-dialog\n            \n\n            \n                styleUrls\n                ./confirm-email-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-email-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-email-dialog',\n  templateUrl: './confirm-email-dialog.component.html',\n  styleUrls: ['./confirm-email-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmEmailDialogComponent implements OnInit {\n  constructor(\n    private readonly dialogRef: MatDialogRef,\n  ) {}\n\n  ngOnInit(): void {}\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Check your mailbox\n\n  A confirmation email has been sent, please check your inbox and follow the\n    link in the email to confirm your registration.\n\n\n  Ok\n\n\n    \n\n    \n                \n                    ./confirm-email-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Check your mailbox  A confirmation email has been sent, please check your inbox and follow the    link in the email to confirm your registration.  Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ConfirmedUserGuard.html":{"url":"guards/ConfirmedUserGuard.html","title":"guard - ConfirmedUserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ConfirmedUserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/confirmed-user.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/confirmed-user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/confirmed-user.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LogService, LogSubject } from '../services/log.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmedUserGuard implements CanActivate {\n  constructor(\n    private readonly logService: LogService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  canActivate(): Observable {\n    return this.userService.account$.pipe(\n      map((account) => {\n        const isConfirmed = account?.isConfirmed ?? false;\n        if (!isConfirmed) {\n          this.logService.info(LogSubject.Guard, this.constructor.name);\n\n          return this.router.parseUrl('/auth/confirm-email');\n        }\n\n        return true;\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLayoutComponent->CoreModule\n\n\n\n\n\nLayoutFooterComponent\n\nLayoutFooterComponent\n\nCoreModule -->\n\nLayoutFooterComponent->CoreModule\n\n\n\n\n\nLayoutNavComponent\n\nLayoutNavComponent\n\nCoreModule -->\n\nLayoutNavComponent->CoreModule\n\n\n\n\n\nLayoutSettingsComponent\n\nLayoutSettingsComponent\n\nCoreModule -->\n\nLayoutSettingsComponent->CoreModule\n\n\n\n\n\nLayoutSidenavComponent\n\nLayoutSidenavComponent\n\nCoreModule -->\n\nLayoutSidenavComponent->CoreModule\n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nCoreModule->LayoutComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nHttpErrorInterceptor\n\nHttpErrorInterceptor\n\nCoreModule -->\n\nHttpErrorInterceptor->CoreModule\n\n\n\n\n\nHttpJwtInterceptor\n\nHttpJwtInterceptor\n\nCoreModule -->\n\nHttpJwtInterceptor->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LayoutComponent\n                        \n                        \n                            LayoutFooterComponent\n                        \n                        \n                            LayoutNavComponent\n                        \n                        \n                            LayoutSettingsComponent\n                        \n                        \n                            LayoutSidenavComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HttpErrorInterceptor\n                        \n                        \n                            HttpJwtInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LayoutComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { environment } from '../../environments/environment';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HttpErrorInterceptor } from './interceptors/http-error.interceptor';\nimport { HttpJwtInterceptor } from './interceptors/http-jwt.interceptor';\nimport { LayoutFooterComponent } from './layout/layout-footer/layout-footer.component';\nimport { LayoutNavComponent } from './layout/layout-nav/layout-nav.component';\nimport { LayoutSettingsComponent } from './layout/layout-settings/layout-settings.component';\nimport { LayoutSidenavComponent } from './layout/layout-sidenav/layout-sidenav.component';\nimport { LayoutComponent } from './layout/layout.component';\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    LayoutSettingsComponent,\n    LayoutFooterComponent,\n    LayoutSidenavComponent,\n    LayoutNavComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n    SharedModule,\n    RouterModule,\n    HttpClientModule,\n  ],\n  exports: [LayoutComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpJwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true,\n    },\n  ],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Destination.html":{"url":"interfaces/Destination.html","title":"interface - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/layout/layout.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        name\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { Account } from '../models/user.model';\nimport { ThemeService } from '../services/theme.service';\nimport { UserService } from '../services/user.service';\n\nexport interface Destination {\n  name: string;\n  path: string;\n\n  icon: string;\n}\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutComponent implements OnInit, AfterViewChecked, OnDestroy {\n  @ViewChild('appTitleElement') appTitleElement?: ElementRef;\n  @ViewChild('appDescriptionElement') appDescriptionElement?: ElementRef;\n\n  appTitle = '';\n  appDescription = '';\n  destinations: Destination[] = [];\n  account: Account | undefined;\n  readonly appVersion = environment.version;\n  readonly isUnknownUserAllowedToNavigate = true;\n  private readonly isDestroyed$ = new Subject();\n\n  constructor(\n    private readonly metaService: Meta,\n    private readonly themeService: ThemeService,\n    private readonly titleService: Title,\n    private readonly userService: UserService,\n  ) {\n    this.themeService.init();\n    this.destinations = [\n      {\n        name: $localize`:@@home:Home`,\n        path: 'home',\n        icon: 'home',\n      },\n      {\n        name: $localize`:@@articles:Articles`,\n        path: 'article',\n        icon: 'book',\n      },\n    ];\n  }\n\n  ngOnInit(): Subscription {\n    return this.userService.account$\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe(\n        (res) => (this.account = res),\n        (err) => (this.account = undefined),\n      );\n  }\n\n  ngAfterViewChecked(): void {\n    this.setMeta();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  private setMeta(): void {\n    this.appTitle = this.appTitleElement?.nativeElement?.textContent as string;\n    this.titleService.setTitle(this.appTitle);\n\n    this.appDescription = this.appDescriptionElement?.nativeElement\n      ?.textContent as string;\n    this.metaService.updateTag({\n      name: 'description',\n      content: this.appDescription,\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPasswordHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                    Private\n                                mustNotBeRejectedValidator\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, snackbarService: SnackbarService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/forgot-password/forgot-password.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(updateOn: \"submit\" | \"change\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOn\n                                    \n                                            \"submit\" | \"change\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mustNotBeRejectedValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustNotBeRejectedValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription | undefined\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPasswordHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\nimport { SnackbarService } from '../../core/services/snackbar.service';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\nimport { ForgotPasswordDialogComponent } from '../forgot-password-dialog/forgot-password-dialog.component';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ForgotPasswordComponent implements OnInit, OnDestroy {\n  formGroup: FormGroup;\n  isLoading = false;\n  isPasswordHidden = true;\n  errorMessage = '';\n  private readonly isDestroyed$ = new Subject();\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly router: Router,\n    private readonly snackbarService: SnackbarService,\n    private readonly dialog: MatDialog,\n  ) {\n    this.formGroup = this.createFormGroup('change');\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onSubmit(): Subscription | undefined {\n    this.isLoading = true;\n    this.formGroup.disable();\n\n    return this.authService\n      .forgotPassword$(this.f.email?.value as string)\n      .pipe(\n        switchMap((res) =>\n          this.dialog.open(ForgotPasswordDialogComponent).afterClosed(),\n        ),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe(\n        (afterClosed) => this.router.navigate(['/auth']),\n        (err) => {\n          this.errorMessage = (err as Error)?.message;\n          this.isLoading = false;\n          this.formGroup.enable();\n        },\n      );\n  }\n\n  private createFormGroup(updateOn: 'submit' | 'change'): FormGroup {\n    // tslint:disable\n    return this.formBuilder.group(\n      {\n        email: [null, [Validators.required, Validators.email]],\n      },\n      {\n        updateOn,\n        validators: this.mustNotBeRejectedValidator(),\n      },\n      // tslint:enable\n    );\n  }\n\n  private mustNotBeRejectedValidator(): () => void {\n    return () => {\n      if (this.errorMessage === AuthError.EmailNotFound) {\n        this.f.email.setErrors({ mustNotBeRejected: true });\n      } else if (this.errorMessage !== '') {\n        this.snackbarService.open(this.errorMessage, 'warn');\n      }\n      this.errorMessage = '';\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    Forgot password\n    Enter your email address to receive instructions on how to change your\n      password.\n\n    \n      \n        \n          Email address\n          \n          You must fill in this field\n          Not a valid email\n          Please check your email address\n        \n\n        \n          \n\n          Sign in\n\n          \n            Submit\n            send\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .form-field {\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forgot password    Enter your email address to receive instructions on how to change your      password.                            Email address                    You must fill in this field          Not a valid email          Please check your email address                                    Sign in                      Submit            send                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordDialogComponent.html":{"url":"components/ForgotPasswordDialogComponent.html","title":"component - ForgotPasswordDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password-dialog\n            \n\n            \n                styleUrls\n                ./forgot-password-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-forgot-password-dialog',\n  templateUrl: './forgot-password-dialog.component.html',\n  styleUrls: ['./forgot-password-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ForgotPasswordDialogComponent implements OnInit {\n  constructor(\n    private readonly dialogRef: MatDialogRef,\n  ) {}\n\n  ngOnInit(): void {}\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Check your mailbox\n\n  If your email address exists in our database, you will receive a password\n    recovery link at your email address in a few minutes.\n\n\n  Ok\n\n\n    \n\n    \n                \n                    ./forgot-password-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Check your mailbox  If your email address exists in our database, you will receive a password    recovery link at your email address in a few minutes.  Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForogtPasswordDto.html":{"url":"interfaces/ForogtPasswordDto.html","title":"interface - ForogtPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ForogtPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  h1 typography\n  h2 typography\n  h3 typography\n  h4 typography\n  h5 typography\n\n  Lorem, ipsum dolor sit amet consectetur adipisicing elit. Asperiores esse\n    ab dignissimos ipsa. Ducimus rem assumenda minima sint voluptates ratione,\n    consectetur perferendis sed, enim natus animi consequuntur vel soluta\n    autem!\n  Palette\n  Primary\n  Accent\n  Warn\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  h1 typography  h2 typography  h3 typography  h4 typography  h5 typography  Lorem, ipsum dolor sit amet consectetur adipisicing elit. Asperiores esse    ab dignissimos ipsa. Ducimus rem assumenda minima sint voluptates ratione,    consectetur perferendis sed, enim natus animi consequuntur vel soluta    autem!  Palette  Primary  Accent  Warn'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/http-error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/http-error.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/http-error.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError } from '../models/error.model';\nimport { LogService } from '../services/log.service';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private readonly logService: LogService) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    return next.handle(request).pipe(\n      // tslint:disable-next-line: rxjs-no-implicit-any-catch\n      catchError((err: HttpErrorResponse) => {\n        const messageToDev = `${this.constructor.name} - ${err.message}`;\n        this.logService.error(messageToDev);\n\n        let messageToEndUser = '';\n        if (err.error instanceof ErrorEvent) {\n          messageToEndUser = err?.error?.message;\n        } else if (err.error instanceof ProgressEvent) {\n          messageToEndUser = err.message;\n        } else {\n          messageToEndUser = (err.error as ApiError)?.message;\n        }\n\n        return throwError(new Error(messageToEndUser));\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpJwtInterceptor.html":{"url":"interceptors/HttpJwtInterceptor.html","title":"interceptor - HttpJwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpJwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/http-jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/http-jwt.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/http-jwt.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogService, LogSubject } from '../services/log.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class HttpJwtInterceptor implements HttpInterceptor {\n  constructor(\n    private readonly userService: UserService,\n    private readonly logService: LogService,\n  ) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    const jwt = this.userService.jwt;\n    let newRequest = request;\n    if (jwt !== undefined) {\n      newRequest = request.clone({\n        setHeaders: { Authorization: `Bearer ${jwt}` },\n      });\n      this.logService.info(\n        LogSubject.Intercept,\n        `${this.constructor.name} jwt added to request`,\n      );\n    }\n\n    return next.handle(newRequest).pipe(\n      tap(\n        () => {},\n        (err: unknown) => {\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 401) {\n              this.logService.info(\n                LogSubject.Intercept,\n                `${this.constructor.name} 401 forbidden`,\n              );\n              this.userService.delete();\n            }\n          }\n        },\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDefaultDirective.html":{"url":"directives/ImageDefaultDirective.html","title":"directive - ImageDefaultDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ImageDefaultDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/image-default.directive.ts\n        \n\n            \n                Description\n            \n            \n                Replace undefined/unreachable image by a default one\nand add 'image-loaded' css class when image is loaded\nUsage :\n\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img[default]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                default\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        default\n                    \n                \n                \n                    \n                        Type :     \"profile\" | \"landscape\"\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/image-default.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        src\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/image-default.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/image-default.directive.ts:19\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, HostBinding, HostListener, Input } from '@angular/core';\n\n/**\n * Replace undefined/unreachable image by a default one\n * and add 'image-loaded' css class when image is loaded\n *\n * Usage :\n * \n */\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: 'img[default]',\n})\nexport class ImageDefaultDirective {\n  @Input() default!: 'profile' | 'landscape';\n  @HostBinding('src') @Input() src?: string;\n\n  // tslint:disable-next-line: no-unsafe-any\n  @HostListener('error') onError(): void {\n    const isSourceFilled = this.src !== undefined && this.src !== '';\n    this.src = isSourceFilled\n      ? `assets/images/default_broken.jpg`\n      : `assets/images/default_${this.default}.jpg`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewChecked\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                appDescription\n                            \n                            \n                                    Optional\n                                appDescriptionElement\n                            \n                            \n                                appTitle\n                            \n                            \n                                    Optional\n                                appTitleElement\n                            \n                            \n                                    Readonly\n                                appVersion\n                            \n                            \n                                destinations\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                    Readonly\n                                isUnknownUserAllowedToNavigate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setMeta\n                            \n                            \n                                trackByIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(metaService: Meta, themeService: ThemeService, titleService: Title, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/layout/layout.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByIndex\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            appDescriptionElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('appDescriptionElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            appTitleElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('appTitleElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            appVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.version\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destinations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Destination[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isUnknownUserAllowedToNavigate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { Account } from '../models/user.model';\nimport { ThemeService } from '../services/theme.service';\nimport { UserService } from '../services/user.service';\n\nexport interface Destination {\n  name: string;\n  path: string;\n\n  icon: string;\n}\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutComponent implements OnInit, AfterViewChecked, OnDestroy {\n  @ViewChild('appTitleElement') appTitleElement?: ElementRef;\n  @ViewChild('appDescriptionElement') appDescriptionElement?: ElementRef;\n\n  appTitle = '';\n  appDescription = '';\n  destinations: Destination[] = [];\n  account: Account | undefined;\n  readonly appVersion = environment.version;\n  readonly isUnknownUserAllowedToNavigate = true;\n  private readonly isDestroyed$ = new Subject();\n\n  constructor(\n    private readonly metaService: Meta,\n    private readonly themeService: ThemeService,\n    private readonly titleService: Title,\n    private readonly userService: UserService,\n  ) {\n    this.themeService.init();\n    this.destinations = [\n      {\n        name: $localize`:@@home:Home`,\n        path: 'home',\n        icon: 'home',\n      },\n      {\n        name: $localize`:@@articles:Articles`,\n        path: 'article',\n        icon: 'book',\n      },\n    ];\n  }\n\n  ngOnInit(): Subscription {\n    return this.userService.account$\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe(\n        (res) => (this.account = res),\n        (err) => (this.account = undefined),\n      );\n  }\n\n  ngAfterViewChecked(): void {\n    this.setMeta();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  private setMeta(): void {\n    this.appTitle = this.appTitleElement?.nativeElement?.textContent as string;\n    this.titleService.setTitle(this.appTitle);\n\n    this.appDescription = this.appDescriptionElement?.nativeElement\n      ?.textContent as string;\n    this.metaService.updateTag({\n      name: 'description',\n      content: this.appDescription,\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n  \n\n\n\n  Ng-new\n  Angular progressive web app starter.\n  Home\n  Articles\n\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                // sticky footer layout\n.layout {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n}\n\n.content {\n  flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Ng-new  Angular progressive web app starter.  Home  Articles'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutFooterComponent.html":{"url":"components/LayoutFooterComponent.html","title":"component - LayoutFooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutFooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout-footer/layout-footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-footer\n            \n\n            \n                styleUrls\n                ./layout-footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout-footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appDescription\n                            \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appDescription\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-footer/layout-footer.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        appVersion\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-footer/layout-footer.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-footer/layout-footer.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-layout-footer',\n  templateUrl: './layout-footer.component.html',\n  styleUrls: ['./layout-footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutFooterComponent implements OnInit {\n  @Input() appDescription?: string;\n  @Input() appVersion?: string;\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  {{ appDescription }}\n  {{ appVersion }}\n\n\n    \n\n    \n                \n                    ./layout-footer.component.scss\n                \n                $footer-height: 50px;\n\n.layout-footer {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  line-height: $footer-height;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ appDescription }}  {{ appVersion }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutFooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutNavComponent.html":{"url":"components/LayoutNavComponent.html","title":"component - LayoutNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout-nav/layout-nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-nav\n            \n\n            \n                styleUrls\n                ./layout-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                trackByIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                appTitle\n                            \n                            \n                                destinations\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        appTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        destinations\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByIndex\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { Account } from '../../models/user.model';\n\n@Component({\n  selector: 'app-layout-nav',\n  templateUrl: './layout-nav.component.html',\n  styleUrls: ['./layout-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutNavComponent implements OnInit {\n  @Input() sidenav?: MatSidenav;\n  @Input() appTitle?: string;\n  @Input() account?: Account;\n  @Input() destinations?: { path: string; icon: string; name: string }[];\n\n  ngOnInit(): void {}\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n  \n  \n    \n    {{ appTitle }}\n  \n  \n    \n      {{ destination.icon }}\n      {{ destination.name }}\n    \n  \n\n  \n\n  \n\n\n    \n\n    \n                \n                    ./layout-nav.component.scss\n                \n                $nav-height: 50px;\n\n.layout-nav {\n  display: flex;\n  justify-content: space-between;\n  line-height: $nav-height - 2px;\n  padding: 0 8px;\n\n  .fill-remaining-space {\n    flex: 1 1 auto;\n  }\n}\n\n.app-brand {\n  display: flex;\n  height: $nav-height;\n\n  .app-brand-icon {\n    border-radius: 50%;\n    object-fit: contain;\n    padding: 2px;\n  }\n\n  .app-brand-title {\n    font-size: 20px;\n    font-weight: normal;\n    line-height: $nav-height;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu                {{ appTitle }}              {{ destination.icon }}      {{ destination.name }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutSettingsComponent.html":{"url":"components/LayoutSettingsComponent.html","title":"component - LayoutSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout-settings/layout-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-settings\n            \n\n            \n                styleUrls\n                ./layout-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDarkThemeToggled\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isUsableWithoutApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFileFromEvent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseDialog\n                            \n                            \n                                onImportImage\n                            \n                            \n                                onLogOut\n                            \n                            \n                                onOpenDialog\n                            \n                            \n                                onToggleDarkTheme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(localeId: string, themeService: ThemeService, userService: UserService, dialog: MatDialog, changeDetectorRef: ChangeDetectorRef, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localeId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFileFromEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileFromEvent($event: Event | DataTransfer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Event | DataTransfer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     File\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCloseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nonCloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImportImage\n                        \n                        \n                    \n                \n            \n            \n                \nonImportImage($event: Event | DataTransfer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Event | DataTransfer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogOut\n                        \n                        \n                    \n                \n            \n            \n                \nonLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOpenDialog\n                        \n                        \n                    \n                \n            \n            \n                \nonOpenDialog(templateRef: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateRef\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleDarkTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleDarkTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkThemeToggled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUsableWithoutApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl === ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { Account } from '../../models/user.model';\nimport { SnackbarService } from '../../services/snackbar.service';\nimport { ThemeService } from '../../services/theme.service';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-layout-settings',\n  templateUrl: './layout-settings.component.html',\n  styleUrls: ['./layout-settings.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutSettingsComponent implements OnInit, OnDestroy {\n  @Input() account?: Account;\n  isDarkThemeToggled = false;\n  isUsableWithoutApi = environment.apiUrl === '';\n  private readonly isDestroyed$ = new Subject();\n\n  constructor(\n    @Inject(LOCALE_ID) readonly localeId: string,\n    private readonly themeService: ThemeService,\n    private readonly userService: UserService,\n    private readonly dialog: MatDialog,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly snackbarService: SnackbarService,\n  ) {}\n\n  ngOnInit(): void {\n    this.isDarkThemeToggled = this.themeService.isDarkToggled;\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onImportImage($event: Event | DataTransfer): void {\n    if (this.isUsableWithoutApi) {\n      return void this.snackbarService.open('Not available in demo', 'warn');\n    }\n    const file = this.getFileFromEvent($event);\n    const formData = new FormData();\n    formData.append('file', file);\n\n    void this.userService\n      .updateAvatar$(formData)\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe(\n        (upload) => {\n          void this.userService.update({\n            ...(this.account as Account),\n            avatar: upload,\n          });\n          this.changeDetectorRef.markForCheck();\n        },\n        (err) => this.snackbarService.open((err as Error).message, 'warn'),\n      );\n  }\n\n  onLogOut(): void {\n    this.userService.delete();\n  }\n\n  onOpenDialog(templateRef: TemplateRef): void {\n    this.dialog.open(templateRef);\n  }\n\n  onCloseDialog(): void {\n    this.dialog.closeAll();\n  }\n\n  onToggleDarkTheme(): void {\n    this.themeService.toggleDark();\n    this.isDarkThemeToggled = this.themeService.isDarkToggled;\n  }\n\n  private getFileFromEvent($event: Event | DataTransfer): File {\n    const event = $event as Event;\n    event.preventDefault();\n    const target = event.target as HTMLInputElement;\n    const file = (target?.files ?? ($event as DataTransfer)?.files)[0];\n\n    return file;\n  }\n}\n\n    \n\n    \n        \n  \n  person\n\n\n\n  \n    \n      \n        \n        \n      \n\n      {{ account?.firstName }}\n      \n        {{ account.email }}\n      \n    \n    \n      \n        person\n        Sign in\n      \n      \n    \n    \n      \n        exit_to_app\n        Sign out\n      \n      \n    \n    \n      \n        wb_sunny\n        Light theme\n      \n      \n        nights_stay\n        Dark theme\n      \n    \n    \n      translate\n      {{ localeId === 'fr' ? 'English' : 'Français' }}\n    \n  \n\n\n\n  Are you sure ?\n  \n    If you sign out you will have to enter your credentials again to use\n      application !\n  \n  \n    Cancel\n    Sign out\n  \n\n\n    \n\n    \n                \n                    ./layout-settings.component.scss\n                \n                @mixin round-button($sizeInPixels, $paddingInPixels) {\n  border-radius: 50%;\n  height: $sizeInPixels + $paddingInPixels;\n  line-height: 1;\n  min-width: unset;\n  padding: 0;\n  width: $sizeInPixels + $paddingInPixels;\n\n  img {\n    border-radius: 50%;\n    height: 100%;\n    object-fit: cover;\n    padding: $paddingInPixels;\n    width: 100%;\n  }\n}\n\n.round {\n  @include round-button(36px, 2px);\n\n  &.large {\n    @include round-button(100px, 10px);\n  }\n}\n\n::ng-deep .mat-menu-content {\n  padding: 0 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    person                                        {{ account?.firstName }}              {{ account.email }}                            person        Sign in                                  exit_to_app        Sign out                                  wb_sunny        Light theme                    nights_stay        Dark theme                    translate      {{ localeId === \\'fr\\' ? \\'English\\' : \\'Français\\' }}        Are you sure ?      If you sign out you will have to enter your credentials again to use      application !        Cancel    Sign out  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutSidenavComponent.html":{"url":"components/LayoutSidenavComponent.html","title":"component - LayoutSidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutSidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout-sidenav/layout-sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-sidenav\n            \n\n            \n                styleUrls\n                ./layout-sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout-sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                trackByIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                destinations\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        destinations\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByIndex\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { Account } from '../../models/user.model';\n\n@Component({\n  selector: 'app-layout-sidenav',\n  templateUrl: './layout-sidenav.component.html',\n  styleUrls: ['./layout-sidenav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutSidenavComponent implements OnInit {\n  @Input() sidenav!: MatSidenav;\n  @Input() account?: Account;\n  @Input() destinations?: { path: string; icon: string; name: string }[];\n\n  ngOnInit(): void {}\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n\n        {{ account?.firstName }}\n        {{\n          account?.email\n        }}\n      \n    \n    \n      {{ destination.icon }}\n      {{ destination.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./layout-sidenav.component.scss\n                \n                .layout-sidenav {\n  width: 250px;\n}\n\n.layout-sidenav-avatar {\n  border-radius: 50%;\n  height: 100px;\n  object-fit: cover;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ account?.firstName }}        {{          account?.email        }}                    {{ destination.icon }}      {{ destination.name }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutSidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItemInStorage\n                            \n                            \n                                removeItemInStorage\n                            \n                            \n                                setItemInStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemInStorage\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemInStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItemInStorage\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItemInStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItemInStorage\n                        \n                        \n                    \n                \n            \n            \n                \nsetItemInStorage(key: string, value: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { LogService, LogSubject } from '../services/log.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  constructor(private readonly logService: LogService) {}\n\n  getItemInStorage(key: string): unknown {\n    const stringValue = localStorage.getItem(key) as string;\n    const value = (JSON.parse(stringValue) as unknown) ?? undefined;\n    this.logService.info(\n      LogSubject.Store,\n      value !== undefined ? `get ${key}` : `get ${key} (${value})`,\n    );\n\n    return value;\n  }\n\n  setItemInStorage(key: string, value: unknown): void {\n    localStorage.setItem(key, JSON.stringify(value));\n    this.logService.info(LogSubject.Store, `set ${key}`);\n  }\n\n  removeItemInStorage(key: string): void {\n    localStorage.removeItem(key);\n    this.logService.info(LogSubject.Store, `remove ${key}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/log.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areConsolesAllowed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/log.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(subject: LogSubject, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/log.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                                LogSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areConsolesAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : !environment.production\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/log.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { environment } from '../../../environments/environment';\n\nexport enum LogSubject {\n  Intercept = '🎾',\n  Guard = '⚔️',\n  Store = '💾',\n  Error = '❌',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  areConsolesAllowed = !environment.production;\n\n  info(subject: LogSubject, message: string): void {\n    if (this.areConsolesAllowed) {\n      console.info(`${subject}: ${message}`);\n    }\n  }\n\n  error(message: string): void {\n    if (this.areConsolesAllowed) {\n      console.error(`${LogSubject.Error}: ${message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggedInUser.html":{"url":"interfaces/LoggedInUser.html","title":"interface - LoggedInUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggedInUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        account\n                                \n                                \n                                        jwt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:         Account\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Account\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggedInUser-1.html":{"url":"interfaces/LoggedInUser-1.html","title":"interface - LoggedInUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggedInUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        account\n                                \n                                \n                                        jwt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:         Account\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Account\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum Role {\n  Admin = 'admin',\n  Ghost = 'ghost',\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\nexport interface Account {\n  id: number;\n  createdAt: Date;\n  updatedAt: Date;\n  firstName: string;\n  lastName: string;\n  email: string;\n  roles: Role[];\n  avatar?: Upload;\n  isConfirmed: boolean;\n}\n\nexport interface Upload {\n  /**\n   * File path, must be prefixed by server host\n   * @example 'uploads/public/uuid.jpg'\n   */\n  path: string;\n\n  /**\n   * Resized file path, must be prefixed by server host\n   * @example 'uploads/public/uuid-thumb.jpg'\n   */\n  thumbPath: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginDto.html":{"url":"interfaces/LoginDto.html","title":"interface - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login-form/login-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPasswordHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                    Private\n                                mustNotBeRejectedValidator\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorHappens\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login-form/login-form.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        errorHappens\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(updateOn: \"submit\" | \"change\", previousValue?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOn\n                                    \n                                            \"submit\" | \"change\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previousValue\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mustNotBeRejectedValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustNotBeRejectedValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription | undefined\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPasswordHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login-form/login-form.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SnackbarService } from '../../core/services/snackbar.service';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  @Output() readonly errorHappens = new EventEmitter();\n  formGroup: FormGroup;\n  isLoading = false;\n  isPasswordHidden = true;\n  errorMessage = '';\n  private readonly isDestroyed$ = new Subject();\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly router: Router,\n    private readonly snackbarService: SnackbarService,\n  ) {\n    this.formGroup = this.createFormGroup('change');\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onSubmit(): Subscription | undefined {\n    this.isLoading = true;\n    this.formGroup.disable();\n    this.isPasswordHidden = true;\n\n    return this.authService\n      .login$({\n        email: this.f.identifier?.value as string,\n        password: this.f.password?.value as string,\n      })\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe(\n        (res) => this.router.navigate(['/']),\n        (err) => {\n          this.errorHappens.emit((err as Error).message);\n          this.errorMessage = (err as Error).message;\n          this.isLoading = false;\n          this.formGroup.enable();\n        },\n      );\n  }\n\n  private createFormGroup(\n    updateOn: 'submit' | 'change',\n    previousValue?: { [key: string]: unknown },\n  ): FormGroup {\n    // tslint:disable\n    const formGroup = this.formBuilder.group(\n      {\n        identifier: [undefined, [Validators.required, Validators.email]],\n        password: [undefined, [Validators.required]],\n      },\n      {\n        updateOn,\n        validators: this.mustNotBeRejectedValidator(),\n      },\n      // tslint:enable\n    );\n    if (previousValue !== undefined) {\n      formGroup.setValue(previousValue);\n    }\n\n    return formGroup;\n  }\n\n  private mustNotBeRejectedValidator(): () => void {\n    return () => {\n      if (this.errorMessage === AuthError.InvalidEmail) {\n        this.f.identifier.setErrors({ mustNotBeRejected: true });\n      } else if (this.errorMessage === AuthError.InvalidPassword) {\n        this.f.password.setErrors({ mustNotBeRejected: true });\n      } else if (this.errorMessage !== '') {\n        this.snackbarService.open(this.errorMessage, 'warn');\n      }\n      this.errorMessage = '';\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    Email address\n    \n    You must fill in this field\n    Please check your identifier\n    Not a valid email\n  \n\n  \n    \n    Password\n    \n      {{\n        isPasswordHidden ? 'visibility_off' : 'visibility'\n      }}\n    \n    You must fill in this field\n    Please check your password\n  \n\n  \n    \n    Forgot password\n    \n      Submit\n      send\n    \n  \n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                .form-field {\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Email address        You must fill in this field    Please check your identifier    Not a valid email            Password          {{        isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\'      }}        You must fill in this field    Please check your password            Forgot password          Submit      send      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockUser.html":{"url":"interfaces/MockUser.html","title":"interface - MockUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MockUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Account\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { delay, switchMap } from 'rxjs/operators';\n\nimport { Account, Role } from '../core/models/user.model';\n\nimport {\n  AuthError,\n  LoggedInUser,\n  LoginDto,\n  RegisterDto,\n  ResetPasswordDto,\n} from './auth.model';\n\nexport interface MockUser extends Account {\n  password: string;\n}\n\n/** Fake User to test app without running API */\nexport const mockUser: MockUser = {\n  id: 42,\n  email: 'johndoe@email.com',\n  password: 'JohnDoePass123',\n  firstName: 'John',\n  lastName: 'Doe',\n  isConfirmed: true,\n  createdAt: new Date('September 22, 2018 15:00:00'),\n  updatedAt: new Date('October 12, 2020 19:00:00'),\n  roles: [Role.Ghost],\n};\nconst validToken = 'johndoe.test.token';\n\nconst mockDelay = 1000;\n\nexport const loginForTest$ = (input: LoginDto): Observable => {\n  const isEmailCorrect = input.email.toLowerCase() === mockUser.email;\n  if (!isEmailCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Invalid email'))),\n    );\n  }\n  const isPasswordCorrect = input.password === mockUser.password;\n  if (!isPasswordCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Invalid password'))),\n    );\n  }\n  const { password, ...account } = mockUser;\n\n  return of({\n    jwt: 'ey...',\n    account,\n  } as LoggedInUser).pipe(delay(mockDelay));\n};\n\nexport const registerForTest$ = (\n  input: RegisterDto,\n): Observable => {\n  if (input.email.toLowerCase() === mockUser.email) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Email already exists'))),\n    );\n  }\n\n  return of({\n    jwt: 'ey...',\n    account: {\n      id: 43,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      firstName: input.firstName,\n      lastName: input.lastName,\n      email: input.email,\n      isConfirmed: false,\n    },\n  } as LoggedInUser).pipe(delay(mockDelay));\n};\n\nexport const confirmEmailForTest$ = (\n  account: Account | undefined,\n  token: string,\n): Observable => {\n  if (account === undefined) {\n    return throwError(new Error(AuthError.EmailConfirmed));\n  }\n  if (account.isConfirmed) {\n    return throwError(new Error(AuthError.EmailConfirmed));\n  }\n  if (token !== validToken) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => {\n        return throwError(new Error(AuthError.InvalidToken));\n      }),\n    );\n  }\n  const confirmedMockUser = { ...mockUser, isConfirmed: true };\n\n  return of({\n    jwt: 'ey...',\n    account: confirmedMockUser,\n  }).pipe(delay(mockDelay));\n};\n\nexport const resendConfirmationEmailForTest$ = (): Observable => {\n  return of({ isSuccess: true }).pipe(delay(2000));\n};\n\nexport const forgotPasswordForTest$ = (): Observable => {\n  return of({ isProcessed: true }).pipe(delay(mockDelay));\n};\n\nexport const resetPasswordForTest$ = (\n  input: ResetPasswordDto,\n  id: number,\n  token: string,\n): Observable => {\n  const isParamsCorrect = id === mockUser.id && token === validToken;\n  if (!isParamsCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => {\n        return throwError(new Error(AuthError.InvalidToken));\n      }),\n    );\n  }\n\n  return of({ isProcessed: true }).pipe(delay(mockDelay));\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/not-found/not-found.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotFoundComponent implements OnInit {\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  404\n  Page not found\n\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404  Page not found'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotFoundModule.html":{"url":"modules/NotFoundModule.html","title":"module - NotFoundModule","body":"\n                   \n\n\n\n\n    Modules\n    NotFoundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/not-found/not-found.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NotFoundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NotFoundComponent } from './not-found.component';\n\nconst routes: Routes = [{ path: '', component: NotFoundComponent }];\n\n@NgModule({\n  declarations: [NotFoundComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class NotFoundModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/NotUserGuard.html":{"url":"guards/NotUserGuard.html","title":"guard - NotUserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    NotUserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/not-user.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/not-user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/not-user.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LogService, LogSubject } from '../services/log.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotUserGuard implements CanActivate {\n  constructor(\n    private readonly logService: LogService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  canActivate(): Observable {\n    return this.userService.account$.pipe(\n      map((account) => {\n        if (account !== undefined) {\n          this.logService.info(LogSubject.Guard, this.constructor.name);\n\n          return this.router.parseUrl('/');\n        }\n\n        return true;\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterDto.html":{"url":"interfaces/RegisterDto.html","title":"interface - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register-form/register-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPasswordHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                    Private\n                                mustNotBeRejectedValidator\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseDialog\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorHappens\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, snackbarService: SnackbarService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/register-form/register-form.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        errorHappens\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(updateOn: \"submit\" | \"change\", previousValue?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOn\n                                    \n                                            \"submit\" | \"change\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previousValue\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mustNotBeRejectedValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustNotBeRejectedValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCloseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nonCloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription | undefined\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPasswordHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register-form/register-form.component.ts:41\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\nimport { ApiError } from '../../core/models/error.model';\nimport { SnackbarService } from '../../core/services/snackbar.service';\nimport { mustMatchValidator } from '../../shared/validators/must-match.validator';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\nimport { ConfirmEmailDialogComponent } from '../confirm-email-dialog/confirm-email-dialog.component';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegisterFormComponent implements OnInit, OnDestroy {\n  @Output() readonly errorHappens = new EventEmitter();\n  formGroup: FormGroup;\n  isLoading = false;\n  isPasswordHidden = true;\n  errorMessage = '';\n  private readonly isDestroyed$ = new Subject();\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly router: Router,\n    private readonly snackbarService: SnackbarService,\n    private readonly dialog: MatDialog,\n  ) {\n    this.formGroup = this.createFormGroup('change');\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onSubmit(): Subscription | undefined {\n    this.isLoading = true;\n    this.formGroup.disable();\n    this.isPasswordHidden = true;\n\n    return this.authService\n      .register$({\n        firstName: this.f.firstName?.value as string,\n        lastName: this.f.lastName?.value as string,\n        email: this.f.email?.value as string,\n        password: this.f.password?.value as string,\n      })\n      .pipe(\n        switchMap((res) =>\n          this.dialog.open(ConfirmEmailDialogComponent).afterClosed(),\n        ),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe(\n        (afterClosed) => this.router.navigate(['/']),\n        (err) => {\n          this.errorHappens.emit((err as ApiError).message);\n          this.errorMessage = (err as ApiError).message;\n          this.isLoading = false;\n          this.formGroup.enable();\n        },\n      );\n  }\n\n  onCloseDialog(): Promise {\n    this.dialog.closeAll();\n\n    return this.router.navigate(['home']);\n  }\n\n  private createFormGroup(\n    updateOn: 'submit' | 'change',\n    previousValue?: { [key: string]: unknown },\n  ): FormGroup {\n    // tslint:disable\n    const formGroup = this.formBuilder.group(\n      {\n        firstName: [null, [Validators.required]],\n        lastName: [null, [Validators.required]],\n        email: [null, [Validators.required, Validators.email]],\n        password: [\n          null,\n          [Validators.required, Validators.pattern(/^.{8,255}$/)],\n        ],\n        confirmPassword: [null, [Validators.required]],\n      },\n      {\n        updateOn,\n        validators: [\n          mustMatchValidator('password', 'confirmPassword'),\n          this.mustNotBeRejectedValidator(),\n        ],\n      },\n      // tslint:enable\n    );\n\n    if (previousValue !== undefined) {\n      formGroup.setValue(previousValue);\n    }\n\n    return formGroup;\n  }\n\n  private mustNotBeRejectedValidator(): (formGroup: FormGroup) => void {\n    return (formGroup: FormGroup) => {\n      if (this.errorMessage === AuthError.EmailExists) {\n        formGroup.controls.email.setErrors({ mustNotBeRejected: true });\n      } else if (this.errorMessage !== '') {\n        this.snackbarService.open(this.errorMessage, 'warn');\n      }\n      this.errorMessage = '';\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    First name\n    \n    You must fill in this field\n    Must contain 2-50 alphanumeric characters\n  \n\n  \n    Last name\n    \n    You must fill in this field\n    Must contain 2-50 alphanumeric characters\n  \n\n  \n    Email address\n    \n    You must fill in this field\n    Not a valid email\n    Email is already taken\n  \n\n  \n    \n    Password\n    \n      {{\n        isPasswordHidden ? 'visibility_off' : 'visibility'\n      }}\n    \n    You must fill in this field\n    Must contain 8+ characters\n  \n\n  \n    \n    Confirm password\n    \n      \n        {{ isPasswordHidden ? 'visibility_off' : 'visibility' }}\n      \n    \n    Passwords doesn't match\n    You must fill in this field\n    \n  \n\n  \n    \n    \n    \n      Submit\n      send\n    \n  \n\n\n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                .form-field {\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      First name        You must fill in this field    Must contain 2-50 alphanumeric characters        Last name        You must fill in this field    Must contain 2-50 alphanumeric characters        Email address        You must fill in this field    Not a valid email    Email is already taken            Password          {{        isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\'      }}        You must fill in this field    Must contain 8+ characters            Confirm password                  {{ isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\' }}              Passwords doesn\\'t match    You must fill in this field                          Submit      send      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountId\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isFormSubmitted\n                            \n                            \n                                isPasswordHidden\n                            \n                            \n                                isResetPasswordFailed\n                            \n                            \n                                isResetPasswordSucceed\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                    Private\n                                mustNotBeRejectedValidator\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, snackbarService: SnackbarService, changeDetectorRef: ChangeDetectorRef, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(updateOn: \"submit\" | \"change\", previousValue?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOn\n                                    \n                                            \"submit\" | \"change\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previousValue\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mustNotBeRejectedValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustNotBeRejectedValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription | undefined\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormSubmitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPasswordHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResetPasswordFailed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResetPasswordSucceed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { finalize, takeUntil } from 'rxjs/operators';\n\nimport { SnackbarService } from '../../core/services/snackbar.service';\nimport { mustMatchValidator } from '../../shared/validators/must-match.validator';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  formGroup: FormGroup;\n\n  isFormSubmitted = false;\n  isResetPasswordSucceed = false;\n  isResetPasswordFailed = false;\n\n  accountId = 0;\n  token = '';\n  isPasswordHidden = true;\n  errorMessage = '';\n  private readonly isDestroyed$ = new Subject();\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly snackbarService: SnackbarService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly activatedRoute: ActivatedRoute,\n  ) {\n    this.formGroup = this.createFormGroup('change');\n  }\n\n  async ngOnInit(): Promise {\n    const idFromUrl = this.activatedRoute.snapshot.paramMap.get('id') ?? '';\n    this.accountId = idFromUrl !== '' ? parseInt(idFromUrl, 10) : 0;\n    this.token = this.activatedRoute.snapshot.paramMap.get('token') ?? '';\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onSubmit(): Subscription | undefined {\n    this.isFormSubmitted = true;\n    this.formGroup.disable();\n    this.isPasswordHidden = true;\n\n    return this.authService\n      .resetPassword$(\n        { newPassword: this.f.password?.value as string },\n        this.accountId,\n        this.token,\n      )\n      .pipe(\n        finalize(() => {\n          this.isFormSubmitted = false;\n          this.changeDetectorRef.detectChanges();\n        }),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe(\n        (res) => (this.isResetPasswordSucceed = true),\n        (err) => {\n          this.errorMessage = (err as Error)?.message;\n          if (\n            this.errorMessage ===\n            AuthError.NewPasswordMustBeDifferentFromCurrent\n          ) {\n            this.isFormSubmitted = false;\n            this.formGroup.enable();\n            this.f.password.setErrors({ mustNotBeRejected: true });\n            this.errorMessage = '';\n          } else {\n            this.isResetPasswordFailed = true;\n          }\n        },\n      );\n  }\n\n  private createFormGroup(\n    updateOn: 'submit' | 'change',\n    previousValue?: { [key: string]: unknown },\n  ): FormGroup {\n    // tslint:disable\n    const formGroup = this.formBuilder.group(\n      {\n        password: [\n          null,\n          [Validators.required, Validators.pattern(/^.{8,191}$/)],\n        ],\n        confirmPassword: [null, [Validators.required]],\n      },\n      {\n        updateOn,\n        validators: [\n          mustMatchValidator('password', 'confirmPassword'),\n          this.mustNotBeRejectedValidator(),\n        ],\n      },\n      // tslint:enable\n    );\n    if (previousValue !== undefined) {\n      formGroup.setValue(previousValue);\n    }\n\n    return formGroup;\n  }\n\n  private mustNotBeRejectedValidator(): () => void {\n    return () => {\n      if (this.errorMessage !== '') {\n        this.snackbarService.open(this.errorMessage, 'warn');\n      }\n      this.errorMessage = '';\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n  \n\n\n\n  Set your new password\n  \n    \n      \n        \n        Password\n        \n          {{\n            isPasswordHidden ? 'visibility_off' : 'visibility'\n          }}\n        \n        You must fill in this field\n        Must contain 8+ characters\n        New password must be different from current\n      \n\n      \n        \n        Confirm password\n        \n          \n            {{ isPasswordHidden ? 'visibility_off' : 'visibility' }}\n          \n        \n        Passwords doesn't match\n        You must confirm the password\n      \n\n      \n        \n        \n        \n          Submit\n          send\n        \n      \n    \n  \n\n\n\n  \n    error_outline\n  \n  Could not reset your password.\n  You can request a new verification link if the old one has expired.\n  \n    \n\n    \n\n    \n      Forgot password\n      open_in_new\n    \n  \n\n\n\n  \n    done\n  \n  You have just changed your password, you can now authenticate yourself.\n  \n    \n    \n      Sign in\n      open_in_new\n    \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                .auth-card {\n  max-width: 400px;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n.status-icon {\n  font-size: 75px;\n  height: 75px;\n  width: 75px;\n}\n\n.form-field {\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Set your new password                            Password                  {{            isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\'          }}                You must fill in this field        Must contain 8+ characters        New password must be different from current                            Confirm password                              {{ isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\' }}                          Passwords doesn\\'t match        You must confirm the password                                              Submit          send                          error_outline    Could not reset your password.  You can request a new verification link if the old one has expired.                    Forgot password      open_in_new            done    You have just changed your password, you can now authenticate yourself.                Sign in      open_in_new      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordDto.html":{"url":"interfaces/ResetPasswordDto.html","title":"interface - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        newPassword\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nApiPathPipe\n\nApiPathPipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nApiPathPipe->SharedModule\n\n\n\n\n\nImageDefaultDirective\n\nImageDefaultDirective\n\nSharedModule -->\n\nImageDefaultDirective->SharedModule\n\n\n\n\n\nApiPathPipe \n\nApiPathPipe \n\nApiPathPipe  -->\n\nSharedModule->ApiPathPipe \n\n\n\n\n\nImageDefaultDirective \n\nImageDefaultDirective \n\nImageDefaultDirective  -->\n\nSharedModule->ImageDefaultDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiPathPipe\n                        \n                        \n                            ImageDefaultDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiPathPipe\n                        \n                        \n                            ImageDefaultDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { ImageDefaultDirective } from './directives/image-default.directive';\nimport { ApiPathPipe } from './pipes/api-path.pipe';\n\nconst materialModules = [\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatTabsModule,\n  MatTooltipModule,\n];\n\nconst directives = [ImageDefaultDirective];\nconst pipes = [ApiPathPipe];\n\n@NgModule({\n  declarations: [directives, pipes],\n  imports: [CommonModule, materialModules],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    materialModules,\n    directives,\n    pipes,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/snackbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                horizontalPosition\n                            \n                            \n                                verticalPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/snackbar.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(message: string, color: \"primary\" | \"warn\" | \"accent\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/snackbar.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                            \"primary\" | \"warn\" | \"accent\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatSnackBarRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            horizontalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBarHorizontalPosition\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/snackbar.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBarVerticalPosition\n\n                        \n                    \n                    \n                        \n                            Default value : 'top'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/snackbar.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarRef,\n  MatSnackBarVerticalPosition,\n  TextOnlySnackBar,\n} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(private readonly snackBar: MatSnackBar) {}\n\n  open(\n    message: string,\n    color: 'primary' | 'warn' | 'accent',\n  ): MatSnackBarRef {\n    return this.snackBar.open(message, undefined, {\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: ['mat-toolbar', `mat-${color}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theme.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDarkToggled\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDarkToggledKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyProperTheme\n                            \n                            \n                                init\n                            \n                            \n                                toggleDark\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/theme.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                        RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyProperTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyProperTheme(isDarkTheme: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theme.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDarkTheme\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theme.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleDark\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleDark()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theme.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkToggled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDarkToggledKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isDarkToggled'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { LocalStorageService } from './local-storage.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private readonly renderer: Renderer2;\n  private readonly isDarkToggledKey = 'isDarkToggled';\n  isDarkToggled = false;\n\n  constructor(\n    private readonly localStorageService: LocalStorageService,\n    private readonly rendererFactory: RendererFactory2,\n  ) {\n    // tslint:disable-next-line: no-null-keyword\n    this.renderer = this.rendererFactory.createRenderer(undefined, null);\n  }\n\n  init(): void {\n    const themeFromStorage = this.localStorageService.getItemInStorage(\n      this.isDarkToggledKey,\n    ) as boolean | undefined;\n\n    this.isDarkToggled =\n      themeFromStorage !== undefined\n        ? (this.isDarkToggled = themeFromStorage)\n        : window?.matchMedia('(prefers-color-scheme: dark)')?.matches ?? false;\n\n    this.applyProperTheme(this.isDarkToggled);\n  }\n\n  toggleDark(): void {\n    this.isDarkToggled = !this.isDarkToggled;\n    this.applyProperTheme(this.isDarkToggled);\n    this.localStorageService.setItemInStorage(\n      this.isDarkToggledKey,\n      this.isDarkToggled,\n    );\n  }\n\n  private applyProperTheme(isDarkTheme: boolean): void {\n    this.renderer[isDarkTheme ? 'addClass' : 'removeClass'](\n      document.body,\n      'theme-dark',\n    );\n    this.renderer[isDarkTheme ? 'removeClass' : 'addClass'](\n      document.body,\n      'theme-light',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        path\n                                \n                                \n                                        thumbPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    File path, must be prefixed by server host\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbPath\n                                    \n                                \n                                \n                                    \n                                        thumbPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Resized file path, must be prefixed by server host\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export enum Role {\n  Admin = 'admin',\n  Ghost = 'ghost',\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\nexport interface Account {\n  id: number;\n  createdAt: Date;\n  updatedAt: Date;\n  firstName: string;\n  lastName: string;\n  email: string;\n  roles: Role[];\n  avatar?: Upload;\n  isConfirmed: boolean;\n}\n\nexport interface Upload {\n  /**\n   * File path, must be prefixed by server host\n   * @example 'uploads/public/uuid.jpg'\n   */\n  path: string;\n\n  /**\n   * Resized file path, must be prefixed by server host\n   * @example 'uploads/public/uuid-thumb.jpg'\n   */\n  thumbPath: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/user.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/user.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LogService, LogSubject } from '../services/log.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGuard implements CanActivate {\n  constructor(\n    private readonly logService: LogService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  canActivate(): Observable {\n    const jwt = this.userService.jwt;\n\n    return this.userService.account$.pipe(\n      map((account) => {\n        if (jwt === undefined || account === undefined) {\n          this.logService.info(LogSubject.Guard, this.constructor.name);\n\n          return this.router.parseUrl('/auth');\n        }\n\n        return true;\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account$\n                            \n                            \n                                    Private\n                                    Readonly\n                                accountKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                accountSubject$\n                            \n                            \n                                jwt\n                            \n                            \n                                    Private\n                                    Readonly\n                                jwtKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                update\n                            \n                            \n                                updateAvatar$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(account: Account, jwt?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jwt\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Account\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAvatar$\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAvatar$(formData: FormData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.accountSubject$.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            accountKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'account'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            accountSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            jwtKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { Account, Upload } from '../models/user.model';\n\nimport { LocalStorageService } from './local-storage.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private readonly accountKey = 'account';\n  private readonly jwtKey = 'jwt';\n  private readonly accountSubject$ = new ReplaySubject(1);\n  account$ = this.accountSubject$.asObservable();\n  jwt: string | undefined;\n\n  constructor(\n    private readonly localStorageService: LocalStorageService,\n    private readonly router: Router,\n    private readonly http: HttpClient,\n  ) {\n    const account = this.localStorageService.getItemInStorage(\n      this.accountKey,\n    ) as Account | undefined;\n    this.accountSubject$.next(account);\n    const jwt = this.localStorageService.getItemInStorage(this.jwtKey) as\n      | string\n      | undefined;\n    this.jwt = jwt;\n  }\n\n  update(account: Account, jwt?: string): Account {\n    this.localStorageService.setItemInStorage(this.accountKey, account);\n    this.accountSubject$.next(account);\n\n    if (jwt !== undefined) {\n      this.localStorageService.setItemInStorage(this.jwtKey, jwt);\n      this.jwt = jwt;\n    }\n\n    return account;\n  }\n\n  delete(): void {\n    this.localStorageService.removeItemInStorage(this.accountKey);\n    this.accountSubject$.next(undefined);\n    this.localStorageService.removeItemInStorage(this.jwtKey);\n    this.jwt = undefined;\n    this.router.navigate(['/auth']);\n  }\n\n  updateAvatar$(formData: FormData): Observable {\n    return this.account$.pipe(\n      take(1),\n      switchMap((account) =>\n        account !== undefined\n          ? this.http.post(\n              `${environment.apiUrl}/accounts/${account.id}/avatar`,\n              formData,\n            )\n          : of(undefined),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.0.0 (2021-08-21)\nFeatures\n\ndark scrollbar, better image-default.directive, not logged user is allowed to confirm email (bb2997f)\ninitial commit (5809b0f)\nuser can upload avatar (88c485a)\n\nBug Fixes\n\nalways use relative typescript imports (0e4e9dc)\npassword validators, forgot-password error handling, avatar refresh when changed (68d0e53)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/article/article.component.ts\n            \n            component\n            ArticleComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            interface\n            MockUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            confirmEmailForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            forgotPasswordForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            loginForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            mockDelay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            mockUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            registerForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            resendConfirmationEmailForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            resetPasswordForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            validToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            ForogtPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            LoggedInUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            ResetPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts\n            \n            component\n            ConfirmEmailDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/confirm-email/confirm-email.component.ts\n            \n            component\n            ConfirmEmailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts\n            \n            component\n            ForgotPasswordDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/auth/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/auth/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/guards/confirmed-user.guard.ts\n            \n            guard\n            ConfirmedUserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/not-user.guard.ts\n            \n            guard\n            NotUserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http-jwt.interceptor.ts\n            \n            interceptor\n            HttpJwtInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout-footer/layout-footer.component.ts\n            \n            component\n            LayoutFooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout-nav/layout-nav.component.ts\n            \n            component\n            LayoutNavComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout-settings/layout-settings.component.ts\n            \n            component\n            LayoutSettingsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout-sidenav/layout-sidenav.component.ts\n            \n            component\n            LayoutSidenavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout.component.ts\n            \n            interface\n            Destination\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/error.model.ts\n            \n            interface\n            ApiError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            LoggedInUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            Upload\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/directives/image-default.directive.ts\n            \n            directive\n            ImageDefaultDirective\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/api-path.pipe.ts\n            \n            pipe\n            ApiPathPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            variable\n            directives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            variable\n            materialModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            variable\n            pipes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/validators/must-match.validator.ts\n            \n            function\n            mustMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^12.0.0\n        \n            @angular/cdk : ^12.0.0\n        \n            @angular/common : ^12.0.0\n        \n            @angular/compiler : ^12.0.0\n        \n            @angular/core : ^12.0.0\n        \n            @angular/forms : ^12.0.0\n        \n            @angular/localize : ^12.0.0\n        \n            @angular/material : ^12.0.0\n        \n            @angular/platform-browser : ^12.0.0\n        \n            @angular/platform-browser-dynamic : ^12.0.0\n        \n            @angular/router : ^12.0.0\n        \n            @angular/service-worker : ^12.0.0\n        \n            rxjs : ~6.6.7\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthError   (src/.../auth.model.ts)\n                        \n                        \n                            LogSubject   (src/.../log.service.ts)\n                        \n                        \n                            Role   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.model.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthError\n                    \n                \n                        \n                            \n                                 InvalidEmail\n                            \n                        \n                        \n                            \n                                Value : Invalid email\n                            \n                        \n                        \n                            \n                                 InvalidPassword\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 EmailExists\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 EmailConfirmed\n                            \n                        \n                        \n                            \n                                Value : Email already confirmed\n                            \n                        \n                        \n                            \n                                 EmailNotFound\n                            \n                        \n                        \n                            \n                                Value : Email not found\n                            \n                        \n                        \n                            \n                                 InvalidToken\n                            \n                        \n                        \n                            \n                                Value : Invalid token\n                            \n                        \n                        \n                            \n                                 NewPasswordMustBeDifferentFromCurrent\n                            \n                        \n                        \n                            \n                                Value : New password must be different from current\n                            \n                        \n            \n        \n\n    src/app/core/services/log.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogSubject\n                    \n                \n                        \n                            \n                                 Intercept\n                            \n                        \n                        \n                            \n                                Value : 🎾\n                            \n                        \n                        \n                            \n                                 Guard\n                            \n                        \n                        \n                            \n                                Value : ⚔️\n                            \n                        \n                        \n                            \n                                 Store\n                            \n                        \n                        \n                            \n                                Value : 💾\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : ❌\n                            \n                        \n            \n        \n\n    src/app/core/models/user.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 Ghost\n                            \n                        \n                        \n                            \n                                Value : ghost\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            mustMatchValidator   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/validators/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            mustMatchValidator\n                        \n                        \n                    \n                \n            \n            \n                \nmustMatchValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\ndemo (en-US) - demo (fr) - compodoc - changelog\n\n\nGet corresponding backend\nIf you want the full stack you can get corresponding API here.\nRun it in development\nLocal Node.js\nYou can run this project in watch/debug mode in local dev environment, to do so you need Node.js.\nExample :\n# install dependencies\nnpm i\n# run in development mode, default language\nnpm run start\n# run in development mode, in french\nnpm run start:frVSCode debugger\nIf you use Visual Studio Code You can easily launch this app in debug mode, you need this extension (automatically added if you accept recommended extensions), and Google Chrome. All settings are already done in .vscode folder. Follow this guide to know more.\n\nUse Chromium instead of Chrome on Linux distros\ncreate an alias with this command : sudo ln -s /usr/bin/chromium /usr/bin/google-chrome, path can be different on your distro !\n\nRun it in production\nContainerized\nYou can run this project in production mode in container, to do so you just need Docker.\nExample :\n# with docker only\ndocker build --target production -t ng-new .\ndocker run -p 80:8080 -p 443:443 --name ng-new ng-new\n\n# if you have Docker AND Node.js installed you can use short commands :\nnpm run docker:build:prod\nnpm run docker:prodDocumentation\n\nCode documentation: this project use Compodoc a documentation tool for Angular & Nestjs applications. It generates a static documentation of your application.\n\nExample :\n# code documentation: build doc website and open it\nnpm run docGit flow\nThis project respects Conventional commits, a Git commit convention made by the Angular team. Basically, every pull request should end up with one commit and a standardized commit message.\nTo easily respect this a tool is provided: Commitizen called with npm run cz command, you are not obligated to use it, if you make your commits manually they will be tested too.\n\nAttention !\nDo not commit without a node_modules folder at the root of the project (run npm i command to get it), otherwise your commit and your code will not trigger lint / format / cz scripts.\n\nExample :\n# add your changes\ngit add .\n# commit with commitizen-cli\nnpm run cz\n# push changes\ngit push\n\n# if your commit fail you can perform changes and retry with previous message\nnpm run cz -- --retryCreate a release\nThis project respects Semantic Versioning.\nTo easily respect this specification a tool is provided: Standard-version.\n\nNote: commit or stash any changes before create a release.\nNote: Semantic versioning works differently for versions starting with v0.x.x. Everything before v1.0.0 is considered experimental and breaking changes are only minor version bumps. The moment you feel comfortable you need to bump the version manually to v1.0.0 and then the well-known versioning kicks in where breaking changes bump the major version, features bump the minor and fixes bump the patch version.\n\nExample :\n# add your changes\ngit add .\n\n# release first version of the project (v0.0.0)\nnpm run release -- --first-release\n# OR\n# release first stable version of the project (v1.0.0)\nnpm run release -- --release-as 1.0.0\n# OR\n# perform a prerelease\nnpm run release:prerelease\n# OR\n# perform a release\nnpm run release\n\n# push your changes, WITH version tags\ngit push --follow-tags\nWhen you perform a release you automatically perform the following actions :\n\nincrement version number in package.json (uses the fix: and feat: tags to establish the semantic versioning)\nadd a Git tag\nbuild project in prod mode for Github Pages demos and Documentation in ./docs folder\ncreate/update CHANGELOG.md\ncommit all staged changes with correct commit message\n\n\nInternationalization\nThis project is available in multiple languages, it implements Angular internationalization. If you run it in containerized mode Nginx server redirects users to the correct version of the app, according to their browser language.\nWhen you add/modify/delete a localized string in project you have to update locale to generate new messages.xlf file and translate the new string in messages.{fr,others}.xlf file(s). To do this, it is advisable to use a translation software like Poedit.\nExample :\n# update locale\nnpm run locale\nWhen you update locale you automatically perform the following actions :\n\nupdate messages.xlf with angular built-in internationalization module\nmerge messages.xlf and messages.fr.xlf using ngx-i18nsupport-lib\n\n\nPerformances monitoring\n\nSource map explorer: determines which file each byte in your minified code came from. It shows you a treemap visualization to help you debug where all the code is coming from.\n\nWebdev measure: analyzes web apps and web pages, collecting modern performance metrics and insights on developer best practices. Click here to check your app\n\n\nExample :\n# analyze your webpack bundle with source-map-explorer\nnpm run analyzeMake it yours\n\nClone this project and move into it\nReset git history : rm -rf .git && git init\nRun npm ci after reset git history (important for pre-commit hooks)\nReplace ALL ng-new occurrence with your project name\nReplace ALL miaborde occurrence with your Github username\nReplace ALL Angular progressive web app starter. occurrence with your project description\nChange icons in assets folder, You can generate yours with pwa-asset-generator\nYou're good to go :)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotFoundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_declarations\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nCoreModule->LayoutComponent \n\n\n\n\n\nArticleComponent\n\nArticleComponent\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nArticleComponent->ArticleModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConfirmEmailComponent\n\nConfirmEmailComponent\n\nAuthModule -->\n\nConfirmEmailComponent->AuthModule\n\n\n\n\n\nConfirmEmailDialogComponent\n\nConfirmEmailDialogComponent\n\nAuthModule -->\n\nConfirmEmailDialogComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nForgotPasswordDialogComponent\n\nForgotPasswordDialogComponent\n\nAuthModule -->\n\nForgotPasswordDialogComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAuthModule -->\n\nRegisterFormComponent->AuthModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthModule -->\n\nResetPasswordComponent->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nApiPathPipe \n\nApiPathPipe \n\nApiPathPipe  -->\n\nSharedModule->ApiPathPipe \n\n\n\n\n\nImageDefaultDirective \n\nImageDefaultDirective \n\nImageDefaultDirective  -->\n\nSharedModule->ImageDefaultDirective \n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nCoreModule -->\n\nLayoutComponent->CoreModule\n\n\n\n\n\nLayoutFooterComponent\n\nLayoutFooterComponent\n\nCoreModule -->\n\nLayoutFooterComponent->CoreModule\n\n\n\n\n\nLayoutNavComponent\n\nLayoutNavComponent\n\nCoreModule -->\n\nLayoutNavComponent->CoreModule\n\n\n\n\n\nLayoutSettingsComponent\n\nLayoutSettingsComponent\n\nCoreModule -->\n\nLayoutSettingsComponent->CoreModule\n\n\n\n\n\nLayoutSidenavComponent\n\nLayoutSidenavComponent\n\nCoreModule -->\n\nLayoutSidenavComponent->CoreModule\n\n\n\n\n\nHttpErrorInterceptor\n\nHttpErrorInterceptor\n\nCoreModule -->\n\nHttpErrorInterceptor->CoreModule\n\n\n\n\n\nHttpJwtInterceptor\n\nHttpJwtInterceptor\n\nCoreModule -->\n\nHttpJwtInterceptor->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\nApiPathPipe\n\nApiPathPipe\n\nSharedModule -->\n\nApiPathPipe->SharedModule\n\n\n\n\n\nImageDefaultDirective\n\nImageDefaultDirective\n\nSharedModule -->\n\nImageDefaultDirective->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            confirmEmailForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            directives   (src/.../shared.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            forgotPasswordForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            loginForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            materialModules   (src/.../shared.module.ts)\n                        \n                        \n                            mockDelay   (src/.../auth.mock.ts)\n                        \n                        \n                            mockUser   (src/.../auth.mock.ts)\n                        \n                        \n                            pipes   (src/.../shared.module.ts)\n                        \n                        \n                            registerForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            resendConfirmationEmailForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            resetPasswordForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            validToken   (src/.../auth.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            confirmEmailForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  account: Account | undefined,\n  token: string,\n): Observable => {\n  if (account === undefined) {\n    return throwError(new Error(AuthError.EmailConfirmed));\n  }\n  if (account.isConfirmed) {\n    return throwError(new Error(AuthError.EmailConfirmed));\n  }\n  if (token !== validToken) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => {\n        return throwError(new Error(AuthError.InvalidToken));\n      }),\n    );\n  }\n  const confirmedMockUser = { ...mockUser, isConfirmed: true };\n\n  return of({\n    jwt: 'ey...',\n    account: confirmedMockUser,\n  }).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgotPasswordForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): Observable => {\n  return of({ isProcessed: true }).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (input: LoginDto): Observable => {\n  const isEmailCorrect = input.email.toLowerCase() === mockUser.email;\n  if (!isEmailCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Invalid email'))),\n    );\n  }\n  const isPasswordCorrect = input.password === mockUser.password;\n  if (!isPasswordCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Invalid password'))),\n    );\n  }\n  const { password, ...account } = mockUser;\n\n  return of({\n    jwt: 'ey...',\n    account,\n  } as LoggedInUser).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockUser\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  id: 42,\n  email: 'johndoe@email.com',\n  password: 'JohnDoePass123',\n  firstName: 'John',\n  lastName: 'Doe',\n  isConfirmed: true,\n  createdAt: new Date('September 22, 2018 15:00:00'),\n  updatedAt: new Date('October 12, 2020 19:00:00'),\n  roles: [Role.Ghost],\n}\n                        \n                    \n\n                \n                    \n                        Fake User to test app without running API \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  input: RegisterDto,\n): Observable => {\n  if (input.email.toLowerCase() === mockUser.email) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Email already exists'))),\n    );\n  }\n\n  return of({\n    jwt: 'ey...',\n    account: {\n      id: 43,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      firstName: input.firstName,\n      lastName: input.lastName,\n      email: input.email,\n      isConfirmed: false,\n    },\n  } as LoggedInUser).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resendConfirmationEmailForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): Observable => {\n  return of({ isSuccess: true }).pipe(delay(2000));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  input: ResetPasswordDto,\n  id: number,\n  token: string,\n): Observable => {\n  const isParamsCorrect = id === mockUser.id && token === validToken;\n  if (!isParamsCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => {\n        return throwError(new Error(AuthError.InvalidToken));\n      }),\n    );\n  }\n\n  return of({ isProcessed: true }).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'johndoe.test.token'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            directives\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ImageDefaultDirective]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatTabsModule,\n  MatTooltipModule,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pipes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ApiPathPipe]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  version: `v${packageJson.version}`,\n  /** set to '' empty string to enable mocked account */\n  apiUrl: '',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  version: `(dev) v${packageJson.version}`,\n  /** set to '' empty string to enable mocked account */\n  apiUrl: 'http://localhost:3000/api',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
