var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Account.html",[0,0.9,1,0.987]],["body/interfaces/Account.html",[0,1.502,1,1.745,2,1.835,3,0.208,4,0.184,5,0.2,6,2.805,7,0.333,8,1.352,9,1.231,10,4.296,11,4.296,12,1.08,13,2.96,14,3.993,15,3.993,16,2.96,17,4.296,18,4.296,19,3.734,20,0.806,21,0.018,22,4.565,23,1.224,24,2.521,25,4.056,26,4.296,27,0.318,28,2.159,29,3.958,30,3.958,31,1.659,32,1.659,33,2.521,34,4.345,35,3.958,36,4.345,37,3.958,38,3.34,39,3.34,40,3.34,41,3.34,42,3.34,43,0.01,44,0.013,45,0.01]],["title/interfaces/ApiError.html",[0,0.9,46,2.429]],["body/interfaces/ApiError.html",[0,1.346,2,2.376,3,0.269,4,0.238,5,0.179,7,0.432,8,1.587,20,0.725,21,0.017,23,1.145,24,2.832,27,0.269,43,0.013,44,0.015,45,0.013,46,4.285,47,4.841,48,5.104,49,5.603]],["title/pipes/ApiPathPipe.html",[50,1.87,51,2.258]],["body/pipes/ApiPathPipe.html",[3,0.242,4,0.214,5,0.161,9,1.102,20,0.552,21,0.018,23,1.172,25,3.266,27,0.242,43,0.012,44,0.014,45,0.012,50,3.093,51,3.735,52,3.542,53,5.353,54,4.351,55,1.524,56,1.094,57,6.218,58,0.954,59,5.054,60,6.218,61,2.32,62,0.908,63,5.054,64,1.155,65,5.353,66,0.908,67,0.44,68,6.218,69,0.552,70,2.136,71,2.514,72,0.452,73,1.21,74,2.667,75,3.266,76,2.839,77,5.054,78,5.054,79,1.267,80,5.054]],["title/components/AppComponent.html",[81,0.385,82,1.034]],["body/components/AppComponent.html",[3,0.211,4,0.187,5,0.14,12,0.716,21,0.018,27,0.211,43,0.01,44,0.013,45,0.01,55,1.33,56,1.027,67,0.312,69,0.482,72,0.394,81,0.648,82,1.838,83,1.802,84,1.459,85,1.459,86,3.796,87,1.802,88,1.802,89,2.338,90,2.128,91,2.411,92,1.888,93,1.393,94,1.007,95,1.888,96,1.802,97,1.212,98,2.112,99,1.459,100,1.459,101,1.212,102,1.459,103,1.212,104,1.459,105,1.212,106,1.802,107,1.459,108,1.212,109,1.888,110,1.212,111,1.802,112,1.459,113,1.212,114,1.186,115,1.212,116,1.459,117,1.158,118,1.459,119,1.212,120,2.112,121,1.459,122,1.212,123,1.459,124,1.212,125,1.459,126,1.212,127,1.459,128,1.212,129,1.269,130,1.888,131,1.212,132,1.459,133,1.212,134,1.33,135,1.212,136,0.961,137,1.212,138,1.105,139,1.393,140,1.459]],["title/modules/AppModule.html",[141,1.305,142,2.635]],["body/modules/AppModule.html",[3,0.206,4,0.183,5,0.137,21,0.018,27,0.269,33,2.832,43,0.01,44,0.013,45,0.01,67,0.469,69,0.471,72,0.385,82,2.07,94,0.984,136,0.939,141,1.495,142,5.16,143,2.025,144,1.918,145,3.3,146,3.3,147,2.965,148,2.273,149,3.709,150,3.709,151,3.709,152,3.709,153,4.556,154,2.965,155,2.143,156,4.308,157,3.157,158,3.157,159,2.588,160,4.041,161,1.495,162,4.308,163,4.308,164,1.184,165,5.62,166,3.938,167,5.62,168,4.838,169,6.628,170,4.308,171,4.308,172,2.965,173,4.308,174,3.019,175,4.308,176,4.308,177,3.314,178,4.308,179,4.308,180,3.019,181,4.308,182,4.308,183,4.308,184,4.308,185,4.308]],["title/classes/AppPage.html",[72,0.336,186,2.892]],["body/classes/AppPage.html",[3,0.255,4,0.226,5,0.17,7,0.41,21,0.018,27,0.255,43,0.012,44,0.015,45,0.012,58,1.214,62,1.156,66,1.156,67,0.378,72,0.477,79,1.612,91,2.258,96,1.687,186,4.948,187,5.343,188,4.599,189,7.162,190,7.162,191,5.343,192,5.726,193,5.343,194,3.001,195,5.343,196,5.343,197,5.343,198,2.379,199,5.343]],["title/components/ArticleComponent.html",[81,0.385,101,1.034]],["body/components/ArticleComponent.html",[3,0.199,4,0.176,5,0.132,7,0.319,12,0.675,21,0.017,27,0.199,43,0.01,44,0.013,45,0.01,55,1.253,56,0.998,58,1.036,62,0.747,66,0.747,67,0.294,69,0.454,72,0.371,73,1.314,81,0.63,82,1.143,83,1.734,84,1.376,85,1.376,87,1.734,88,1.734,89,2.326,90,2.116,92,1.376,93,1.313,94,0.95,95,1.817,96,1.734,97,1.143,98,2.065,99,1.376,100,1.376,101,1.797,102,1.376,103,1.143,104,1.376,105,1.143,106,1.734,107,1.376,108,1.143,109,1.817,110,1.143,111,1.734,112,1.376,113,1.143,114,1.141,115,1.143,116,1.376,117,1.091,118,1.376,119,1.143,120,2.065,121,1.376,122,1.143,123,1.376,124,1.143,125,1.376,126,1.143,127,1.376,128,1.143,129,1.197,130,1.817,131,1.143,132,1.376,133,1.143,134,1.253,135,1.143,136,0.906,137,1.143,138,1.042,139,1.313,140,1.376,180,4.581,200,1.442,201,3.579,202,2.034,203,1.817,204,6.146,205,1.817,206,5.489,207,2.163,208,4.157,209,1.376,210,4.726]],["title/modules/ArticleModule.html",[141,1.305,211,2.635]],["body/modules/ArticleModule.html",[3,0.239,4,0.212,5,0.159,21,0.018,27,0.239,33,2.012,43,0.012,44,0.014,45,0.012,67,0.509,69,0.547,72,0.447,81,0.513,94,1.144,101,2.042,136,1.092,141,1.738,143,2.355,144,2.231,145,3.54,146,2.643,147,2.643,148,2.643,154,3.263,155,2.491,157,2.814,158,3.474,159,3.009,160,4.335,161,1.738,164,1.377,211,5.137,212,4.312,213,4.312,214,5.009,215,3.996,216,3.009,217,4.334,218,5.009,219,4.312,220,5.009,221,3.237,222,3.511]],["title/components/AuthComponent.html",[81,0.385,103,1.034]],["body/components/AuthComponent.html",[3,0.162,4,0.144,5,0.108,7,0.261,8,1.145,9,1.042,12,0.552,20,0.656,21,0.018,23,0.976,27,0.162,43,0.008,44,0.011,45,0.008,55,1.024,56,1.028,58,0.903,62,1.18,64,1.093,66,0.859,67,0.392,69,0.371,70,1.435,71,1.689,72,0.303,73,1.145,81,0.567,82,0.934,83,1.51,84,1.124,85,1.124,87,1.51,88,1.51,89,2.279,90,2.071,92,1.124,93,1.073,94,0.776,95,1.583,96,1.51,97,0.934,98,1.898,99,1.124,100,1.124,101,0.934,102,1.124,103,1.652,104,1.124,105,0.934,106,1.51,107,1.124,108,0.934,109,1.583,110,0.934,111,1.51,112,1.124,113,0.934,114,0.994,115,0.934,116,1.124,117,0.892,118,1.124,119,0.934,120,1.898,121,1.124,122,0.934,123,1.124,124,0.934,125,1.124,126,0.934,127,1.124,128,0.934,129,0.978,130,1.583,131,0.934,132,1.124,133,0.934,134,1.024,135,0.934,136,0.74,137,0.934,138,0.852,139,1.073,140,1.124,177,3.679,200,1.179,202,1.832,203,1.583,205,1.583,207,1.989,209,1.506,223,2.924,224,5.535,225,4.783,226,4.092,227,4.258,228,4.527,229,4.783,230,0.934,231,3.397,232,4.604,233,4.783,234,3.397,235,4.783,236,3.397,237,1.921,238,1.921,239,3.397,240,3.679,241,3.397,242,2.924,243,2.38,244,0.934,245,3.09,246,2.613,247,3.397,248,3.397,249,3.679,250,4.783,251,4.783]],["title/modules/AuthModule.html",[141,1.305,252,2.635]],["body/modules/AuthModule.html",[3,0.176,4,0.156,5,0.117,12,0.937,21,0.018,27,0.176,33,2.617,43,0.009,44,0.012,45,0.009,67,0.527,69,0.401,72,0.328,81,0.668,94,0.839,103,1.896,105,1.931,106,1.963,108,1.851,110,1.896,111,1.823,113,1.851,114,1.2,128,1.851,129,1.058,133,1.851,134,1.108,135,1.896,136,1.258,141,1.275,143,1.727,144,1.636,145,3.046,146,1.939,147,1.939,148,1.939,154,2.665,155,1.827,157,2.837,158,2.837,159,2.207,160,3.73,161,1.275,164,1.01,215,3.264,216,2.207,219,3.163,221,3.73,222,2.575,252,5.369,253,3.163,254,3.163,255,3.163,256,3.782,257,3.674,258,4.045,259,3.674,260,3.54,261,3.674,262,2.827,263,3.674,264,2.374,265,3.54,266,2.827,267,3.674,268,2.575,269,2.827,270,5.051,271,2.827,272,5.051,273,2.827,274,2.827,275,3.674,276,3.674]],["title/injectables/AuthService.html",[277,1.187,278,1.984]],["body/injectables/AuthService.html",[3,0.149,4,0.132,5,0.099,7,0.239,8,1.076,9,1.434,12,0.73,14,3.47,20,0.719,21,0.018,23,1.158,24,2.119,27,0.149,31,1.19,43,0.007,44,0.01,45,0.007,50,1.549,56,1.069,58,0.849,62,1.21,64,1.503,66,1.147,67,0.477,69,0.34,70,1.316,71,1.549,72,0.278,79,1.788,91,1.316,129,1.294,134,1.355,164,0.856,227,4.058,230,1.236,237,1.081,238,1.081,240,3.458,242,2.681,244,1.236,277,1.42,278,2.372,279,1.749,280,2.681,281,4.496,282,4.496,283,4.496,284,4.542,285,2.681,286,2.697,287,4.058,288,4.973,289,4.496,290,3.87,291,3.114,292,2.842,293,3.579,294,4.496,295,3.114,296,4.496,297,2.715,298,3.114,299,3.472,300,4.496,301,2.715,302,3.114,303,4.496,304,3.114,305,3.114,306,2.715,307,3.114,308,2.012,309,1.031,310,1.749,311,2.681,312,2.681,313,1.081,314,2.681,315,2.183,316,3.151,317,2.183,318,2.183,319,3.151,320,2.183,321,1.749,322,1.549,323,1.488,324,5.495,325,3.114,326,4.496,327,5.777,328,5.777,329,5.275,330,3.114,331,4.496,332,3.114,333,3.114,334,4.496,335,3.114,336,2.681,337,3.114,338,2.183,339,2.681,340,2.396,341,3.114,342,4.496,343,4.496,344,4.496,345,3.114,346,3.114,347,3.114,348,3.114,349,3.114,350,3.114,351,3.114,352,2.681,353,3.114,354,3.114]],["title/components/ConfirmEmailComponent.html",[81,0.385,105,1.034]],["body/components/ConfirmEmailComponent.html",[1,1.524,3,0.103,4,0.091,5,0.069,7,0.166,8,0.816,9,0.743,12,1.05,20,0.524,21,0.018,23,0.847,27,0.103,31,0.825,43,0.005,44,0.008,45,0.005,49,1.661,50,1.695,55,0.651,56,0.847,58,0.643,61,2.043,62,1.162,64,0.779,66,0.861,67,0.449,69,0.236,72,0.193,73,0.816,79,1.058,81,0.433,82,0.594,83,1.076,84,0.715,85,0.715,87,1.076,88,1.076,89,2.142,90,1.941,92,0.715,93,0.682,94,0.493,95,1.128,96,1.076,97,0.594,98,1.514,99,0.715,100,0.715,101,0.594,102,0.715,103,0.594,104,0.715,105,1.318,106,2.077,107,0.715,108,0.937,109,1.128,110,0.594,111,1.076,112,0.715,113,0.594,114,0.708,115,0.594,116,0.715,117,0.567,118,0.715,119,0.594,120,1.514,121,0.715,122,0.594,123,0.715,124,0.594,125,0.715,126,0.594,127,0.715,128,0.594,129,0.622,130,1.128,131,0.594,132,0.715,133,0.594,134,0.651,135,0.594,136,0.471,137,0.594,138,0.541,139,0.682,140,0.715,161,0.749,198,0.962,200,0.749,202,1.397,203,1.128,205,1.128,207,1.587,209,1.202,230,0.937,232,4.069,237,1.924,238,1.924,244,1.702,246,3.248,264,1.395,265,1.514,266,5.059,278,3.063,286,2.453,290,1.859,292,2.135,309,0.715,310,1.213,313,0.749,314,1.859,321,1.213,323,2.177,340,1.661,355,5.059,356,1.859,357,2.227,358,4.222,359,3.408,360,4.222,361,2.227,362,2.959,363,4.222,364,2.529,365,4.794,366,3.408,367,2.16,368,4.774,369,2.536,370,3.36,371,3.063,372,3.408,373,2.16,374,2.16,375,2.16,376,2.931,377,3.408,378,2.16,379,2.16,380,2.911,381,2.16,382,1.672,383,2.1,384,2.16,385,2.16,386,2.16,387,1.213,388,2.934,389,1.139,390,1.213,391,0.913,392,1.395,393,2.622,394,1.395,395,2.16,396,4.222,397,1.859,398,2.934,399,1.859,400,2.16,401,2.16,402,1.139,403,1.139,404,2.16,405,1.696,406,2.16,407,2.16,408,1.661,409,1.859,410,2.389,411,2.16,412,1.661,413,2.389,414,1.395,415,1.139,416,1.514,417,2.16,418,1.695,419,1.661,420,2.16,421,3.688,422,3.408,423,3.408,424,2.934,425,2.693,426,2.622,427,5.545,428,4.127,429,3.583,430,3.408,431,2.934,432,2.934,433,3.886,434,3.098,435,4.127,436,4.127,437,3.36,438,4.127,439,4.794,440,3.098,441,2.934,442,2.934,443,1.518,444,3.408,445,1.395,446,1.395,447,1.139,448,1.139,449,1.213,450,1.213,451,1.213,452,1.297,453,1.661,454,1.661,455,3.634,456,1.213,457,1.213]],["title/components/ConfirmEmailDialogComponent.html",[81,0.385,108,1.034]],["body/components/ConfirmEmailDialogComponent.html",[3,0.17,4,0.151,5,0.113,7,0.273,9,0.776,12,1.233,20,0.389,21,0.018,27,0.17,43,0.008,44,0.011,45,0.008,55,1.073,56,0.996,58,0.933,62,1.02,64,0.813,66,0.888,67,0.35,69,0.389,72,0.318,73,1.182,81,0.581,82,0.978,83,1.56,84,1.178,85,1.178,87,1.56,88,1.56,89,2.29,90,2.082,92,1.178,93,1.124,94,0.813,95,1.635,96,1.56,97,0.978,98,1.936,99,1.178,100,1.178,101,0.978,102,1.178,103,0.978,104,1.178,105,0.978,106,2.287,107,1.178,108,1.685,109,1.635,110,0.978,111,1.56,112,1.178,113,0.978,114,1.027,115,0.978,116,1.178,117,0.934,118,1.178,119,0.978,120,1.936,121,1.178,122,0.978,123,1.178,124,0.978,125,1.178,126,0.978,127,1.178,128,0.978,129,1.024,130,1.635,131,0.978,132,1.178,133,0.978,134,1.073,135,0.978,136,0.776,137,0.978,138,0.892,139,1.124,140,1.178,200,1.235,202,1.878,203,1.635,205,1.635,207,2.029,209,1.537,230,1.358,244,0.978,264,3.962,323,1.178,336,4.253,355,4.716,369,2.967,387,1.999,431,4.253,433,3.462,458,2.737,459,4.886,460,4.253,461,5.278,462,3.063,463,5.278,464,3.063,465,4.253,466,3.063,467,3.063,468,3.063,469,3.962,470,4.253,471,4.94,472,3.8,473,4.253,474,4.94,475,4.253]],["title/guards/ConfirmedUserGuard.html",[217,2.635,476,2.258]],["body/guards/ConfirmedUserGuard.html",[3,0.218,4,0.193,5,0.145,7,0.35,9,0.992,12,0.739,15,3.498,20,0.497,21,0.018,27,0.218,43,0.011,44,0.013,45,0.011,56,0.739,58,1.099,62,1.046,64,1.04,66,0.818,67,0.506,69,0.497,72,0.407,73,1.09,79,1.61,91,1.924,161,1.58,164,1.252,217,4.081,221,4.623,230,1.601,244,1.765,277,1.839,286,3.074,293,3.193,309,1.507,313,1.58,322,2.264,323,2.125,338,3.191,371,3.838,380,2.14,397,3.919,405,1.829,477,3.191,478,5.528,479,3.502,480,2.942,481,3.558,482,3.919,483,3.919,484,3.502,485,3.191,486,2.557,487,2.735,488,2.557,489,3.502,490,3.502,491,2.942,492,4.553]],["title/modules/CoreModule.html",[141,1.305,153,2.429]],["body/modules/CoreModule.html",[3,0.18,4,0.16,5,0.12,21,0.018,27,0.18,43,0.009,44,0.012,45,0.009,67,0.531,69,0.412,70,1.592,71,1.873,72,0.336,94,0.86,117,1.936,119,1.865,122,1.865,124,1.865,126,1.865,136,0.821,141,1.307,143,1.771,144,1.677,145,3.085,146,1.987,147,3.085,148,3.085,153,4.95,154,2.711,155,1.873,157,2.886,158,2.886,159,3.086,161,1.307,194,2.116,256,3.811,262,2.898,308,2.434,405,2.064,493,3.243,494,3.767,495,3.243,496,3.243,497,3.243,498,4.384,499,4.384,500,3.767,501,5.138,502,5.847,503,5.138,504,3.601,505,5.138,506,3.767,507,3.767,508,3.243,509,3.243,510,5.138,511,3.767,512,3.767,513,6.281,514,2.898,515,3.767,516,2.898,517,3.767,518,2.898,519,3.767,520,2.898,521,3.767,522,3.767,523,3.767,524,3.767,525,3.767,526,3.243,527,5.138,528,5.138,529,5.138]],["title/interfaces/Destination.html",[0,0.9,530,2.635]],["body/interfaces/Destination.html",[0,0.881,1,1.517,2,1.555,3,0.176,4,0.156,5,0.117,7,0.388,8,1.21,20,0.631,21,0.018,23,1.183,24,2.031,27,0.242,33,2.706,43,0.009,44,0.012,45,0.009,56,1.121,61,1.597,67,0.497,69,0.402,70,1.555,71,1.83,72,0.329,73,0.881,79,1.268,81,0.518,87,1.162,88,1.162,89,1.11,90,1.012,93,1.162,117,0.966,120,1.162,166,3.544,180,2.579,194,2.067,198,1.639,202,1.674,203,1.218,205,1.218,207,1.218,209,1.448,230,1.012,244,1.897,286,2.441,309,1.218,313,1.277,323,2.23,357,2.668,361,1.942,364,1.942,376,2.841,382,1.11,383,2.515,389,1.942,393,2.831,394,2.378,402,1.942,403,1.942,405,1.478,415,1.942,416,3.544,418,1.83,452,4.047,488,2.067,504,2.579,530,4.049,531,2.831,532,4.353,533,4.974,534,3.168,535,4.353,536,3.89,537,2.211,538,3.47,539,2.831,540,3.168,541,3.168,542,3.168,543,3.168,544,3.168,545,3.168,546,2.831,547,2.831,548,2.579,549,2.831,550,3.168,551,3.168,552,3.168,553,3.168,554,3.168,555,3.168,556,3.168,557,3.168,558,3.168,559,3.544,560,3.168,561,3.168,562,2.579,563,3.168,564,3.168,565,3.168,566,3.168,567,4.353,568,3.168,569,3.168,570,3.168,571,2.579]],["title/components/ForgotPasswordComponent.html",[81,0.385,110,1.034]],["body/components/ForgotPasswordComponent.html",[3,0.11,4,0.097,5,0.073,7,0.177,8,0.857,9,0.78,12,1.048,20,0.542,21,0.018,23,0.714,27,0.11,43,0.005,44,0.008,45,0.005,50,1.143,55,0.693,56,0.873,58,0.676,61,1.13,62,1.2,64,0.818,66,0.966,67,0.457,69,0.251,72,0.205,73,0.857,74,1.213,79,1.244,81,0.45,82,0.632,83,1.13,84,0.761,85,0.761,87,1.13,88,1.13,89,2.164,90,1.961,92,0.761,93,0.726,94,0.525,95,1.185,96,1.13,97,0.632,98,1.567,99,0.761,100,0.761,101,0.632,102,0.761,103,0.632,104,0.761,105,0.632,106,1.13,107,0.761,108,0.632,109,1.185,110,1.364,111,2.11,112,0.761,113,0.984,114,1.342,115,0.632,116,0.761,117,0.604,118,0.761,119,0.632,120,1.567,121,0.761,122,0.632,123,0.761,124,0.632,125,0.761,126,0.632,127,0.761,128,0.632,129,0.662,130,1.185,131,0.632,132,0.761,133,0.632,134,0.693,135,0.632,136,0.501,137,0.632,138,0.576,139,0.726,140,0.761,161,0.798,198,1.024,200,0.798,202,1.455,203,1.185,205,1.185,207,1.642,209,1.427,226,2.84,230,0.984,237,1.721,238,1.721,244,1.69,245,3.205,265,1.611,268,1.611,269,5.207,278,3.136,309,0.761,310,1.291,313,0.798,321,1.291,323,2.267,357,2.319,361,2.319,362,3.08,364,2.617,369,2.64,370,3.476,371,3.136,376,2.469,380,2.066,382,1.079,383,2.186,387,1.291,389,1.213,391,0.971,392,1.485,402,1.213,403,1.213,405,1.992,408,1.768,410,1.611,413,2.508,414,1.485,415,1.213,418,1.78,419,1.768,429,3.679,440,2.313,445,1.485,446,1.485,447,1.213,448,1.213,449,1.291,450,1.291,451,1.291,457,1.291,469,2.313,472,2.753,572,5.207,573,1.768,574,3.784,575,3.081,576,4.308,577,3.08,578,2.508,579,3.476,580,3.476,581,2.508,582,2.84,583,1.611,584,3.99,585,3.136,586,1.979,587,2.508,588,3.767,589,3.473,590,2.299,591,2.508,592,2.299,593,2.299,594,2.299,595,2.299,596,1.979,597,1.979,598,1.979,599,2.299,600,1.979,601,1.611,602,1.979,603,2.508,604,2.508,605,1.381,606,1.611,607,1.485,608,1.611,609,1.611,610,1.611,611,1.611,612,2.299,613,2.299,614,1.979,615,1.979,616,1.611,617,1.611,618,1.611,619,1.611,620,1.768,621,1.611,622,1.611,623,2.299,624,2.299,625,1.611,626,1.611,627,1.291,628,3.081,629,3.081,630,3.579,631,2.313,632,2.84,633,2.753,634,2.753,635,1.611,636,1.291]],["title/components/ForgotPasswordDialogComponent.html",[81,0.385,113,1.034]],["body/components/ForgotPasswordDialogComponent.html",[3,0.17,4,0.15,5,0.113,7,0.272,9,0.773,12,1.045,20,0.388,21,0.018,27,0.17,43,0.008,44,0.011,45,0.008,55,1.069,56,0.994,58,0.93,62,1.018,64,0.81,66,0.886,67,0.349,69,0.388,72,0.317,73,1.18,81,0.58,82,0.975,83,1.557,84,1.174,85,1.174,87,1.557,88,1.557,89,2.289,90,2.081,92,1.174,93,1.12,94,0.81,95,1.631,96,1.557,97,0.975,98,1.934,99,1.174,100,1.174,101,0.975,102,1.174,103,0.975,104,1.174,105,0.975,106,1.557,107,1.174,108,0.975,109,1.631,110,0.975,111,2.234,112,1.174,113,1.683,114,1.574,115,0.975,116,1.174,117,0.931,118,1.174,119,0.975,120,1.934,121,1.174,122,0.975,123,1.174,124,0.975,125,1.174,126,0.975,127,1.174,128,0.975,129,1.021,130,1.631,131,0.975,132,1.174,133,0.975,134,1.069,135,0.975,136,0.773,137,0.975,138,0.889,139,1.12,140,1.174,200,1.231,202,1.875,203,1.631,205,1.631,207,2.026,209,1.535,230,1.355,244,0.975,268,4.291,323,1.174,369,2.961,387,1.992,429,3.956,433,3.455,458,2.728,459,4.877,460,4.244,461,5.271,462,3.053,463,5.271,464,3.053,465,4.244,466,3.053,467,3.053,468,3.053,469,3.185,470,4.244,475,4.244,572,4.71,629,4.244,637,2.452,638,4.929,639,4.929,640,4.929,641,4.929]],["title/interfaces/ForogtPasswordDto.html",[0,0.9,642,2.112]],["body/interfaces/ForogtPasswordDto.html",[0,1.698,1,1.723,2,2.018,3,0.228,4,0.202,5,0.152,7,0.367,8,1.437,12,1.227,13,2.126,16,2.126,20,0.522,21,0.018,23,1.234,27,0.346,28,2.375,31,1.825,32,1.825,43,0.011,44,0.014,45,0.011,67,0.338,114,1.432,172,2.519,292,2.126,297,2.245,301,2.245,306,2.245,382,1.44,390,2.682,391,2.018,425,2.682,443,2.673,637,2.375,642,3.372,643,2.682,644,2.868,645,3.943,646,2.868,647,2.868,648,2.868,649,2.868,650,2.868,651,2.868,652,2.519,653,2.682,654,2.868]],["title/components/HomeComponent.html",[81,0.385,115,1.034]],["body/components/HomeComponent.html",[3,0.172,4,0.152,5,0.114,7,0.276,12,0.583,21,0.017,27,0.172,43,0.008,44,0.012,45,0.008,55,1.083,56,0.926,58,0.939,62,0.645,66,0.645,67,0.254,69,0.393,72,0.321,73,1.19,81,0.584,82,0.988,83,1.571,84,1.189,85,1.189,87,1.571,88,1.571,89,2.293,90,2.084,92,1.189,93,1.135,94,0.821,95,1.646,96,1.571,97,0.988,98,1.944,99,1.189,100,1.189,101,0.988,102,1.189,103,0.988,104,1.189,105,0.988,106,1.571,107,1.189,108,0.988,109,1.646,110,0.988,111,1.571,112,1.189,113,0.988,114,1.034,115,1.692,116,1.189,117,0.943,118,1.189,119,0.988,120,1.944,121,1.189,122,0.988,123,1.189,124,0.988,125,1.189,126,0.988,127,1.189,128,0.988,129,1.034,130,1.646,131,0.988,132,1.189,133,0.988,134,1.083,135,0.988,136,0.783,137,0.988,138,0.9,139,1.135,140,1.189,166,3.485,200,1.246,202,1.888,203,1.646,205,1.646,207,2.038,209,1.247,627,2.793,655,3.092,656,5.704,657,4.973,658,3.592,659,4.973,660,7.182,661,4.973,662,4.973,663,4.973,664,4.973,665,4.973,666,4.973,667,4.973,668,4.973,669,4.973,670,6.156,671,4.973,672,4.973,673,4.973,674,4.973,675,4.973,676,4.973,677,4.973,678,4.973,679,4.973,680,4.973,681,4.973,682,4.973,683,4.973,684,4.973,685,4.973,686,4.973,687,4.973,688,4.973,689,4.973,690,4.973,691,4.973,692,4.973,693,4.973,694,4.973,695,4.281,696,4.281]],["title/modules/HomeModule.html",[141,1.305,697,2.635]],["body/modules/HomeModule.html",[3,0.237,4,0.21,5,0.157,21,0.018,27,0.237,33,1.99,43,0.011,44,0.014,45,0.011,67,0.508,69,0.541,72,0.443,81,0.508,94,1.132,115,2.037,136,1.08,141,1.719,143,2.329,144,2.206,145,3.522,146,2.614,147,2.614,148,2.614,154,3.241,155,2.464,157,3.45,158,3.45,159,2.976,160,4.313,161,1.719,164,1.362,215,3.969,216,2.976,222,3.472,256,4.106,262,3.811,697,5.248,698,4.265,699,4.954,700,4.265,701,4.954,702,4.954]],["title/interceptors/HttpErrorInterceptor.html",[498,2.429,703,2.635]],["body/interceptors/HttpErrorInterceptor.html",[3,0.208,4,0.184,5,0.138,7,0.333,9,1.231,20,0.617,21,0.018,27,0.208,43,0.01,44,0.013,45,0.01,46,2.805,56,0.917,58,1.066,62,1.015,64,1.29,66,0.78,67,0.5,69,0.474,72,0.388,73,1.039,74,2.291,75,4.296,76,2.439,79,1.416,164,1.194,230,1.194,243,3.043,244,1.194,277,1.784,293,3.122,308,2.805,309,1.869,313,1.506,434,3.649,480,2.805,481,3.514,487,2.608,491,2.805,498,3.649,704,3.738,705,4.829,706,3.738,707,4.399,708,4.342,709,3.738,710,5.723,711,5.723,712,4.342,713,4.862,714,3.738,715,4.862,716,3.738,717,4.342,718,4.342,719,4.342,720,4.342,721,4.342,722,4.342,723,4.342,724,5.648,725,4.342,726,6.648,727,6.277,728,4.862,729,4.342,730,4.342,731,4.342,732,4.342,733,3.34,734,4.342]],["title/interceptors/HttpJwtInterceptor.html",[499,2.429,703,2.635]],["body/interceptors/HttpJwtInterceptor.html",[3,0.2,4,0.177,5,0.133,7,0.321,9,1.201,20,0.602,21,0.018,27,0.2,32,2.504,43,0.01,44,0.013,45,0.01,56,0.895,58,1.04,61,1.32,62,0.99,64,1.259,66,0.751,67,0.495,69,0.457,72,0.373,73,1,75,3.982,79,1.048,164,1.149,230,1.515,244,1.515,277,1.74,285,3.599,286,2.955,293,3.065,308,2.701,309,1.383,312,4.743,313,1.45,323,1.823,418,2.74,434,4.233,481,3.545,486,2.348,487,2.511,488,2.348,491,3.56,499,3.56,704,3.599,705,4.741,707,4.319,709,3.599,710,5.64,711,5.64,713,4.743,714,3.599,715,4.743,728,3.599,735,3.599,736,4.18,737,4.18,738,3.599,739,5.509,740,4.18,741,4.18,742,4.18,743,4.18,744,4.743,745,5.509,746,4.18,747,4.18,748,2.701,749,4.18,750,5.509,751,4.18,752,3.599]],["title/directives/ImageDefaultDirective.html",[97,1.034,138,0.942]],["body/directives/ImageDefaultDirective.html",[3,0.214,4,0.19,5,0.142,7,0.344,20,0.63,21,0.018,23,0.936,27,0.214,43,0.01,44,0.013,45,0.01,55,1.351,61,1.415,62,1.145,65,5.486,67,0.317,69,0.49,72,0.569,74,3.041,75,3.724,76,3.238,89,1.921,97,1.752,137,1.232,138,1.445,139,1.82,164,1.232,209,1.123,237,2.415,299,3.362,437,4.039,571,3.14,753,5.792,754,3.857,755,4.962,756,5.764,757,7.125,758,4.962,759,6.728,760,5.764,761,5.764,762,3.724,763,5.764,764,4.466,765,5.764,766,5.764,767,4.48,768,4.48,769,4.48,770,4.48,771,4.48,772,4.48,773,4.48,774,4.48,775,4.48,776,5.764,777,6.372,778,4.48,779,4.48]],["title/components/LayoutComponent.html",[81,0.385,117,0.987]],["body/components/LayoutComponent.html",[0,0.579,1,1.525,3,0.116,4,0.102,5,0.077,7,0.348,8,0.891,9,1.267,12,0.393,20,0.683,21,0.018,23,0.983,24,2.21,27,0.178,33,1.822,43,0.006,44,0.009,45,0.006,55,0.729,56,1.041,58,0.702,61,1.433,62,1.256,64,0.85,66,0.989,67,0.442,69,0.264,70,1.022,71,1.202,72,0.216,73,0.891,79,0.933,81,0.465,82,0.665,83,1.175,84,0.8,85,0.8,87,1.175,88,1.175,89,2.18,90,1.998,92,0.8,93,0.764,94,0.552,95,1.232,96,1.175,97,0.665,98,1.609,99,0.8,100,0.8,101,0.665,102,0.8,103,0.665,104,0.8,105,0.665,106,1.175,107,0.8,108,0.665,109,1.232,110,0.665,111,1.175,112,0.8,113,0.665,114,0.774,115,0.665,116,0.8,117,1.338,118,0.8,119,0.665,120,1.974,121,0.8,122,0.665,123,0.8,124,0.665,125,0.8,126,0.665,127,0.8,128,0.665,129,0.696,130,1.232,131,0.665,132,0.8,133,0.665,134,0.729,135,0.665,136,0.527,137,0.665,138,0.606,139,0.764,140,0.8,166,3.571,180,1.694,194,1.358,198,1.657,200,0.839,202,1.502,203,1.232,205,1.232,207,1.686,209,1.457,230,1.023,237,2.016,238,2.016,244,1.882,286,2.558,309,0.8,313,0.839,323,2.166,357,2.394,361,2.394,364,2.689,376,2.549,382,1.536,383,2.256,389,1.276,393,1.86,394,1.562,402,1.276,403,1.276,405,1.495,415,1.276,416,2.608,418,1.202,447,1.276,448,2.394,452,2.725,456,1.358,488,1.358,504,1.694,530,3.18,531,1.86,532,3.906,533,4.736,534,2.081,535,4.387,536,3.92,537,1.452,538,3.636,539,1.86,540,3.204,541,3.906,542,3.204,543,3.906,544,3.204,545,3.906,546,3.49,547,3.49,548,3.18,549,3.49,550,3.204,551,3.906,552,3.204,553,3.906,554,2.081,555,2.081,556,2.081,557,2.081,558,2.081,559,2.608,560,4.387,561,2.081,562,2.608,563,4.387,564,2.081,565,2.081,566,2.081,567,3.204,568,2.081,569,2.081,570,2.081,571,1.694,636,1.358,780,2.863,781,2.417,782,3.721,783,2.417,784,2.417,785,2.417,786,2.417,787,2.417,788,2.417,789,2.417,790,3.721,791,2.417,792,2.417,793,2.417,794,2.417,795,2.417,796,2.417,797,2.863,798,2.863,799,3.204,800,3.204,801,3.204,802,3.721,803,2.417,804,2.081,805,2.417,806,2.417,807,2.081,808,1.562]],["title/components/LayoutFooterComponent.html",[81,0.385,119,1.034]],["body/components/LayoutFooterComponent.html",[3,0.177,4,0.157,5,0.118,7,0.284,12,0.601,20,0.554,21,0.018,23,1.012,27,0.177,43,0.009,44,0.012,45,0.009,55,1.115,56,0.941,58,0.958,62,1.041,66,0.665,67,0.262,69,0.404,72,0.33,73,1.214,76,2.077,81,0.593,82,1.017,83,1.603,84,1.224,85,1.224,87,1.603,88,1.603,89,2.3,90,2.091,92,1.224,93,1.168,94,0.845,95,1.679,96,1.603,97,1.017,98,1.969,99,1.224,100,1.224,101,1.017,102,1.224,103,1.017,104,1.224,105,1.017,106,1.603,107,1.224,108,1.017,109,1.679,110,1.017,111,1.603,112,1.224,113,1.017,114,1.055,115,1.017,116,1.224,117,0.971,118,1.224,119,1.714,120,2.322,121,1.224,122,1.017,123,1.224,124,1.017,125,1.224,126,1.017,127,1.224,128,1.017,129,1.065,130,1.679,131,1.017,132,1.224,133,1.017,134,1.115,135,1.017,136,0.806,137,1.017,138,0.927,139,1.168,140,1.224,198,1.647,200,1.283,202,1.917,203,1.679,205,1.679,207,2.063,209,1.272,299,3.056,447,1.951,448,2.677,449,2.077,450,2.077,451,2.077,456,3.253,514,4.795,547,5.024,549,5.024,762,3.279,804,5.623,809,4.028,810,3.184,811,5.792,812,5.074,813,3.699,814,3.699,815,3.699,816,3.184,817,3.903]],["title/components/LayoutNavComponent.html",[81,0.385,122,1.034]],["body/components/LayoutNavComponent.html",[1,1.669,3,0.147,4,0.13,5,0.098,7,0.402,9,0.67,12,0.499,20,0.694,21,0.018,23,0.99,24,2.448,27,0.147,33,1.235,43,0.007,44,0.01,45,0.007,55,0.927,56,0.99,58,0.841,62,1.142,64,0.703,66,0.801,67,0.371,69,0.336,72,0.275,73,1.066,76,2.503,79,0.771,81,0.537,82,0.846,83,1.407,84,1.018,85,1.018,87,1.407,88,1.407,89,2.252,90,2.068,92,1.018,93,0.971,94,0.703,95,1.475,96,1.407,97,0.846,98,1.814,99,1.018,100,1.018,101,0.846,102,1.018,103,0.846,104,1.018,105,0.846,106,1.407,107,1.018,108,0.846,109,1.475,110,0.846,111,1.407,112,1.018,113,0.846,114,0.926,115,0.846,116,1.018,117,0.808,118,1.018,119,0.846,120,2.247,121,1.018,122,1.579,123,1.018,124,0.846,125,1.018,126,0.846,127,1.018,128,0.846,129,0.885,130,1.475,131,0.846,132,1.018,133,0.846,134,0.927,135,0.846,136,0.67,137,0.846,138,0.771,139,0.971,140,1.018,198,1.37,200,1.067,202,1.734,203,1.475,205,1.475,207,1.901,209,1.117,299,3.216,447,2.351,448,2.764,449,1.728,450,2.503,451,1.728,452,2.676,453,3.427,454,2.366,456,3.682,516,5.043,536,2.366,537,1.848,546,4.689,548,3.671,562,3.122,631,1.988,762,2.879,780,3.427,808,2.879,809,4.236,816,2.648,818,2.648,819,6.555,820,5.239,821,4.455,822,4.51,823,3.076,824,3.076,825,1.848,826,3.076,827,4.51,828,3.076,829,3.076,830,3.076,831,2.366,832,3.836,833,3.836,834,3.836,835,3.836,836,3.836,837,2.156,838,3.076,839,3.076,840,3.076,841,5.239,842,2.366,843,2.366,844,2.156,845,2.156,846,2.366,847,2.366,848,3.076,849,3.076,850,3.076]],["title/components/LayoutSettingsComponent.html",[81,0.385,124,1.034]],["body/components/LayoutSettingsComponent.html",[1,1.498,3,0.099,4,0.088,5,0.181,7,0.159,8,0.788,9,1.019,10,1.335,12,0.336,19,1.849,20,0.558,21,0.018,23,0.666,27,0.099,43,0.005,44,0.008,45,0.005,55,0.623,56,0.927,58,0.621,62,1.186,64,1.068,66,1.064,67,0.432,69,0.226,70,0.873,71,1.028,72,0.185,73,0.788,76,1.161,79,0.825,81,0.42,82,0.568,83,1.039,84,0.684,85,0.684,87,1.039,88,1.039,89,2.126,90,1.926,92,0.684,93,0.653,94,0.472,95,1.089,96,1.039,97,0.568,98,1.477,99,0.684,100,0.684,101,0.568,102,0.684,103,0.568,104,0.684,105,0.568,106,1.039,107,0.684,108,0.568,109,1.089,110,0.568,111,1.039,112,0.684,113,0.568,114,0.684,115,0.568,116,0.684,117,0.542,118,0.684,119,0.568,120,2.018,121,0.684,122,0.568,123,0.684,124,1.286,125,0.684,126,0.568,127,0.684,128,0.568,129,0.595,130,1.089,131,0.568,132,0.684,133,0.568,134,0.623,135,0.568,136,0.45,137,0.568,138,0.518,139,0.653,140,0.684,155,2.706,164,1.404,198,0.92,200,0.717,202,1.357,203,1.089,205,1.089,207,1.548,209,1.729,227,3.155,230,0.905,232,3.999,237,1.423,238,1.423,240,2.532,244,1.678,286,2.412,299,1.736,309,0.684,313,0.717,323,2.114,324,1.779,357,2.164,361,2.164,364,2.468,369,2.463,370,3.278,380,1.547,382,1.236,383,2.04,387,1.161,389,1.09,394,1.335,402,1.09,403,1.09,415,1.09,416,1.448,418,1.028,456,2.304,457,2.304,488,1.161,518,5.145,537,1.241,538,3.428,539,1.59,585,3.011,627,1.849,628,2.833,634,4.557,636,1.849,752,1.779,762,2.126,797,1.59,807,1.779,808,1.335,809,4.322,832,1.779,835,1.779,836,3.531,837,2.306,842,2.532,843,2.532,844,2.306,845,1.448,846,1.59,851,1.779,852,2.833,853,4.101,854,3.291,855,4.101,856,3.291,857,4.026,858,3.291,859,4.677,860,3.291,861,4.677,862,2.066,863,3.291,864,4.677,865,2.066,866,3.291,867,6.502,868,5.44,869,2.066,870,2.066,871,2.066,872,2.066,873,3.291,874,2.066,875,2.066,876,3.291,877,5.107,878,2.066,879,2.066,880,2.066,881,2.066,882,2.066,883,2.066,884,2.066,885,2.066,886,3.291,887,3.291,888,2.066,889,1.779,890,1.779,891,2.066,892,2.833,893,2.066,894,2.066,895,1.779,896,2.066,897,2.066,898,2.066,899,1.779,900,2.066,901,1.779,902,2.066,903,2.066,904,2.066,905,2.066,906,2.066,907,2.066,908,2.066,909,4.677,910,2.833,911,3.291,912,3.291,913,3.291,914,2.833,915,4.026,916,3.291,917,2.833,918,2.833,919,2.833,920,3.291,921,3.291,922,3.291,923,3.291,924,3.291,925,2.833,926,2.833,927,3.291,928,2.066,929,4.677,930,2.066,931,4.677,932,3.291,933,2.066,934,2.066,935,1.779,936,3.291,937,2.066,938,2.066,939,2.066,940,2.066,941,2.066,942,1.779,943,1.779]],["title/components/LayoutSidenavComponent.html",[81,0.385,126,1.034]],["body/components/LayoutSidenavComponent.html",[1,1.714,3,0.159,4,0.141,5,0.106,7,0.421,9,0.726,10,2.153,12,0.541,20,0.687,21,0.018,23,0.889,24,2.525,27,0.159,33,1.338,43,0.008,44,0.011,45,0.008,55,1.004,56,1.021,58,0.89,62,1.13,64,0.761,66,0.848,67,0.388,69,0.364,72,0.298,73,1.129,79,0.835,81,0.561,82,0.916,83,1.49,84,1.103,85,1.103,87,1.49,88,1.49,89,2.274,90,2.066,92,1.103,93,1.052,94,0.761,95,1.561,96,1.49,97,0.916,98,1.881,99,1.103,100,1.103,101,0.916,102,1.103,103,0.916,104,1.103,105,0.916,106,1.49,107,1.103,108,0.916,109,1.561,110,0.916,111,1.49,112,1.103,113,0.916,114,0.981,115,0.916,116,1.103,117,0.875,118,1.103,119,0.916,120,2.299,121,1.103,122,0.916,123,1.103,124,0.916,125,1.103,126,1.637,127,1.103,128,0.916,129,0.959,130,1.561,131,0.916,132,1.103,133,0.916,134,1.004,135,0.916,136,0.726,137,0.916,138,0.835,139,1.052,140,1.103,200,1.156,202,1.813,203,1.561,205,1.561,207,1.971,209,1.183,299,3.143,452,2.001,456,1.871,457,1.871,520,5.022,537,2.001,548,3.838,562,3.306,762,3.048,780,3.629,809,4.218,822,5.778,825,2.001,827,4.715,831,2.563,833,4.061,834,4.061,842,2.563,843,2.563,844,2.335,845,2.335,846,2.563,910,4.061,935,2.868,944,2.868,945,5.477,946,4.717,947,3.331,948,3.331,949,3.331,950,3.331,951,3.331,952,4.717,953,3.331,954,3.331]],["title/injectables/LocalStorageService.html",[277,1.187,955,2.429]],["body/injectables/LocalStorageService.html",[3,0.206,4,0.183,5,0.137,7,0.331,9,1.445,20,0.724,21,0.018,23,1.206,27,0.206,43,0.01,44,0.013,45,0.01,56,1.076,58,1.061,61,1.775,62,1.191,64,1.514,66,1.124,67,0.398,69,0.471,72,0.385,79,1.08,91,1.821,164,1.545,209,1.662,230,1.184,238,2.492,243,3.019,244,1.184,277,1.775,279,2.42,322,2.143,480,2.784,481,3.506,486,2.42,487,2.588,607,4.64,744,3.709,748,4.556,955,3.631,956,5.919,957,3.709,958,5.62,959,5.62,960,5.62,961,4.308,962,5.62,963,4.308,964,5.62,965,4.308,966,5.62,967,4.308,968,4.308,969,4.308,970,4.308,971,4.308,972,4.308,973,4.308,974,5.62,975,3.314,976,4.308,977,4.308]],["title/injectables/LogService.html",[277,1.187,481,1.87]],["body/injectables/LogService.html",[3,0.31,4,0.197,5,0.148,7,0.357,8,1.412,9,1.286,20,0.645,21,0.018,23,1.168,27,0.282,28,2.311,43,0.011,44,0.014,45,0.011,48,5.041,56,0.958,58,1.114,62,1.165,64,1.348,66,1.06,67,0.417,69,0.508,70,1.964,71,2.311,72,0.415,91,1.964,209,1.71,237,1.612,238,1.612,277,1.863,279,2.61,322,2.311,383,2.311,476,2.791,481,2.934,486,3.831,526,5.079,707,3.257,764,4.543,978,3.575,979,6.483,980,5.9,981,4.647,982,5.9,983,4.647,984,4.647,985,4,986,5.9,987,4.647,988,4.647]],["title/interfaces/LoggedInUser.html",[0,0.9,31,1.437]],["body/interfaces/LoggedInUser.html",[0,1.691,1,1.946,2,1.988,3,0.225,4,0.199,5,0.15,7,0.361,8,1.423,12,1.19,13,2.095,16,2.095,20,0.65,21,0.018,23,1.232,27,0.345,28,2.34,31,2.273,32,2.618,43,0.011,44,0.014,45,0.011,67,0.333,114,1.424,172,2.483,292,2.095,297,2.212,301,2.212,306,2.212,382,1.419,390,2.643,391,1.988,425,2.643,443,2.648,637,2.34,642,2.643,643,2.643,644,2.826,645,3.917,646,2.826,647,2.826,648,2.826,649,2.826,650,2.826,651,2.826,652,2.483,653,2.643,654,2.826]],["title/interfaces/LoggedInUser-1.html",[0,0.751,31,1.2,808,2.029]],["body/interfaces/LoggedInUser-1.html",[0,1.577,1,1.955,2,2.035,3,0.23,4,0.204,5,0.209,6,3.112,7,0.37,8,1.444,10,3.112,11,3.112,12,0.782,13,2.145,14,2.893,15,2.893,16,2.145,17,3.112,18,3.112,19,3.39,20,0.659,21,0.018,22,3.899,23,1.209,24,1.934,25,3.112,26,3.899,27,0.33,28,2.395,29,4.229,30,4.229,31,2.306,32,2.64,33,2.647,34,4.642,35,4.229,36,4.642,37,4.229,38,3.705,39,3.705,40,3.705,41,3.705,42,3.705,43,0.011,44,0.014,45,0.011]],["title/interfaces/LoginDto.html",[0,0.9,297,1.767]],["body/interfaces/LoginDto.html",[0,1.691,1,1.712,2,1.988,3,0.225,4,0.199,5,0.15,7,0.361,8,1.423,12,1.224,13,2.095,16,2.095,20,0.65,21,0.018,23,1.243,27,0.345,28,2.34,31,1.798,32,1.798,43,0.011,44,0.014,45,0.011,67,0.333,114,1.523,172,2.483,292,2.095,297,2.795,301,2.212,306,2.212,382,1.419,390,2.643,391,1.988,425,2.643,443,2.648,637,2.34,642,2.643,643,2.643,644,2.826,645,3.917,646,2.826,647,2.826,648,2.826,649,2.826,650,2.826,651,2.826,652,2.483,653,2.643,654,2.826]],["title/components/LoginFormComponent.html",[81,0.385,128,1.034]],["body/components/LoginFormComponent.html",[3,0.105,4,0.093,5,0.07,7,0.168,8,0.824,9,0.751,12,0.906,20,0.638,21,0.018,23,0.853,27,0.105,43,0.005,44,0.008,45,0.005,55,0.66,56,0.853,58,0.65,61,1.659,62,1.203,64,0.787,66,0.944,67,0.428,69,0.239,72,0.196,73,0.824,74,1.155,79,1.211,81,0.436,82,0.602,83,1.088,84,0.725,85,0.725,87,1.088,88,1.088,89,2.147,90,1.945,92,0.725,93,0.691,94,0.5,95,1.14,96,1.088,97,0.602,98,1.525,99,0.725,100,0.725,101,0.602,102,0.725,103,0.602,104,0.725,105,0.602,106,1.088,107,0.725,108,0.602,109,1.14,110,0.602,111,1.525,112,0.725,113,0.602,114,1.323,115,0.602,116,0.725,117,0.575,118,0.725,119,0.602,120,1.525,121,0.725,122,0.602,123,0.725,124,0.602,125,0.725,126,0.602,127,0.725,128,1.328,129,1.79,130,1.14,131,0.602,132,0.725,133,0.602,134,0.66,135,0.602,136,0.477,137,0.602,138,0.549,139,0.691,140,0.725,161,0.76,164,0.602,198,0.975,200,0.76,202,1.41,203,1.14,205,1.14,207,1.599,209,1.398,226,2.752,230,0.947,237,1.676,238,1.676,244,1.662,245,3.394,271,5.213,278,3.079,309,0.725,313,0.76,321,1.23,323,2.215,357,2.247,361,2.247,362,2.985,364,2.548,371,3.079,376,2.392,380,2.002,382,1.284,383,2.118,389,1.155,391,0.925,392,1.415,394,1.415,402,1.155,403,1.155,405,2.24,412,1.684,413,2.414,414,1.415,415,1.155,418,1.713,429,2.226,440,2.226,445,1.415,446,1.415,447,1.155,448,1.818,449,1.23,450,1.23,451,1.23,457,1.23,469,3.121,472,3.715,559,1.534,576,4.461,577,3.681,578,2.985,579,3.385,580,3.385,581,2.414,582,2.752,583,1.534,584,3.909,585,3.079,587,1.534,588,3.681,589,2.752,591,2.985,601,1.534,603,2.414,604,2.414,605,1.315,606,1.534,607,2.226,608,1.534,609,1.534,610,1.534,611,1.534,616,1.534,617,1.534,619,2.414,620,1.684,621,1.534,622,1.534,625,2.414,626,1.534,627,1.23,631,3.121,632,3.394,633,2.65,635,2.985,636,1.23,748,1.415,817,2.65,825,2.069,899,2.966,989,5.834,990,1.684,991,3.667,992,2.966,993,2.966,994,3.667,995,1.885,996,3.667,997,2.189,998,3.715,999,2.189,1000,1.534,1001,2.189,1002,2.189,1003,2.189,1004,1.885,1005,1.885,1006,2.189,1007,1.885,1008,2.189,1009,2.189,1010,1.885,1011,2.966,1012,1.684,1013,2.189,1014,1.684,1015,1.885,1016,3.667,1017,1.684,1018,2.189,1019,2.189,1020,2.189,1021,1.885,1022,2.65,1023,2.65]],["title/interfaces/MockUser.html",[0,0.9,228,2.429]],["body/interfaces/MockUser.html",[0,0.756,1,1.835,2,1.335,3,0.151,4,0.134,5,0.1,7,0.243,8,1.087,11,2.934,12,0.863,13,2.022,14,3.492,15,3.194,16,2.022,17,2.041,18,2.934,20,0.345,21,0.018,22,2.934,23,1,24,1.268,26,2.041,27,0.323,31,1.207,32,2.032,43,0.007,44,0.011,45,0.007,61,1.434,67,0.411,79,1.835,90,0.868,114,1.374,164,1.998,228,4.144,249,2.429,292,2.589,293,3.286,297,2.135,299,2.805,301,2.135,306,2.135,309,1.045,310,3.602,313,1.096,315,2.213,316,2.213,317,2.213,318,2.213,319,2.213,320,2.213,321,1.774,380,1.485,382,1.753,390,1.774,391,1.335,405,2.474,426,2.429,443,1.406,637,1.571,716,2.719,733,5.083,1024,2.429,1025,4.541,1026,3.158,1027,2.719,1028,2.429,1029,2.719,1030,2.429,1031,2.719,1032,2.719,1033,2.719,1034,2.719,1035,2.719,1036,2.719,1037,2.719,1038,2.719,1039,2.719,1040,2.719,1041,2.429,1042,2.719,1043,2.719,1044,2.719,1045,4.09,1046,2.719,1047,2.429,1048,2.719,1049,3.909,1050,3.909,1051,3.909,1052,5.302,1053,5.302,1054,3.909,1055,3.909,1056,2.719,1057,2.719,1058,4.577,1059,3.909,1060,2.719,1061,2.719,1062,2.719,1063,2.719,1064,2.719,1065,3.909,1066,2.719,1067,3.909,1068,3.909,1069,4.577,1070,2.719,1071,2.719,1072,3.909,1073,3.909,1074,2.719]],["title/components/NotFoundComponent.html",[81,0.385,131,1.034]],["body/components/NotFoundComponent.html",[3,0.196,4,0.174,5,0.13,7,0.315,12,0.666,21,0.018,27,0.196,43,0.01,44,0.013,45,0.01,55,1.237,56,0.992,58,1.027,62,0.737,66,0.737,67,0.29,69,0.448,72,0.367,73,1.303,81,0.626,82,1.128,83,1.719,84,1.358,85,1.358,87,1.719,88,1.719,89,2.323,90,2.113,92,1.358,93,1.296,94,0.937,95,1.801,96,1.719,97,1.128,98,2.054,99,1.358,100,1.358,101,1.128,102,1.358,103,1.128,104,1.358,105,1.128,106,1.719,107,1.358,108,1.128,109,1.801,110,1.128,111,1.719,112,1.358,113,1.128,114,1.131,115,1.128,116,1.358,117,1.077,118,1.358,119,1.128,120,2.054,121,1.358,122,1.128,123,1.358,124,1.128,125,1.358,126,1.128,127,1.358,128,1.128,129,1.181,130,1.801,131,1.788,132,1.358,133,1.128,134,1.237,135,1.128,136,0.894,137,1.128,138,1.029,139,1.296,140,1.358,172,3.432,174,3.814,200,1.424,202,2.021,203,1.801,205,1.801,207,2.153,209,1.364,1075,4.187,1076,3.533,1077,6.107,1078,5.443,1079,4.104,1080,5.443,1081,5.443]],["title/modules/NotFoundModule.html",[141,1.305,1082,2.635]],["body/modules/NotFoundModule.html",[3,0.244,4,0.216,5,0.162,21,0.018,27,0.244,33,2.048,43,0.012,44,0.014,45,0.012,67,0.499,69,0.557,72,0.456,81,0.523,94,1.165,131,2.05,136,1.112,141,1.77,143,2.397,144,2.271,145,3.568,146,2.691,147,2.691,148,2.691,154,3.299,155,2.537,157,2.865,158,3.512,159,3.064,160,4.37,161,1.77,164,1.402,174,3.574,215,4.04,216,3.064,222,3.574,1075,3.923,1082,5.159,1083,4.391,1084,4.391,1085,5.1,1086,5.1]],["title/guards/NotUserGuard.html",[258,2.635,476,2.258]],["body/guards/NotUserGuard.html",[1,1.207,3,0.22,4,0.195,5,0.146,7,0.353,9,1.002,20,0.503,21,0.018,27,0.22,43,0.011,44,0.014,45,0.011,56,0.747,58,1.106,61,1.453,62,1.053,64,1.051,66,0.826,67,0.508,69,0.503,72,0.411,73,1.101,79,1.617,91,1.944,161,1.596,221,4.636,230,1.611,244,1.774,258,4.108,277,1.851,286,3.081,293,3.209,309,1.522,313,1.596,322,2.287,323,2.135,338,3.223,371,3.847,405,1.847,477,3.223,479,3.538,480,2.972,481,3.568,482,3.959,483,3.959,484,3.538,485,3.223,486,2.583,487,2.763,488,2.583,489,3.538,490,3.538,491,2.972,1087,5.554,1088,4.599]],["title/interfaces/RegisterDto.html",[0,0.9,301,1.767]],["body/interfaces/RegisterDto.html",[0,1.676,1,1.689,2,1.932,3,0.219,4,0.194,5,0.145,7,0.351,8,1.397,12,1.218,13,3.018,16,3.018,20,0.741,21,0.018,23,1.255,27,0.342,28,2.273,31,1.747,32,1.747,43,0.011,44,0.014,45,0.011,67,0.323,114,1.513,172,2.412,292,2.036,297,2.149,301,2.745,306,2.149,382,1.378,390,2.568,391,1.932,425,2.568,443,2.6,637,2.273,642,2.568,643,2.568,644,2.746,645,3.864,646,2.746,647,2.746,648,2.746,649,2.746,650,2.746,651,2.746,652,2.412,653,2.568,654,2.746]],["title/components/RegisterFormComponent.html",[81,0.385,133,1.034]],["body/components/RegisterFormComponent.html",[3,0.093,4,0.082,5,0.062,7,0.149,8,0.749,9,0.682,12,1.019,13,1.393,16,1.393,20,0.608,21,0.018,23,0.903,27,0.093,43,0.004,44,0.007,45,0.004,46,1.253,50,0.965,55,0.585,56,0.971,58,0.591,61,1.242,62,1.184,64,0.715,66,0.95,67,0.452,69,0.212,72,0.173,73,0.749,74,1.023,79,1.24,81,0.403,82,0.533,83,0.988,84,0.642,85,0.642,87,0.988,88,0.988,89,2.103,90,1.904,92,0.642,93,0.613,94,0.443,95,1.035,96,0.988,97,0.533,98,1.424,99,0.642,100,0.642,101,0.533,102,0.642,103,0.533,104,0.642,105,0.533,106,1.562,107,0.642,108,0.86,109,1.035,110,0.533,111,0.988,112,0.642,113,0.533,114,1.203,115,0.533,116,0.642,117,0.509,118,0.642,119,0.533,120,1.424,121,0.642,122,0.533,123,0.642,124,0.533,125,0.642,126,0.533,127,0.642,128,0.533,129,0.558,130,1.035,131,0.533,132,0.642,133,1.24,134,1.802,135,0.533,136,0.423,137,0.533,138,0.486,139,0.613,140,0.642,161,0.673,164,0.533,192,2.406,198,0.864,200,0.673,202,1.301,203,1.035,205,1.035,207,1.493,209,1.326,226,2.54,230,0.86,237,1.565,238,1.565,244,1.643,245,2.914,264,1.253,265,1.359,273,5.132,278,2.935,309,0.642,310,1.09,313,0.673,321,1.09,323,2.181,357,2.074,361,2.074,362,2.755,364,2.38,369,2.361,370,3.161,371,2.935,376,2.208,380,1.848,382,1.185,383,1.955,387,1.09,389,1.023,391,0.82,392,1.253,402,1.023,403,1.023,405,1.987,408,1.492,409,1.67,410,1.359,412,1.492,413,2.192,414,1.253,415,1.023,418,1.556,429,2.021,440,2.021,443,1.393,445,1.253,446,1.253,447,1.023,448,1.651,449,1.09,450,1.09,451,1.09,457,1.09,576,4.618,577,3.899,578,2.755,579,3.161,580,3.161,581,2.192,582,2.54,583,1.359,584,3.707,585,2.935,587,1.359,588,3.467,589,2.54,591,2.755,601,1.359,603,2.192,604,2.192,605,1.165,606,1.359,607,2.021,608,1.359,609,1.359,610,1.359,611,1.359,614,1.67,616,1.359,617,1.359,618,3.467,619,3.467,620,1.492,621,1.359,622,1.359,625,1.359,626,1.359,627,1.09,631,3.965,632,4.054,633,2.406,635,2.755,636,1.09,748,1.253,817,2.406,825,1.879,844,3.161,847,4.068,857,3.883,901,1.67,990,1.492,991,3.384,992,2.693,993,2.693,994,3.384,995,1.67,996,3.384,998,3.469,1000,1.359,1004,1.67,1005,1.67,1007,1.67,1010,1.67,1011,2.693,1012,1.492,1014,1.492,1015,1.67,1017,1.492,1022,3.469,1023,3.469,1089,5.743,1090,1.94,1091,1.94,1092,1.94,1093,1.94,1094,1.94,1095,1.94,1096,1.94,1097,1.94,1098,1.94,1099,1.94,1100,1.359,1101,1.67,1102,1.67,1103,1.94,1104,1.94,1105,1.94,1106,3.128,1107,1.94,1108,1.94,1109,2.693,1110,1.67,1111,1.94,1112,1.94,1113,2.693,1114,4.51,1115,4.51,1116,4.553,1117,3.128,1118,3.128,1119,2.693,1120,2.693,1121,1.67,1122,2.693,1123,1.67]],["title/components/ResetPasswordComponent.html",[81,0.385,135,1.034]],["body/components/ResetPasswordComponent.html",[3,0.089,4,0.079,5,0.059,7,0.142,8,0.722,9,0.658,12,0.301,20,0.622,21,0.018,23,0.785,24,0.745,27,0.089,43,0.004,44,0.007,45,0.004,49,1.427,50,0.922,55,0.559,56,0.785,58,0.569,61,1.204,62,1.2,64,0.689,66,0.869,67,0.416,69,0.203,72,0.166,73,0.722,74,0.979,79,1.101,81,0.391,82,0.51,83,0.953,84,0.614,85,0.614,87,0.953,88,0.953,89,2.086,90,1.888,92,0.614,93,0.586,94,0.424,95,0.999,96,0.953,97,0.51,98,1.388,99,0.614,100,0.614,101,0.51,102,0.614,103,0.51,104,0.614,105,0.51,106,1.636,107,0.614,108,0.51,109,0.999,110,0.51,111,1.388,112,0.614,113,0.51,114,1.448,115,0.51,116,0.614,117,0.487,118,0.614,119,0.51,120,1.388,121,0.614,122,0.51,123,0.614,124,0.51,125,0.614,126,0.51,127,0.614,128,0.51,129,0.534,130,0.999,131,0.51,132,0.614,133,0.51,134,0.559,135,1.208,136,1.318,137,0.51,138,0.465,139,0.586,140,0.614,161,0.644,164,0.829,177,1.427,192,2.321,198,1.343,200,0.644,202,1.262,203,0.999,205,0.999,207,1.454,209,1.101,226,2.464,230,0.829,232,3.827,237,1.975,238,1.975,244,1.565,245,3.124,246,1.427,274,5.19,278,2.881,284,1.597,292,1.698,309,0.614,313,0.644,321,1.042,323,2.157,357,2.012,361,2.012,364,2.318,368,4.701,376,2.142,380,2.675,382,1.716,383,1.897,388,2.597,389,0.979,391,0.784,392,1.199,398,2.597,399,1.597,402,0.979,403,0.979,405,2.193,410,1.3,414,1.199,415,0.979,418,1.5,419,1.427,421,2.321,424,2.597,428,2.597,433,2.114,434,1.949,435,2.597,436,2.597,437,2.114,438,2.597,440,1.949,445,1.949,446,1.949,447,1.592,448,1.592,449,1.695,450,1.695,451,1.695,452,1.114,453,1.427,454,1.427,455,3.283,456,1.042,457,2.142,559,1.3,573,1.427,574,3.283,575,2.597,576,4.239,577,3.827,578,2.673,579,3.079,580,3.079,581,2.114,582,2.464,583,1.3,584,3.631,585,2.881,586,1.597,587,1.3,588,3.388,589,2.464,591,2.673,596,1.597,597,1.597,598,1.597,600,1.597,601,1.3,602,1.597,603,2.114,604,2.114,605,1.114,606,1.3,607,1.949,608,1.3,609,1.3,610,1.3,611,1.3,616,1.3,617,1.3,618,2.114,619,2.114,621,1.3,622,1.3,625,1.3,626,1.3,627,1.042,631,1.949,632,2.464,634,2.321,635,1.3,636,1.042,652,1.592,653,1.695,654,1.114,748,1.199,825,1.812,837,2.673,847,2.321,975,2.321,998,3.38,1000,1.3,1012,1.427,1014,1.427,1017,1.427,1021,1.597,1022,3.38,1023,3.38,1100,1.3,1101,1.597,1102,1.597,1109,2.597,1110,1.597,1116,2.597,1119,2.597,1120,2.597,1121,1.597,1122,2.597,1123,1.597,1124,5.808,1125,3.813,1126,3.813,1127,3.813,1128,3.813,1129,3.813,1130,1.855,1131,1.855,1132,1.855,1133,1.855,1134,1.855,1135,1.855,1136,1.855,1137,1.855,1138,1.855,1139,1.855,1140,3.017,1141,1.855,1142,3.017,1143,1.855,1144,1.855,1145,3.813,1146,1.855,1147,1.855,1148,1.855,1149,1.855,1150,4.393,1151,3.017,1152,3.017,1153,3.017,1154,1.855,1155,1.855,1156,1.855]],["title/interfaces/ResetPasswordDto.html",[0,0.9,306,1.767]],["body/interfaces/ResetPasswordDto.html",[0,1.698,1,1.723,2,2.018,3,0.228,4,0.202,5,0.152,7,0.367,8,1.437,12,1.194,13,2.126,16,2.126,20,0.522,21,0.018,23,1.234,27,0.346,28,2.375,31,1.825,32,1.825,43,0.011,44,0.014,45,0.011,67,0.338,114,1.432,172,2.519,292,2.126,297,2.245,301,2.245,306,2.822,382,1.44,390,2.682,391,2.018,425,2.682,443,2.673,637,2.375,642,2.682,643,2.682,644,2.868,645,3.943,646,2.868,647,2.868,648,2.868,649,2.868,650,2.868,651,2.868,652,2.519,653,2.682,654,4.137]],["title/modules/SharedModule.html",[141,1.305,256,2.112]],["body/modules/SharedModule.html",[3,0.187,4,0.166,5,0.124,21,0.018,27,0.187,43,0.009,44,0.012,45,0.009,51,4.424,52,4.178,67,0.543,69,0.427,72,0.349,94,0.893,136,0.852,137,1.639,138,1.846,141,1.357,143,1.838,144,1.742,145,3.145,146,2.063,147,2.063,148,3.145,154,2.781,155,1.945,157,2.197,158,2.96,164,1.639,215,3.406,216,2.349,256,4.101,387,2.197,605,2.349,632,2.527,831,3.009,1157,3.367,1158,3.367,1159,3.367,1160,3.009,1161,5.27,1162,5.27,1163,4.537,1164,3.911,1165,4.537,1166,3.911,1167,4.537,1168,4.537,1169,3.911,1170,4.537,1171,3.911,1172,4.537,1173,3.911,1174,4.537,1175,3.911,1176,4.537,1177,3.911,1178,4.537,1179,3.911,1180,4.537,1181,5.27,1182,4.537,1183,4.537,1184,3.911,1185,4.537,1186,4.537,1187,3.367,1188,4.537,1189,3.911,1190,4.537,1191,3.911,1192,3.911,1193,3.911,1194,3.911,1195,3.911,1196,4.586]],["title/injectables/SnackbarService.html",[277,1.187,585,1.984]],["body/injectables/SnackbarService.html",[3,0.212,4,0.188,5,0.141,7,0.341,8,1.371,9,1.248,20,0.732,21,0.018,23,1.03,27,0.212,43,0.01,44,0.013,45,0.01,48,4.014,56,0.93,58,1.081,61,1.401,62,1.204,64,1.308,66,0.797,67,0.405,69,0.485,72,0.396,79,1.112,91,1.875,230,1.219,237,1.987,238,1.987,243,3.109,244,1.219,277,1.809,279,2.492,322,2.206,585,3.022,627,3.563,695,5.46,696,5.46,942,4.93,1182,3.819,1187,3.819,1197,3.819,1198,6.703,1199,6.703,1200,5.46,1201,4.436,1202,6.703,1203,5.727,1204,5.727,1205,4.436,1206,5.77,1207,4.436,1208,6.342,1209,6.342,1210,5.727,1211,4.436,1212,6.342,1213,5.727,1214,4.436,1215,4.436,1216,4.436,1217,4.436,1218,4.436,1219,4.436,1220,4.436,1221,4.436]],["title/injectables/ThemeService.html",[277,1.187,538,2.258]],["body/injectables/ThemeService.html",[3,0.184,4,0.163,5,0.122,7,0.295,8,1.247,9,1.135,20,0.692,21,0.018,23,0.624,25,4.093,27,0.184,43,0.009,44,0.012,45,0.009,56,0.846,58,0.983,61,1.645,62,1.254,64,1.19,66,1.062,67,0.369,69,0.42,72,0.343,74,2.028,75,2.484,76,2.159,91,1.624,164,1.057,209,1.711,230,1.432,237,1.808,238,1.808,244,1.952,277,1.645,279,2.159,322,1.912,323,2.43,380,2.778,538,3.129,618,3.651,914,3.309,915,4.485,917,3.309,955,4.41,1206,3.309,1222,3.309,1223,6.62,1224,5.909,1225,5.909,1226,5.209,1227,5.453,1228,6.334,1229,3.309,1230,5.909,1231,6.334,1232,5.209,1233,5.209,1234,3.844,1235,3.844,1236,3.844,1237,3.844,1238,3.844,1239,5.909,1240,3.844,1241,2.957,1242,3.309,1243,3.844,1244,3.844,1245,3.844,1246,5.909,1247,3.309,1248,5.209,1249,6.62,1250,3.844,1251,3.844,1252,3.844,1253,5.209,1254,3.844,1255,5.209,1256,5.209,1257,5.209,1258,5.209]],["title/interfaces/Upload.html",[0,0.9,19,2.112]],["body/interfaces/Upload.html",[0,1.561,1,1.712,2,1.988,3,0.225,4,0.199,5,0.225,6,3.04,7,0.361,8,1.423,10,3.04,11,3.04,12,0.764,13,2.095,14,2.826,15,2.826,16,2.095,17,3.04,18,3.04,19,3.662,20,0.65,21,0.018,22,3.843,23,1.224,24,1.89,25,3.04,26,3.843,27,0.328,28,2.34,29,4.168,30,4.168,31,1.798,32,1.798,33,2.978,34,5.27,35,4.801,36,5.27,37,4.168,38,3.619,39,4.575,40,3.619,41,3.619,42,5.27,43,0.011,44,0.014,45,0.011]],["title/guards/UserGuard.html",[260,2.635,476,2.258]],["body/guards/UserGuard.html",[1,1.195,3,0.218,4,0.193,5,0.145,7,0.35,9,0.992,20,0.497,21,0.018,27,0.218,32,2.226,43,0.011,44,0.013,45,0.011,56,0.739,58,1.099,61,1.839,62,1.046,64,1.04,66,0.818,67,0.506,69,0.497,72,0.407,73,1.09,79,1.61,91,1.924,161,1.58,164,1.252,221,4.623,230,1.601,244,1.765,260,4.081,277,1.839,286,3.074,293,3.193,309,1.507,313,1.58,322,2.264,323,2.125,338,3.191,371,3.838,405,1.829,477,3.191,480,2.942,481,3.558,484,3.502,485,3.191,486,2.557,487,2.735,488,2.557,489,3.502,490,3.502,491,2.942,738,3.919,1259,3.919,1260,4.553,1261,4.553,1262,4.553]],["title/injectables/UserService.html",[277,1.187,286,1.589]],["body/injectables/UserService.html",[1,1.958,3,0.16,4,0.142,5,0.106,7,0.257,8,1.133,9,1.197,19,1.88,20,0.714,21,0.018,23,1.115,27,0.16,32,2.785,43,0.008,44,0.011,45,0.008,56,0.892,58,0.893,61,2.123,62,1.254,64,1.254,66,0.987,67,0.486,69,0.366,70,1.414,71,1.664,72,0.299,79,1.186,91,1.414,161,1.161,164,1.301,209,1.186,230,1.301,237,2.071,238,2.071,244,1.987,277,1.495,279,1.88,286,2,287,4.223,288,5.138,293,2.73,308,2.162,309,1.107,310,1.88,311,2.881,313,1.161,322,1.664,323,2.392,339,2.881,340,2.574,352,2.881,371,3.546,382,1.427,537,2.01,615,2.881,892,5.421,895,4.074,955,4.224,1000,2.345,1229,2.881,1241,2.574,1242,2.881,1247,2.881,1263,2.881,1264,5.49,1265,5.49,1266,5.49,1267,5.138,1268,4.074,1269,4.732,1270,4.732,1271,3.346,1272,4.732,1273,3.346,1274,3.346,1275,4.732,1276,3.346,1277,3.346,1278,4.732,1279,3.346,1280,3.346,1281,3.346,1282,3.346,1283,4.732,1284,3.346,1285,5.49,1286,3.346,1287,3.346,1288,3.346,1289,3.346,1290,3.346,1291,3.346,1292,3.346,1293,3.346]],["title/changelog.html",[1294,2.703,1295,2.703,1296,2.415]],["body/changelog.html",[5,0.168,21,0.015,32,2.018,43,0.012,44,0.015,45,0.012,98,1.668,287,4.062,442,4.545,703,4.475,764,4.475,798,4.062,1041,4.062,1296,4.062,1297,5.28,1298,4.545,1299,4.545,1300,5.28,1301,5.28,1302,4.545,1303,4.062,1304,5.498,1305,5.28,1306,5.28,1307,6.386,1308,5.28,1309,5.28,1310,5.498,1311,4.062,1312,4.545,1313,5.28,1314,5.28,1315,5.28,1316,4.545,1317,4.545,1318,6.386,1319,5.28,1320,4.545,1321,5.28,1322,5.498,1323,5.28,1324,5.28,1325,4.545,1326,4.545,1327,5.28,1328,5.28,1329,5.28,1330,4.545,1331,5.28,1332,5.28,1333,5.28,1334,5.28,1335,5.28,1336,5.28,1337,5.28]],["title/coverage.html",[1338,4.417]],["body/coverage.html",[0,1.667,1,0.77,5,0.093,6,3.293,12,0.699,19,1.647,20,0.32,21,0.018,31,1.644,43,0.007,44,0.01,45,0.007,46,1.894,47,2.524,50,1.458,51,1.761,52,2.054,53,2.524,54,2.524,70,1.818,72,0.262,81,0.75,82,0.806,86,2.524,97,0.806,101,0.806,103,0.806,105,0.806,108,0.806,110,0.806,113,0.806,114,0.894,115,0.806,117,0.77,119,0.806,122,0.806,124,0.806,126,0.806,128,0.806,131,0.806,133,0.806,135,0.806,137,0.806,138,0.735,174,2.054,186,2.255,188,2.524,201,2.524,217,2.054,223,2.524,228,2.78,258,2.054,260,2.054,264,1.894,266,2.255,268,2.054,269,2.255,271,2.255,273,2.255,274,2.255,277,1.974,278,1.547,280,2.524,286,1.239,297,1.378,301,1.378,306,1.378,315,2.054,316,2.054,317,2.054,318,2.054,319,2.054,320,2.054,355,3.309,356,2.524,382,0.884,458,3.309,476,3.061,478,2.524,479,3.309,481,1.458,498,1.894,499,1.894,514,2.255,516,2.255,518,2.255,520,2.255,530,2.054,531,3.309,538,1.761,572,3.309,573,3.309,585,1.547,636,1.647,642,1.647,643,3.358,655,2.524,703,3.015,705,3.309,706,2.524,735,2.524,753,2.524,754,2.524,809,3.628,810,2.524,818,2.524,837,5.489,851,2.524,944,2.524,955,1.894,956,2.524,957,2.524,978,2.255,989,2.524,990,3.309,1016,2.524,1024,5.286,1045,2.255,1047,2.255,1075,2.255,1076,2.524,1087,2.524,1089,2.524,1100,2.054,1124,2.524,1160,3.92,1196,2.255,1197,2.524,1222,2.524,1259,2.524,1263,2.524,1338,2.524,1339,2.524,1340,2.931,1341,6.872,1342,7.361,1343,6.25,1344,4.302,1345,7.28,1346,2.931,1347,5.096,1348,2.931,1349,5.979,1350,4.302,1351,2.931,1352,4.302,1353,4.302,1354,2.931,1355,4.302,1356,2.931,1357,2.931,1358,2.931,1359,2.931,1360,2.931,1361,2.524,1362,2.524,1363,2.931,1364,2.524,1365,2.524,1366,3.703,1367,2.524,1368,2.524,1369,2.931,1370,2.931]],["title/dependencies.html",[144,2.014,1371,2.703]],["body/dependencies.html",[21,0.018,43,0.012,44,0.015,45,0.012,69,0.588,144,2.396,161,1.867,194,3.628,216,3.232,309,1.781,504,4.527,508,4.632,509,4.632,605,3.232,1372,5.381,1373,7.755,1374,5.381,1375,5.381,1376,5.381,1377,5.381,1378,5.381,1379,5.381,1380,5.381,1381,5.381,1382,5.381,1383,5.381]],["title/miscellaneous/enumerations.html",[1384,1.886,1385,3.893]],["body/miscellaneous/enumerations.html",[6,3.259,7,0.387,12,1.14,21,0.018,26,4.012,29,4.352,30,4.352,43,0.012,44,0.014,45,0.012,114,1.291,172,2.661,238,2.679,292,2.246,382,1.52,391,2.624,425,2.833,443,2.765,476,3.029,486,3.488,637,2.508,643,2.833,644,3.029,645,4.042,646,3.029,647,3.029,648,3.029,649,3.029,650,3.029,651,3.029,652,2.661,653,2.833,707,3.534,764,3.534,978,3.879,985,4.341,1384,3.029,1385,4.341,1386,5.043,1387,5.043,1388,5.043]],["title/miscellaneous/functions.html",[1384,1.886,1389,3.893]],["body/miscellaneous/functions.html",[7,0.445,9,1.264,21,0.017,43,0.013,44,0.016,45,0.013,56,0.941,64,1.324,66,1.042,209,1.453,1100,4.731,1361,4.991,1362,5.811,1384,3.482,1389,4.991,1390,5.797,1391,5.797,1392,6.751,1393,5.797]],["title/index.html",[7,0.241,1294,2.703,1295,2.703]],["body/index.html",[1,0.565,4,0.144,5,0.108,21,0.018,23,0.552,24,0.864,33,0.864,35,1.508,37,4.211,43,0.005,44,0.008,45,0.005,48,2.951,56,0.349,70,1.436,73,0.515,90,1.315,91,0.909,129,0.978,136,0.741,141,0.747,144,0.958,168,1.852,194,1.208,210,1.852,237,0.747,382,1.27,421,2.614,432,1.852,434,1.39,437,1.508,441,1.852,443,1.513,469,1.39,473,2.925,485,2.381,571,1.508,582,3.091,589,1.39,652,1.135,755,3.625,758,4.766,797,1.655,798,4.007,799,1.852,800,3.625,801,1.852,852,1.852,889,1.852,890,2.925,918,1.852,919,1.852,925,4.484,926,1.852,943,1.852,1028,1.655,1030,1.655,1113,3.625,1200,2.925,1227,1.852,1241,2.614,1267,1.852,1268,4.118,1296,1.655,1298,5.325,1299,5.985,1302,1.852,1303,4.872,1304,5.562,1310,1.852,1311,1.655,1312,2.925,1316,5.173,1317,2.925,1320,2.925,1322,2.925,1325,1.852,1326,1.852,1330,2.925,1339,4.484,1371,1.852,1394,2.151,1395,3.398,1396,3.398,1397,3.398,1398,2.151,1399,2.151,1400,6.334,1401,3.398,1402,3.398,1403,2.151,1404,7.305,1405,7.142,1406,2.151,1407,2.151,1408,2.151,1409,4.211,1410,2.151,1411,3.398,1412,2.151,1413,2.151,1414,2.151,1415,4.784,1416,3.398,1417,2.151,1418,2.151,1419,2.151,1420,3.398,1421,2.151,1422,2.151,1423,2.151,1424,2.151,1425,2.151,1426,4.211,1427,2.151,1428,2.151,1429,3.398,1430,4.211,1431,4.784,1432,3.398,1433,6.009,1434,6.009,1435,2.151,1436,3.398,1437,2.151,1438,2.151,1439,2.151,1440,2.151,1441,4.211,1442,6.892,1443,3.398,1444,3.398,1445,5.209,1446,3.398,1447,5.209,1448,4.211,1449,3.398,1450,3.398,1451,3.398,1452,2.151,1453,2.151,1454,2.151,1455,2.151,1456,5.536,1457,4.211,1458,2.151,1459,3.398,1460,2.151,1461,5.209,1462,2.151,1463,2.151,1464,2.151,1465,2.151,1466,2.151,1467,2.151,1468,2.151,1469,2.151,1470,2.151,1471,2.151,1472,2.151,1473,3.398,1474,2.151,1475,4.211,1476,2.151,1477,2.151,1478,2.151,1479,2.151,1480,2.151,1481,2.151,1482,2.925,1483,3.398,1484,2.151,1485,2.151,1486,4.211,1487,2.151,1488,2.151,1489,2.151,1490,2.151,1491,2.151,1492,2.151,1493,2.151,1494,2.151,1495,3.398,1496,2.151,1497,3.398,1498,2.151,1499,2.151,1500,2.151,1501,2.151,1502,2.151,1503,2.151,1504,2.151,1505,3.398,1506,3.398,1507,3.398,1508,2.151,1509,4.784,1510,2.151,1511,3.398,1512,2.151,1513,2.151,1514,2.151,1515,2.151,1516,2.151,1517,2.151,1518,2.151,1519,2.151,1520,2.151,1521,4.784,1522,2.151,1523,5.536,1524,2.151,1525,2.151,1526,2.151,1527,6.46,1528,4.211,1529,4.784,1530,2.151,1531,3.398,1532,2.151,1533,2.151,1534,2.151,1535,2.151,1536,2.151,1537,4.211,1538,2.151,1539,2.151,1540,3.398,1541,3.398,1542,2.151,1543,2.151,1544,2.151,1545,2.151,1546,4.784,1547,2.151,1548,2.151,1549,2.151,1550,2.151,1551,2.151,1552,2.151,1553,2.151,1554,2.151,1555,2.151,1556,2.151,1557,4.211,1558,3.398,1559,3.398,1560,3.398,1561,2.151,1562,2.151,1563,2.151,1564,2.151,1565,2.151,1566,2.151,1567,2.151,1568,2.151,1569,3.398,1570,2.151,1571,2.151,1572,2.151,1573,2.151,1574,2.151,1575,3.398,1576,4.211,1577,2.151,1578,2.151,1579,2.151,1580,2.151,1581,2.151,1582,2.151,1583,2.151,1584,4.784,1585,4.211,1586,2.151,1587,2.151,1588,2.151,1589,2.151,1590,2.151,1591,2.151,1592,2.151,1593,2.151,1594,2.151,1595,2.151,1596,2.151,1597,2.151,1598,2.151,1599,2.151,1600,3.398,1601,2.151,1602,2.151,1603,2.151,1604,2.151,1605,2.151,1606,2.151,1607,2.151,1608,2.151,1609,2.151,1610,2.151,1611,2.151,1612,2.151,1613,2.151,1614,2.151,1615,2.151,1616,2.151,1617,2.151,1618,2.151,1619,2.151,1620,2.151,1621,2.151,1622,2.151,1623,2.151,1624,2.151,1625,2.151,1626,2.151,1627,2.151,1628,2.151,1629,2.151,1630,2.151,1631,2.151,1632,2.151,1633,2.151,1634,2.151]],["title/modules.html",[143,2.412]],["body/modules.html",[21,0.015,43,0.013,44,0.015,45,0.013,142,3.902,143,2.617,153,3.598,194,4.263,211,3.902,252,3.902,256,3.127,697,3.902,1082,3.902,1635,7.59,1636,7.59,1637,7.59]],["title/overview.html",[1638,4.417]],["body/overview.html",[2,1.594,21,0.018,43,0.009,44,0.012,45,0.009,50,1.876,51,4.172,72,0.337,82,1.91,83,1.192,94,0.862,97,1.037,101,1.609,103,1.609,105,1.609,108,1.609,110,1.609,113,1.609,115,1.609,117,1.824,119,1.609,122,1.609,124,1.609,126,1.609,128,1.609,131,1.609,133,1.609,135,1.609,136,0.822,138,1.741,141,1.309,142,4.868,143,1.774,144,1.68,145,1.991,146,1.991,147,1.991,148,1.991,149,3.248,150,3.248,151,3.248,152,3.248,153,4.938,154,2.714,155,1.876,211,4.405,212,3.248,213,3.248,252,5.356,253,3.248,254,3.248,255,3.248,256,4.111,279,2.119,477,2.644,493,3.248,495,3.248,496,3.248,497,3.248,498,3.782,499,3.782,697,4.757,698,3.248,700,3.248,808,3.782,1082,4.405,1083,3.248,1084,3.248,1157,3.248,1158,3.248,1159,3.248,1638,3.248,1639,3.773,1640,3.773,1641,3.773,1642,3.773,1643,3.773]],["title/miscellaneous/variables.html",[1384,1.886,1644,3.893]],["body/miscellaneous/variables.html",[1,1.751,7,0.214,11,2.677,12,0.803,13,1.845,14,3.29,15,2.971,16,1.845,17,1.8,18,2.677,20,0.742,21,0.018,22,2.677,23,0.951,24,1.664,32,1.89,43,0.006,44,0.01,45,0.006,51,1.674,52,2.904,61,1.309,70,2.315,79,1.798,90,0.766,114,1.028,137,1.139,138,0.698,164,1.609,228,3.783,237,2.488,238,2.488,249,2.143,292,2.439,293,3.052,297,1.31,299,2.61,301,1.31,306,1.31,310,3.288,315,2.904,316,2.904,317,2.904,318,2.904,319,2.904,320,2.904,380,1.948,382,1.651,405,2.552,426,2.143,443,1.241,637,1.386,733,4.888,825,1.674,845,2.904,975,3.187,1024,2.143,1027,2.399,1028,2.143,1029,2.399,1030,2.143,1031,2.399,1032,2.399,1033,2.399,1034,2.399,1035,2.399,1036,2.399,1037,2.399,1038,2.399,1039,2.399,1040,2.399,1041,2.143,1042,2.399,1043,2.399,1044,2.399,1045,4.214,1046,2.399,1047,3.187,1048,2.399,1049,3.567,1050,3.567,1051,3.567,1052,5.04,1053,5.04,1054,3.567,1055,3.567,1056,2.399,1057,2.399,1058,4.258,1059,3.567,1060,2.399,1061,2.399,1062,2.399,1063,2.399,1064,2.399,1065,3.567,1066,2.399,1067,3.567,1068,3.567,1069,4.258,1070,2.399,1071,2.399,1072,3.567,1073,3.567,1074,2.399,1160,2.143,1163,2.399,1165,2.399,1167,2.399,1168,2.399,1170,2.399,1172,2.399,1174,2.399,1176,2.399,1178,2.399,1180,2.399,1183,2.399,1185,2.399,1186,2.399,1188,2.399,1190,2.399,1196,3.187,1303,3.187,1311,2.143,1364,2.399,1365,2.399,1366,2.399,1367,3.567,1368,3.567,1384,1.674,1482,3.567,1644,2.399,1645,6.671,1646,4.143,1647,4.946,1648,2.786,1649,2.786,1650,2.786,1651,2.786,1652,4.143,1653,4.143,1654,4.143,1655,4.143,1656,4.143,1657,2.786]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":837,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1333,"title":{},"body":{"changelog.html":{}}}],["0.0.1",{"_index":1306,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1341,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["08",{"_index":1334,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1308,"title":{},"body":{"changelog.html":{}}}],["09ced85",{"_index":1323,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":808,"title":{"interfaces/LoggedInUser-1.html":{}},"body":{"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1554,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1144,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["100",{"_index":636,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1048,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":954,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["10px",{"_index":940,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["11",{"_index":1643,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1041,"title":{},"body":{"interfaces/MockUser.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["12.0.0",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["15:00:00",{"_index":1039,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["17",{"_index":1640,"title":{},"body":{"overview.html":{}}}],["19:00:00",{"_index":1043,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":1114,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["2.0.0",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":1038,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["2020",{"_index":1042,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["2021",{"_index":1307,"title":{},"body":{"changelog.html":{}}}],["20px",{"_index":848,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["21",{"_index":1335,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1037,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":953,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["27",{"_index":1309,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":835,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["3",{"_index":1642,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":1217,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["400px",{"_index":1156,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["401",{"_index":750,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["404",{"_index":1080,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["42",{"_index":1031,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["43",{"_index":1061,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":844,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/RegisterFormComponent.html":{}}}],["500",{"_index":248,"title":{},"body":{"components/AuthComponent.html":{}}}],["50px",{"_index":816,"title":{},"body":{"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{}}}],["5809b0f",{"_index":1337,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":1641,"title":{},"body":{"overview.html":{}}}],["6.6.7",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["629d290",{"_index":1328,"title":{},"body":{"changelog.html":{}}}],["638c1d7",{"_index":1315,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1639,"title":{},"body":{"overview.html":{}}}],["75px",{"_index":455,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["8",{"_index":1119,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["8239170",{"_index":1319,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":838,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["ab",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["abstractcontrol",{"_index":603,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["accent",{"_index":696,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnackbarService.html":{}}}],["accessors",{"_index":581,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["according",{"_index":1581,"title":{},"body":{"index.html":{}}}],["account",{"_index":1,"title":{"interfaces/Account.html":{}},"body":{"interfaces/Account.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"interfaces/ForogtPasswordDto.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["account!.firstname",{"_index":423,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["account)?.email",{"_index":407,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["account.email",{"_index":911,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["account.isconfirmed",{"_index":1066,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["account?.email",{"_index":952,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["account?.firstname",{"_index":910,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["account?.isconfirmed",{"_index":397,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{}}}],["accountid",{"_index":1125,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["accountkey",{"_index":1264,"title":{},"body":{"injectables/UserService.html":{}}}],["accountsubject",{"_index":1265,"title":{},"body":{"injectables/UserService.html":{}}}],["actions",{"_index":1560,"title":{},"body":{"index.html":{}}}],["activatedroute",{"_index":368,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["actual_component",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["add",{"_index":758,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"index.html":{}}}],["add/modify/delete",{"_index":1582,"title":{},"body":{"index.html":{}}}],["addclass",{"_index":1256,"title":{},"body":{"injectables/ThemeService.html":{}}}],["added",{"_index":746,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["address",{"_index":429,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["adipisicing",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{}}}],["admin",{"_index":29,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"miscellaneous/enumerations.html":{}}}],["advisable",{"_index":1588,"title":{},"body":{"index.html":{}}}],["afterclosed",{"_index":614,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{}}}],["afterviewchecked",{"_index":532,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["again",{"_index":924,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["alias",{"_index":1474,"title":{},"body":{"index.html":{}}}],["alphanumeric",{"_index":1115,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["already",{"_index":443,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["amet",{"_index":669,"title":{},"body":{"components/HomeComponent.html":{}}}],["analyze",{"_index":1623,"title":{},"body":{"index.html":{}}}],["analyzedeploy",{"_index":1626,"title":{},"body":{"index.html":{}}}],["analyzes",{"_index":1613,"title":{},"body":{"index.html":{}}}],["angular",{"_index":798,"title":{},"body":{"components/LayoutComponent.html":{},"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":216,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":69,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":605,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1164,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":1166,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":387,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":1169,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":1171,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":1173,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":1175,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":1177,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":1179,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":1181,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/sidenav",{"_index":831,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":1187,"title":{},"body":{"modules/SharedModule.html":{},"injectables/SnackbarService.html":{}}}],["angular/material/tabs",{"_index":1189,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tooltip",{"_index":1191,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":504,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"modules/HomeModule.html":{},"components/LoginFormComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/service",{"_index":508,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["animi",{"_index":689,"title":{},"body":{"components/HomeComponent.html":{}}}],["api",{"_index":1030,"title":{},"body":{"interfaces/MockUser.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apierror",{"_index":46,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/HttpErrorInterceptor.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["apierror).message",{"_index":1106,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["apierror)?.message",{"_index":732,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["apipath",{"_index":57,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["apipathpipe",{"_index":51,"title":{"pipes/ApiPathPipe.html":{}},"body":{"pipes/ApiPathPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":82,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appdescription",{"_index":547,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{}}}],["appdescriptionelement",{"_index":545,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["application",{"_index":926,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["applications",{"_index":1488,"title":{},"body":{"index.html":{}}}],["applypropertheme",{"_index":1226,"title":{},"body":{"injectables/ThemeService.html":{}}}],["applypropertheme(isdarktheme",{"_index":1233,"title":{},"body":{"injectables/ThemeService.html":{}}}],["appmodule",{"_index":142,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":186,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apps",{"_index":1614,"title":{},"body":{"index.html":{}}}],["apptitle",{"_index":546,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{}}}],["apptitleelement",{"_index":543,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["appversion",{"_index":549,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{}}}],["areconsolesallowed",{"_index":979,"title":{},"body":{"injectables/LogService.html":{}}}],["article",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"components/ArticleComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["article'},{'name",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["article.component",{"_index":220,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.component.html",{"_index":206,"title":{},"body":{"components/ArticleComponent.html":{}}}],["article.component.scss",{"_index":204,"title":{},"body":{"components/ArticleComponent.html":{}}}],["articlecomponent",{"_index":101,"title":{"components/ArticleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["articlemodule",{"_index":211,"title":{"modules/ArticleModule.html":{}},"body":{"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articles",{"_index":802,"title":{},"body":{"components/LayoutComponent.html":{}}}],["asperiores",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["asset",{"_index":1418,"title":{},"body":{"index.html":{}}}],["assets",{"_index":1414,"title":{},"body":{"index.html":{}}}],["assets/images/default_${this.default}.jpg",{"_index":779,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["assets/images/default_broken.jpg",{"_index":778,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["assumenda",{"_index":680,"title":{},"body":{"components/HomeComponent.html":{}}}],["async",{"_index":1129,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["attach",{"_index":1465,"title":{},"body":{"index.html":{}}}],["attention",{"_index":1513,"title":{},"body":{"index.html":{}}}],["autem",{"_index":693,"title":{},"body":{"components/HomeComponent.html":{}}}],["auth",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth.component",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.component.html",{"_index":225,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":224,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.mock",{"_index":242,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["auth.model",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth.service",{"_index":392,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["authcomponent",{"_index":103,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticate",{"_index":1152,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["autherror",{"_index":391,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["autherror.emailconfirmed",{"_index":420,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["autherror.emailexists",{"_index":1111,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["autherror.emailnotfound",{"_index":623,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["autherror.invalidemail",{"_index":1018,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["autherror.invalidpassword",{"_index":1020,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["autherror.newpasswordmustbedifferentfromcurrent",{"_index":1147,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["authmodule",{"_index":252,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":742,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["authservice",{"_index":278,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["auto",{"_index":840,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["automatically",{"_index":1558,"title":{},"body":{"index.html":{}}}],["available",{"_index":889,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["avatar",{"_index":10,"title":{},"body":{"interfaces/Account.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["bar",{"_index":1182,"title":{},"body":{"modules/SharedModule.html":{},"injectables/SnackbarService.html":{}}}],["basically",{"_index":1501,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":743,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["before",{"_index":1330,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["best",{"_index":1621,"title":{},"body":{"index.html":{}}}],["between",{"_index":451,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["book",{"_index":558,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/Account.html":{},"pipes/ApiPathPipe.html":{},"interfaces/LoggedInUser-1.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{}}}],["bootstrap",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["border",{"_index":842,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["brand",{"_index":841,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["breaking",{"_index":1540,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1637,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":194,"title":{},"body":{"classes/AppPage.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":196,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":506,"title":{},"body":{"modules/CoreModule.html":{}}}],["browseranimationsmodule",{"_index":505,"title":{},"body":{"modules/CoreModule.html":{}}}],["browsermodule",{"_index":503,"title":{},"body":{"modules/CoreModule.html":{}}}],["bug",{"_index":1324,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1447,"title":{},"body":{"index.html":{}}}],["built",{"_index":1592,"title":{},"body":{"index.html":{}}}],["bump",{"_index":1546,"title":{},"body":{"index.html":{}}}],["bumps",{"_index":1542,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":1625,"title":{},"body":{"index.html":{}}}],["button",{"_index":445,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["button($sizeinpixels",{"_index":930,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["button(100px",{"_index":939,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["button(36px",{"_index":937,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["byte",{"_index":1603,"title":{},"body":{"index.html":{}}}],["c7605c2",{"_index":1332,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":1508,"title":{},"body":{"index.html":{}}}],["came",{"_index":1605,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":221,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["cancel",{"_index":927,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["card",{"_index":1154,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["catch",{"_index":721,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror",{"_index":717,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["catcherror((err",{"_index":722,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["center",{"_index":1210,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["change",{"_index":589,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["changed",{"_index":1151,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["changedetection",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["changedetectionstrategy",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["changedetectorref",{"_index":232,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["changelog",{"_index":1296,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changelog.md",{"_index":1573,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1298,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["characters",{"_index":1116,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["check",{"_index":469,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/LoginFormComponent.html":{},"index.html":{}}}],["chrome",{"_index":1461,"title":{},"body":{"index.html":{}}}],["chromium",{"_index":1470,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1406,"title":{},"body":{"index.html":{}}}],["class",{"_index":72,"title":{"classes/AppPage.html":{}},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":187,"title":{},"body":{"classes/AppPage.html":{}}}],["cli",{"_index":1520,"title":{},"body":{"index.html":{}}}],["click",{"_index":432,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"index.html":{}}}],["clone",{"_index":1398,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":212,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_declarations",{"_index":213,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":493,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declarations",{"_index":495,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":496,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":494,"title":{},"body":{"modules/CoreModule.html":{}}}],["cluster_coremodule_providers",{"_index":497,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":698,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":700,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":699,"title":{},"body":{"modules/HomeModule.html":{}}}],["cluster_notfoundmodule",{"_index":1083,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_notfoundmodule_declarations",{"_index":1084,"title":{},"body":{"modules/NotFoundModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1157,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":1158,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1159,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":1456,"title":{},"body":{"index.html":{}}}],["collecting",{"_index":1615,"title":{},"body":{"index.html":{}}}],["color",{"_index":1206,"title":{},"body":{"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{}}}],["column",{"_index":806,"title":{},"body":{"components/LayoutComponent.html":{}}}],["comfortable",{"_index":1545,"title":{},"body":{"index.html":{}}}],["coming",{"_index":1610,"title":{},"body":{"index.html":{}}}],["command",{"_index":1475,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1451,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1304,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commitizen",{"_index":1507,"title":{},"body":{"index.html":{}}}],["commits",{"_index":1497,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":215,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{}}}],["compodoc",{"_index":1395,"title":{},"body":{"index.html":{}}}],["component",{"_index":81,"title":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["components",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"overview.html":{}}}],["compose",{"_index":1445,"title":{},"body":{"index.html":{}}}],["compose.dev.yml",{"_index":1446,"title":{},"body":{"index.html":{}}}],["compose.prod.yml",{"_index":1483,"title":{},"body":{"index.html":{}}}],["config",{"_index":1318,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1631,"title":{},"body":{"index.html":{}}}],["confirm",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["confirmation",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailDialogComponent.html":{}}}],["confirmed",{"_index":425,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["confirmedmockuser",{"_index":1068,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["confirmeduserguard",{"_index":217,"title":{"guards/ConfirmedUserGuard.html":{}},"body":{"modules/ArticleModule.html":{},"guards/ConfirmedUserGuard.html":{},"coverage.html":{}}}],["confirmemail",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmemail$(token",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{}}}],["confirmemailcomponent",{"_index":105,"title":{"components/ConfirmEmailComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmemaildialogcomponent",{"_index":108,"title":{"components/ConfirmEmailDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmemailfortest",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmemailfortest$(account",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["confirmpassword",{"_index":1109,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["consectetur",{"_index":670,"title":{},"body":{"components/HomeComponent.html":{}}}],["consequuntur",{"_index":690,"title":{},"body":{"components/HomeComponent.html":{}}}],["considered",{"_index":1538,"title":{},"body":{"index.html":{}}}],["console.error(`${logsubject.error",{"_index":988,"title":{},"body":{"injectables/LogService.html":{}}}],["console.info(`${subject",{"_index":987,"title":{},"body":{"injectables/LogService.html":{}}}],["const",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":230,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["constructor(activatedroute",{"_index":367,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["constructor(changedetectorref",{"_index":231,"title":{},"body":{"components/AuthComponent.html":{}}}],["constructor(dialogref",{"_index":462,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["constructor(formbuilder",{"_index":583,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(localeid",{"_index":862,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["constructor(localstorageservice",{"_index":1229,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["constructor(logservice",{"_index":480,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["constructor(metaservice",{"_index":781,"title":{},"body":{"components/LayoutComponent.html":{}}}],["constructor(private",{"_index":243,"title":{},"body":{"components/AuthComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/SnackbarService.html":{}}}],["constructor(snackbar",{"_index":1201,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["constructor(userservice",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["contain",{"_index":847,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["container",{"_index":1312,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["containerized",{"_index":1441,"title":{},"body":{"index.html":{}}}],["content",{"_index":198,"title":{},"body":{"classes/AppPage.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["context",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":427,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["controlname",{"_index":1393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convention",{"_index":1498,"title":{},"body":{"index.html":{}}}],["conventional",{"_index":1496,"title":{},"body":{"index.html":{}}}],["core/core.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["core/guards/confirmed",{"_index":218,"title":{},"body":{"modules/ArticleModule.html":{}}}],["core/guards/not",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/guards/user.guard",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["core/models/error.model",{"_index":1099,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["core/models/user.model",{"_index":390,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{}}}],["core/services/snackbar.service",{"_index":606,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/services/user.service",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{}}}],["coremodule",{"_index":153,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":1575,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":1428,"title":{},"body":{"index.html":{}}}],["cover",{"_index":935,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["coverage",{"_index":1338,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1473,"title":{},"body":{"index.html":{}}}],["create/update",{"_index":1572,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":11,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["createformgroup",{"_index":578,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["createformgroup(updateon",{"_index":587,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["credentials",{"_index":923,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["css",{"_index":760,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["current",{"_index":653,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["cz",{"_index":1509,"title":{},"body":{"index.html":{}}}],["dark",{"_index":917,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{}}}],["dark)')?.matches",{"_index":1252,"title":{},"body":{"injectables/ThemeService.html":{}}}],["database",{"_index":638,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{}}}],["datatransfer",{"_index":868,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["datatransfer)?.files)[0",{"_index":908,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["date",{"_index":22,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["date('october",{"_index":1040,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["date('september",{"_index":1036,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["debug",{"_index":1459,"title":{},"body":{"index.html":{}}}],["debugger",{"_index":1322,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["debugging",{"_index":1468,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["decorators",{"_index":790,"title":{},"body":{"components/LayoutComponent.html":{}}}],["deep",{"_index":941,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["default",{"_index":237,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default.directive",{"_index":1193,"title":{},"body":{"modules/SharedModule.html":{}}}],["default.directive.ts",{"_index":754,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"coverage.html":{}}}],["default.directive.ts:15",{"_index":767,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["default.directive.ts:16",{"_index":768,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["default.directive.ts:19",{"_index":769,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["defined",{"_index":62,"title":{},"body":{"pipes/ApiPathPipe.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["delay",{"_index":1026,"title":{},"body":{"interfaces/MockUser.html":{}}}],["delay(mockdelay",{"_index":1053,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1267,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["demo",{"_index":890,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["demos",{"_index":1570,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":144,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deploy",{"_index":1317,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["description",{"_index":571,"title":{},"body":{"interfaces/Destination.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"index.html":{}}}],["destination",{"_index":530,"title":{"interfaces/Destination.html":{}},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"coverage.html":{}}}],["destination.icon",{"_index":833,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["destination.name",{"_index":834,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["destinations",{"_index":548,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["determines",{"_index":1601,"title":{},"body":{"index.html":{}}}],["dev",{"_index":1311,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["developer",{"_index":1620,"title":{},"body":{"index.html":{}}}],["development",{"_index":1430,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":369,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{}}}],["dialog'},{'name",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dialog.component",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{}}}],["dialog.component.html",{"_index":460,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog.component.scss",{"_index":459,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog.component.ts",{"_index":458,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":464,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":466,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":467,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["dialog/confirm",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["dialog/forgot",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":465,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["different",{"_index":652,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["differently",{"_index":1533,"title":{},"body":{"index.html":{}}}],["dignissimos",{"_index":676,"title":{},"body":{"components/HomeComponent.html":{}}}],["direction",{"_index":805,"title":{},"body":{"components/LayoutComponent.html":{}}}],["directive",{"_index":97,"title":{"directives/ImageDefaultDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directives/image",{"_index":1192,"title":{},"body":{"modules/SharedModule.html":{}}}],["display",{"_index":447,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["distro",{"_index":1481,"title":{},"body":{"index.html":{}}}],["distros",{"_index":1472,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1491,"title":{},"body":{"index.html":{}}}],["docgit",{"_index":1493,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1442,"title":{},"body":{"index.html":{}}}],["docker:build",{"_index":1452,"title":{},"body":{"index.html":{}}}],["docker:build:prod",{"_index":1484,"title":{},"body":{"index.html":{}}}],["docker:prod",{"_index":1314,"title":{},"body":{"changelog.html":{}}}],["docker:proddocumentation",{"_index":1485,"title":{},"body":{"index.html":{}}}],["docs",{"_index":1571,"title":{},"body":{"index.html":{}}}],["document.body",{"_index":1258,"title":{},"body":{"injectables/ThemeService.html":{}}}],["documentation",{"_index":1339,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documented",{"_index":1300,"title":{},"body":{"changelog.html":{}}}],["doe",{"_index":1035,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["doesn't",{"_index":1121,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["doesn\\'t",{"_index":1123,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dolor",{"_index":667,"title":{},"body":{"components/HomeComponent.html":{}}}],["dom",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["done",{"_index":421,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["ducimus",{"_index":678,"title":{},"body":{"components/HomeComponent.html":{}}}],["duration",{"_index":1216,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["dynamic",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["e2e/src/app.po.ts",{"_index":188,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":193,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":191,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":1602,"title":{},"body":{"index.html":{}}}],["easily",{"_index":1457,"title":{},"body":{"index.html":{}}}],["element",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["element(by.css('app",{"_index":197,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":533,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["elit",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["email",{"_index":12,"title":{},"body":{"interfaces/Account.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email'},{'name",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["email.component",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["email.component.html",{"_index":359,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.scss",{"_index":358,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts",{"_index":356,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:26",{"_index":384,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:27",{"_index":385,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:28",{"_index":381,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:29",{"_index":386,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:30",{"_index":379,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:31",{"_index":372,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:42",{"_index":374,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:58",{"_index":373,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:63",{"_index":375,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.component.ts:81",{"_index":378,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["email.tolowercase",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/${email",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/${token",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/:token",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{}}}],["email/confirm",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"coverage.html":{}}}],["emailconfirmed",{"_index":648,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["emailexists",{"_index":647,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["emailnotfound",{"_index":649,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["empty",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["en",{"_index":1394,"title":{},"body":{"index.html":{}}}],["enable",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enabled",{"_index":525,"title":{},"body":{"modules/CoreModule.html":{}}}],["end",{"_index":1503,"title":{},"body":{"index.html":{}}}],["english",{"_index":920,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["enim",{"_index":687,"title":{},"body":{"components/HomeComponent.html":{}}}],["enter",{"_index":628,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["enum",{"_index":28,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ForogtPasswordDto.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{}}}],["enumerations",{"_index":1385,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1313,"title":{},"body":{"changelog.html":{}}}],["environment",{"_index":70,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":240,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/LayoutSettingsComponent.html":{}}}],["environment.apiurl}/${src",{"_index":80,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["environment.apiurl}/accounts/${account.id}/avatar",{"_index":1292,"title":{},"body":{"injectables/UserService.html":{}}}],["environment.apiurl}/auth/forgot",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apiurl}/auth/resend",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.apiurl}/auth/reset",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["environment.production",{"_index":526,"title":{},"body":{"modules/CoreModule.html":{},"injectables/LogService.html":{}}}],["environment.version",{"_index":550,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["environments/environment",{"_index":71,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"injectables/UserService.html":{}}}],["err",{"_index":418,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["err.error",{"_index":727,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["err.message",{"_index":724,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["err.status",{"_index":749,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["err?.error?.message",{"_index":730,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error",{"_index":764,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"injectables/LogService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('email",{"_index":1060,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["error('invalid",{"_index":1054,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["error(autherror.emailconfirmed",{"_index":1065,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["error(autherror.invalidtoken",{"_index":1067,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["error(message",{"_index":980,"title":{},"body":{"injectables/LogService.html":{}}}],["error(messagetoenduser",{"_index":734,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error).message",{"_index":899,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{}}}],["error)?.message",{"_index":419,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["error.interceptor",{"_index":511,"title":{},"body":{"modules/CoreModule.html":{}}}],["error.interceptor.ts",{"_index":706,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{}}}],["error.interceptor.ts:16",{"_index":708,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error.interceptor.ts:19",{"_index":712,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["error_outline",{"_index":428,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["errorevent",{"_index":729,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["errorhappens",{"_index":994,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["errormessage",{"_index":226,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["esse",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["establish",{"_index":1566,"title":{},"body":{"index.html":{}}}],["event",{"_index":867,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["event.preventdefault",{"_index":903,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["event.target",{"_index":905,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["eventemitter",{"_index":996,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["everything",{"_index":441,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"index.html":{}}}],["example",{"_index":37,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"index.html":{}}}],["exists",{"_index":637,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["exit_to_app",{"_index":912,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["experimental",{"_index":1539,"title":{},"body":{"index.html":{}}}],["expired",{"_index":438,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["explorer",{"_index":1600,"title":{},"body":{"index.html":{}}}],["export",{"_index":27,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["expressions",{"_index":78,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["extends",{"_index":1025,"title":{},"body":{"interfaces/MockUser.html":{}}}],["ey",{"_index":1058,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":582,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["fail",{"_index":1522,"title":{},"body":{"index.html":{}}}],["fake",{"_index":1027,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":380,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{},"miscellaneous/variables.html":{}}}],["feat",{"_index":1565,"title":{},"body":{"index.html":{}}}],["features",{"_index":1310,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["feel",{"_index":1544,"title":{},"body":{"index.html":{}}}],["few",{"_index":640,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{}}}],["field",{"_index":632,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["file(s",{"_index":1587,"title":{},"body":{"index.html":{}}}],["files",{"_index":1421,"title":{},"body":{"index.html":{}}}],["fill",{"_index":631,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["finalize",{"_index":388,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["firebase",{"_index":1316,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["firebase.json",{"_index":1632,"title":{},"body":{"index.html":{}}}],["firebaserc",{"_index":1634,"title":{},"body":{"index.html":{}}}],["fired",{"_index":1329,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":1113,"title":{},"body":{"components/RegisterFormComponent.html":{},"index.html":{}}}],["firstname",{"_index":13,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["fit",{"_index":846,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["fix",{"_index":1564,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":1325,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flex",{"_index":448,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["flow",{"_index":1494,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1415,"title":{},"body":{"index.html":{}}}],["follow",{"_index":473,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"index.html":{}}}],["following",{"_index":1559,"title":{},"body":{"index.html":{}}}],["font",{"_index":453,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/LayoutNavComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["footer",{"_index":804,"title":{},"body":{"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{}}}],["footer'},{'name",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["footer.component",{"_index":515,"title":{},"body":{"modules/CoreModule.html":{}}}],["footer.component.html",{"_index":812,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer.component.scss",{"_index":811,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer.component.ts",{"_index":810,"title":{},"body":{"components/LayoutFooterComponent.html":{},"coverage.html":{}}}],["footer.component.ts:15",{"_index":813,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer.component.ts:16",{"_index":814,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer.component.ts:18",{"_index":815,"title":{},"body":{"components/LayoutFooterComponent.html":{}}}],["footer/layout",{"_index":514,"title":{},"body":{"modules/CoreModule.html":{},"components/LayoutFooterComponent.html":{},"coverage.html":{}}}],["forbidden",{"_index":751,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["force",{"_index":1453,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forgotpassword",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword$(email",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpassword$(this.f.email?.value",{"_index":612,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordcomponent",{"_index":110,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpassworddialogcomponent",{"_index":113,"title":{"components/ForgotPasswordDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpasswordfortest",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":635,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form'},{'name",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form.component",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{}}}],["form.component.html",{"_index":992,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.scss",{"_index":991,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts",{"_index":990,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:102",{"_index":1001,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:130",{"_index":1092,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:30",{"_index":997,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:31",{"_index":1006,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":1008,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:33",{"_index":1009,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":1005,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:35",{"_index":1007,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:36",{"_index":1097,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:37",{"_index":1010,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:38",{"_index":1096,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:39",{"_index":995,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:41",{"_index":1098,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:43",{"_index":1090,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:50",{"_index":1003,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:52",{"_index":1002,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:55",{"_index":1093,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:57",{"_index":1004,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:62",{"_index":1095,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:79",{"_index":999,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:91",{"_index":1094,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:97",{"_index":1091,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form/login",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/register",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":1518,"title":{},"body":{"index.html":{}}}],["formbuilder",{"_index":584,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formdata",{"_index":892,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/UserService.html":{}}}],["formdata.append('file",{"_index":893,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["formgroup",{"_index":576,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formgroup.controls.email.seterrors",{"_index":1112,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["formgroup.setvalue(previousvalue",{"_index":1017,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formsmodule",{"_index":1161,"title":{},"body":{"modules/SharedModule.html":{}}}],["forogtpassworddto",{"_index":642,"title":{"interfaces/ForogtPasswordDto.html":{}},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{}}}],["found",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/NotFoundComponent.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["found'},{'name",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["found.component",{"_index":1086,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found.component.html",{"_index":1078,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1077,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1076,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:10",{"_index":1079,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.module').then((m",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["found.module.ts",{"_index":1085,"title":{},"body":{"modules/NotFoundModule.html":{}}}],["found/not",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"coverage.html":{}}}],["fr",{"_index":919,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["français",{"_index":921,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["french",{"_index":1438,"title":{},"body":{"index.html":{}}}],["full",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["fully",{"_index":1440,"title":{},"body":{"index.html":{}}}],["function",{"_index":1363,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1389,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1628,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1416,"title":{},"body":{"index.html":{}}}],["generates",{"_index":1489,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1419,"title":{},"body":{"index.html":{}}}],["get(`${environment.apiurl}/auth/confirm",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["getf",{"_index":601,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["getfilefromevent",{"_index":856,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["getfilefromevent($event",{"_index":866,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["getiteminstorage",{"_index":958,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getiteminstorage(key",{"_index":962,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getting",{"_index":1294,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gettitletext",{"_index":189,"title":{},"body":{"classes/AppPage.html":{}}}],["ghost",{"_index":30,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"miscellaneous/enumerations.html":{}}}],["git",{"_index":1400,"title":{},"body":{"index.html":{}}}],["github",{"_index":1411,"title":{},"body":{"index.html":{}}}],["go",{"_index":1425,"title":{},"body":{"index.html":{}}}],["good",{"_index":1424,"title":{},"body":{"index.html":{}}}],["google",{"_index":1460,"title":{},"body":{"index.html":{}}}],["group",{"_index":446,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["guard",{"_index":476,"title":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["guards",{"_index":477,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["guide",{"_index":1462,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1305,"title":{},"body":{"changelog.html":{}}}],["h1",{"_index":659,"title":{},"body":{"components/HomeComponent.html":{}}}],["h2",{"_index":661,"title":{},"body":{"components/HomeComponent.html":{}}}],["h3",{"_index":662,"title":{},"body":{"components/HomeComponent.html":{}}}],["h4",{"_index":663,"title":{},"body":{"components/HomeComponent.html":{}}}],["h5",{"_index":664,"title":{},"body":{"components/HomeComponent.html":{}}}],["height",{"_index":456,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["help",{"_index":1609,"title":{},"body":{"index.html":{}}}],["here",{"_index":1429,"title":{},"body":{"index.html":{}}}],["history",{"_index":1401,"title":{},"body":{"index.html":{}}}],["home",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Destination.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{}}}],["home'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["home.component",{"_index":702,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":657,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":656,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":115,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":697,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["hooks",{"_index":1408,"title":{},"body":{"index.html":{}}}],["horizontalposition",{"_index":1198,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["host",{"_index":36,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["hostbinding",{"_index":770,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["hostbinding('src",{"_index":772,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["hostlistener",{"_index":771,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["hostlistener('error",{"_index":774,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["hostlisteners",{"_index":763,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["htmlinputelement",{"_index":906,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["http",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["http_interceptors",{"_index":502,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpclient",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":501,"title":{},"body":{"modules/CoreModule.html":{}}}],["httperrorinterceptor",{"_index":498,"title":{"interceptors/HttpErrorInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["httperrorresponse",{"_index":713,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["httpevent",{"_index":714,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["httphandler",{"_index":711,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["httpinterceptor",{"_index":715,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["httpjwtinterceptor",{"_index":499,"title":{"interceptors/HttpJwtInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/HttpJwtInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["httprequest",{"_index":710,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["https://localhost/api",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i18n",{"_index":1630,"title":{},"body":{"index.html":{}}}],["i18nsupport",{"_index":1596,"title":{},"body":{"index.html":{}}}],["icon",{"_index":452,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["icons",{"_index":1413,"title":{},"body":{"index.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1016,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["idfromurl",{"_index":1140,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["image",{"_index":757,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["imagedefaultdirective",{"_index":138,"title":{"directives/ImageDefaultDirective.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["img",{"_index":934,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["img[default",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["implements",{"_index":73,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["implicit",{"_index":720,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["import",{"_index":67,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["import('./article/article.module').then((m",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["import('./auth/auth.module').then((m",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["import('./home/home.module').then((m",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["import('./not",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["important",{"_index":943,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["imports",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{}}}],["inbox",{"_index":431,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{}}}],["include",{"_index":936,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["increment",{"_index":1561,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["info(subject",{"_index":982,"title":{},"body":{"injectables/LogService.html":{}}}],["init",{"_index":1227,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["initial",{"_index":1336,"title":{},"body":{"changelog.html":{}}}],["inject",{"_index":882,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["inject(locale_id",{"_index":885,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["injectable",{"_index":277,"title":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.email",{"_index":1064,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.email.tolowercase",{"_index":1050,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.firstname",{"_index":1062,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.lastname",{"_index":1063,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["input.password",{"_index":1056,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["inputs",{"_index":762,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["insights",{"_index":1619,"title":{},"body":{"index.html":{}}}],["install",{"_index":1435,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1449,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1466,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":728,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["instead",{"_index":1471,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":630,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["intercept",{"_index":707,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["intercept(request",{"_index":709,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["interceptor",{"_index":703,"title":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["interceptors",{"_index":704,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["interceptors/http",{"_index":510,"title":{},"body":{"modules/CoreModule.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"interfaces/Destination.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{}},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"interfaces/Destination.html":{},"interfaces/ForogtPasswordDto.html":{},"components/LayoutComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"interfaces/Destination.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"overview.html":{}}}],["internationalization",{"_index":1576,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":645,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["invalidemail",{"_index":644,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["invalidpassword",{"_index":646,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["invalidtoken",{"_index":650,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["ipsa",{"_index":677,"title":{},"body":{"components/HomeComponent.html":{}}}],["ipsum",{"_index":666,"title":{},"body":{"components/HomeComponent.html":{}}}],["isaccountalreadyconfirmed",{"_index":360,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["isconfirmed",{"_index":15,"title":{},"body":{"interfaces/Account.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["isdarktheme",{"_index":1235,"title":{},"body":{"injectables/ThemeService.html":{}}}],["isdarkthemetoggled",{"_index":855,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["isdarktoggled",{"_index":1223,"title":{},"body":{"injectables/ThemeService.html":{}}}],["isdarktoggledkey",{"_index":1224,"title":{},"body":{"injectables/ThemeService.html":{}}}],["isdestroyed",{"_index":361,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isemailcorrect",{"_index":1049,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["isformsubmitted",{"_index":1126,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isloading",{"_index":362,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["isparamscorrect",{"_index":1073,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["ispasswordcorrect",{"_index":1055,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["ispasswordhidden",{"_index":577,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isprocessed",{"_index":1072,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["isprocessing",{"_index":363,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["isresetpasswordfailed",{"_index":1127,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["isresetpasswordsucceed",{"_index":1128,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["issourcefilled",{"_index":776,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["issuccess",{"_index":1070,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1327,"title":{},"body":{"changelog.html":{}}}],["isunknownuserallowedtonavigate",{"_index":551,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["isusablewithoutapi",{"_index":227,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/LayoutSettingsComponent.html":{}}}],["john",{"_index":1034,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["johndoe.test.token",{"_index":1046,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["johndoe@email.com",{"_index":1032,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["johndoepass123",{"_index":1033,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["json.parse(stringvalue",{"_index":970,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":973,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["justify",{"_index":449,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["jwt",{"_index":32,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ForogtPasswordDto.html":{},"interceptors/HttpJwtInterceptor.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["jwt.interceptor",{"_index":512,"title":{},"body":{"modules/CoreModule.html":{}}}],["jwt.interceptor.ts",{"_index":735,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"coverage.html":{}}}],["jwt.interceptor.ts:16",{"_index":736,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["jwt.interceptor.ts:22",{"_index":737,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["jwtkey",{"_index":1266,"title":{},"body":{"injectables/UserService.html":{}}}],["key",{"_index":607,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["keyword",{"_index":1243,"title":{},"body":{"injectables/ThemeService.html":{}}}],["kicks",{"_index":1549,"title":{},"body":{"index.html":{}}}],["know",{"_index":1463,"title":{},"body":{"index.html":{}}}],["known",{"_index":1548,"title":{},"body":{"index.html":{}}}],["landscape",{"_index":766,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["language",{"_index":1436,"title":{},"body":{"index.html":{}}}],["languages",{"_index":1578,"title":{},"body":{"index.html":{}}}],["large",{"_index":938,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["last",{"_index":1117,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["lastname",{"_index":16,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["launch",{"_index":1458,"title":{},"body":{"index.html":{}}}],["layout",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["layout'},{'name",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["layout.component.html",{"_index":540,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":541,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["layout/layout",{"_index":513,"title":{},"body":{"modules/CoreModule.html":{}}}],["layout/layout.component",{"_index":522,"title":{},"body":{"modules/CoreModule.html":{}}}],["layoutcomponent",{"_index":117,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutfootercomponent",{"_index":119,"title":{"components/LayoutFooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutnavcomponent",{"_index":122,"title":{"components/LayoutNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutsettingscomponent",{"_index":124,"title":{"components/LayoutSettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutsidenavcomponent",{"_index":126,"title":{"components/LayoutSidenavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legacy",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["legend",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["lib",{"_index":1597,"title":{},"body":{"index.html":{}}}],["light",{"_index":914,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{}}}],["line",{"_index":76,"title":{},"body":{"pipes/ApiPathPipe.html":{},"interceptors/HttpErrorInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{}}}],["link",{"_index":433,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["lint",{"_index":1517,"title":{},"body":{"index.html":{}}}],["linux",{"_index":1443,"title":{},"body":{"index.html":{}}}],["literal",{"_index":825,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["ln",{"_index":1477,"title":{},"body":{"index.html":{}}}],["loadchildren",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["loaded",{"_index":759,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["local",{"_index":1241,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["locale",{"_index":1584,"title":{},"body":{"index.html":{}}}],["locale_id",{"_index":883,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["localeid",{"_index":864,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["localize`:@@articles:articles",{"_index":557,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["localize`:@@home:home",{"_index":556,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["localized",{"_index":1583,"title":{},"body":{"index.html":{}}}],["localstorage.getitem(key",{"_index":969,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":976,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":972,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":955,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/LocalStorageService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loggedinuser",{"_index":31,"title":{"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{}},"body":{"interfaces/Account.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["loggedinuser).pipe(delay(mockdelay",{"_index":1059,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["loggedinuser.account",{"_index":417,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["loggedinuser.jwt",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["login$(input",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":297,"title":{"interfaces/LoginDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginformcomponent",{"_index":128,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginfortest",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginfortest$(input).pipe",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["logservice",{"_index":481,"title":{"injectables/LogService.html":{}},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["logsubject",{"_index":486,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"miscellaneous/enumerations.html":{}}}],["logsubject.intercept",{"_index":745,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["logsubject.store",{"_index":971,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["lorem",{"_index":665,"title":{},"body":{"components/HomeComponent.html":{}}}],["lowercaseemail",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["m.articlemodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["m.authmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["m.homemodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["m.notfoundmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["made",{"_index":1499,"title":{},"body":{"index.html":{}}}],["mailbox",{"_index":470,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["major",{"_index":1550,"title":{},"body":{"index.html":{}}}],["make",{"_index":1396,"title":{},"body":{"index.html":{}}}],["manually",{"_index":1511,"title":{},"body":{"index.html":{}}}],["map",{"_index":485,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"index.html":{}}}],["map((account",{"_index":489,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["mat",{"_index":942,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/SnackbarService.html":{}}}],["matbuttonmodule",{"_index":1163,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":1165,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1122,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["match.validator",{"_index":1102,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["match.validator.ts",{"_index":1362,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["matching",{"_index":44,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matchingcontrolname",{"_index":1392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matdialog",{"_index":370,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{}}}],["matdialogmodule",{"_index":1167,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matdialogref",{"_index":463,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["matdividermodule",{"_index":1168,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["materialmodules",{"_index":1196,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":1170,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":1172,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":1174,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":1176,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":1178,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressbarmodule",{"_index":1180,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matprogressspinnermodule",{"_index":1183,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matsidenav",{"_index":827,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["matsidenavmodule",{"_index":1185,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbar",{"_index":1202,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["matsnackbarhorizontalposition",{"_index":1209,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["matsnackbarmodule",{"_index":1186,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["matsnackbarref",{"_index":1208,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["matsnackbarverticalposition",{"_index":1212,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["mattabsmodule",{"_index":1188,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["mattooltipmodule",{"_index":1190,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1155,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["measure",{"_index":1612,"title":{},"body":{"index.html":{}}}],["menu",{"_index":832,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["merge",{"_index":1593,"title":{},"body":{"index.html":{}}}],["message",{"_index":48,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/LogService.html":{},"injectables/SnackbarService.html":{},"index.html":{}}}],["messages.fr.xlf",{"_index":1594,"title":{},"body":{"index.html":{}}}],["messages.xlf",{"_index":1585,"title":{},"body":{"index.html":{}}}],["messages.{fr,others}.xlf",{"_index":1586,"title":{},"body":{"index.html":{}}}],["messagetodev",{"_index":723,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["messagetoenduser",{"_index":726,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["meta",{"_index":535,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["metadata",{"_index":55,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["metaservice",{"_index":552,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["methods",{"_index":58,"title":{},"body":{"pipes/ApiPathPipe.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["metrics",{"_index":1618,"title":{},"body":{"index.html":{}}}],["miaborde",{"_index":1410,"title":{},"body":{"index.html":{}}}],["min",{"_index":807,"title":{},"body":{"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["minified",{"_index":1604,"title":{},"body":{"index.html":{}}}],["minima",{"_index":681,"title":{},"body":{"components/HomeComponent.html":{}}}],["minor",{"_index":1541,"title":{},"body":{"index.html":{}}}],["minutes",{"_index":641,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{}}}],["miscellaneous",{"_index":1384,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":928,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["mockdelay",{"_index":1047,"title":{},"body":{"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocked",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockuser",{"_index":228,"title":{"interfaces/MockUser.html":{}},"body":{"components/AuthComponent.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser.email",{"_index":1051,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["mockuser.id",{"_index":1074,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["mockuser.password",{"_index":1057,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["mockuser?.email",{"_index":250,"title":{},"body":{"components/AuthComponent.html":{}}}],["mockuser?.password",{"_index":251,"title":{},"body":{"components/AuthComponent.html":{}}}],["mode",{"_index":1433,"title":{},"body":{"index.html":{}}}],["models/error.model",{"_index":718,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["models/user.model",{"_index":537,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/UserService.html":{}}}],["modern",{"_index":1616,"title":{},"body":{"index.html":{}}}],["module",{"_index":141,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":143,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1543,"title":{},"body":{"index.html":{}}}],["monitoring",{"_index":1599,"title":{},"body":{"index.html":{}}}],["more",{"_index":1464,"title":{},"body":{"index.html":{}}}],["move",{"_index":1399,"title":{},"body":{"index.html":{}}}],["multi",{"_index":529,"title":{},"body":{"modules/CoreModule.html":{}}}],["multiple",{"_index":1577,"title":{},"body":{"index.html":{}}}],["mustmatchvalidator",{"_index":1100,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mustmatchvalidator('password",{"_index":1110,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mustmatchvalidator(controlname",{"_index":1391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mustnotberejected",{"_index":625,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mustnotberejectedvalidator",{"_index":579,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["name",{"_index":56,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["native",{"_index":1321,"title":{},"body":{"changelog.html":{}}}],["natus",{"_index":688,"title":{},"body":{"components/HomeComponent.html":{}}}],["nav",{"_index":819,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav'},{'name",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["nav.component",{"_index":517,"title":{},"body":{"modules/CoreModule.html":{}}}],["nav.component.html",{"_index":821,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.scss",{"_index":820,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts",{"_index":818,"title":{},"body":{"components/LayoutNavComponent.html":{},"coverage.html":{}}}],["nav.component.ts:18",{"_index":828,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:19",{"_index":824,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:20",{"_index":823,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:21",{"_index":826,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:23",{"_index":829,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav.component.ts:25",{"_index":830,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["nav/layout",{"_index":516,"title":{},"body":{"modules/CoreModule.html":{},"components/LayoutNavComponent.html":{},"coverage.html":{}}}],["navigateto",{"_index":190,"title":{},"body":{"classes/AppPage.html":{}}}],["need",{"_index":1434,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1627,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1487,"title":{},"body":{"index.html":{}}}],["new",{"_index":382,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":654,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{}}}],["newpasswordmustbedifferentfromcurrent",{"_index":651,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{}}}],["newrequest",{"_index":739,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["next",{"_index":75,"title":{},"body":{"pipes/ApiPathPipe.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"injectables/ThemeService.html":{}}}],["next.handle(newrequest).pipe",{"_index":747,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":719,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["ng",{"_index":797,"title":{},"body":{"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["ngafterviewchecked",{"_index":560,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["nginx",{"_index":1579,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{}}}],["ngondestroy",{"_index":364,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngoninit",{"_index":207,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngx",{"_index":1595,"title":{},"body":{"index.html":{}}}],["nights_stay",{"_index":916,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["node.js",{"_index":1431,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":1514,"title":{},"body":{"index.html":{}}}],["normal",{"_index":850,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["notable",{"_index":1297,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":1531,"title":{},"body":{"index.html":{}}}],["notfoundcomponent",{"_index":131,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notfoundmodule",{"_index":1082,"title":{"modules/NotFoundModule.html":{}},"body":{"modules/NotFoundModule.html":{},"modules.html":{},"overview.html":{}}}],["notuserguard",{"_index":258,"title":{"guards/NotUserGuard.html":{}},"body":{"modules/AuthModule.html":{},"guards/NotUserGuard.html":{},"coverage.html":{}}}],["now",{"_index":424,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["npm",{"_index":1405,"title":{},"body":{"index.html":{}}}],["null",{"_index":618,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{}}}],["number",{"_index":24,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":845,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"miscellaneous/variables.html":{}}}],["obligated",{"_index":1510,"title":{},"body":{"index.html":{}}}],["observable",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["occurrence",{"_index":1409,"title":{},"body":{"index.html":{}}}],["of(undefined",{"_index":1293,"title":{},"body":{"injectables/UserService.html":{}}}],["of(undefined).pipe",{"_index":1052,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["ok",{"_index":475,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["old",{"_index":436,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["onclose",{"_index":461,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["onclosedialog",{"_index":857,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{}}}],["ondestroy",{"_index":357,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":437,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["onerror",{"_index":775,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["onerrorhappens",{"_index":229,"title":{},"body":{"components/AuthComponent.html":{}}}],["onerrorhappens(errormessage",{"_index":235,"title":{},"body":{"components/AuthComponent.html":{}}}],["onimportimage",{"_index":858,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["onimportimage($event",{"_index":873,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["oninit",{"_index":202,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["onlogout",{"_index":859,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["onopendialog",{"_index":860,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["onopendialog(templateref",{"_index":876,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["onrequestconfirmemail",{"_index":365,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["onsubmit",{"_index":580,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ontoggledarktheme",{"_index":861,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["open",{"_index":1200,"title":{},"body":{"injectables/SnackbarService.html":{},"index.html":{}}}],["open(message",{"_index":1205,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["open_in_new",{"_index":1150,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/Account.html":{},"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1515,"title":{},"body":{"index.html":{}}}],["out",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"components/LayoutSettingsComponent.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":1011,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["outputs",{"_index":993,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["overview",{"_index":1638,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1371,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":1562,"title":{},"body":{"index.html":{}}}],["padding",{"_index":836,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["paddinginpixels",{"_index":931,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["page",{"_index":1081,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["pages",{"_index":1569,"title":{},"body":{"index.html":{}}}],["palette",{"_index":694,"title":{},"body":{"components/HomeComponent.html":{}}}],["panelclass",{"_index":1220,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["parameters",{"_index":64,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["parseint(idfromurl",{"_index":1143,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["password.component.html",{"_index":575,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":574,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":573,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:104",{"_index":1131,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:133",{"_index":1132,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":597,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":599,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":600,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":596,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":598,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":602,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1138,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:38",{"_index":586,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:39",{"_index":1136,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:40",{"_index":1137,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1139,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:44",{"_index":1130,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":594,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:52",{"_index":593,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:56",{"_index":1134,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:57",{"_index":595,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:62",{"_index":1133,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:67",{"_index":1135,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:79",{"_index":590,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:93",{"_index":592,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/${id}/${token",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["password/${lowercaseemail",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["password/:id/:token",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["password/forgot",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwords",{"_index":1120,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["patch",{"_index":1551,"title":{},"body":{"index.html":{}}}],["path",{"_index":33,"title":{},"body":{"interfaces/Account.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"interfaces/Destination.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{},"interfaces/LoggedInUser-1.html":{},"modules/NotFoundModule.html":{},"interfaces/Upload.html":{},"index.html":{}}}],["path.pipe",{"_index":1195,"title":{},"body":{"modules/SharedModule.html":{}}}],["path.pipe.ts",{"_index":54,"title":{},"body":{"pipes/ApiPathPipe.html":{},"coverage.html":{}}}],["path.pipe.ts:9",{"_index":63,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["pathmatch",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["perferendis",{"_index":685,"title":{},"body":{"components/HomeComponent.html":{}}}],["perform",{"_index":1523,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1617,"title":{},"body":{"index.html":{}}}],["performances",{"_index":1598,"title":{},"body":{"index.html":{}}}],["person",{"_index":909,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["pipe",{"_index":50,"title":{"pipes/ApiPathPipe.html":{}},"body":{"pipes/ApiPathPipe.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(delay(2000",{"_index":1071,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["pipe(delay(mockdelay",{"_index":1069,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["pipe(takeuntil(this.isdestroyed",{"_index":394,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{}}}],["pipe(tap((res",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes",{"_index":52,"title":{},"body":{"pipes/ApiPathPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipes/api",{"_index":1194,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipetransform",{"_index":68,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["please",{"_index":472,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{}}}],["poedit",{"_index":1591,"title":{},"body":{"index.html":{}}}],["port=9222",{"_index":1469,"title":{},"body":{"index.html":{}}}],["post(`${environment.apiurl}/auth/login",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["post(`${environment.apiurl}/auth/register",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["practices",{"_index":1622,"title":{},"body":{"index.html":{}}}],["pre",{"_index":1407,"title":{},"body":{"index.html":{}}}],["prefixed",{"_index":34,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["prerelease",{"_index":1555,"title":{},"body":{"index.html":{}}}],["previous",{"_index":1525,"title":{},"body":{"index.html":{}}}],["previousvalue",{"_index":998,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primary",{"_index":695,"title":{},"body":{"components/HomeComponent.html":{},"injectables/SnackbarService.html":{}}}],["private",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":1568,"title":{},"body":{"index.html":{}}}],["production",{"_index":1482,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":765,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["progressevent",{"_index":731,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["progressive",{"_index":799,"title":{},"body":{"components/LayoutComponent.html":{},"index.html":{}}}],["project",{"_index":1299,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":192,"title":{},"body":{"classes/AppPage.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":195,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":527,"title":{},"body":{"modules/CoreModule.html":{}}}],["provided",{"_index":1506,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["pull",{"_index":1502,"title":{},"body":{"index.html":{}}}],["push",{"_index":1521,"title":{},"body":{"index.html":{}}}],["pwa",{"_index":1417,"title":{},"body":{"index.html":{}}}],["r",{"_index":1422,"title":{},"body":{"index.html":{}}}],["radius",{"_index":843,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["ratione",{"_index":684,"title":{},"body":{"components/HomeComponent.html":{}}}],["reactiveformsmodule",{"_index":1162,"title":{},"body":{"modules/SharedModule.html":{}}}],["readonly",{"_index":244,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["ready",{"_index":442,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"changelog.html":{}}}],["receive",{"_index":629,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["recovery",{"_index":639,"title":{},"body":{"components/ForgotPasswordDialogComponent.html":{}}}],["redirects",{"_index":1580,"title":{},"body":{"index.html":{}}}],["redirectto",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["register",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["register$(input",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["registerdto",{"_index":301,"title":{"interfaces/RegisterDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerformcomponent",{"_index":133,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registerfortest",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerfortest$(input).pipe",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["registration",{"_index":474,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{}}}],["related",{"_index":1326,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["relativelinkresolution",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["release",{"_index":1527,"title":{},"body":{"index.html":{}}}],["release:prerelease",{"_index":1556,"title":{},"body":{"index.html":{}}}],["rem",{"_index":679,"title":{},"body":{"components/HomeComponent.html":{}}}],["remaining",{"_index":839,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["remote",{"_index":1467,"title":{},"body":{"index.html":{}}}],["remove",{"_index":977,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeclass",{"_index":1257,"title":{},"body":{"injectables/ThemeService.html":{}}}],["removeiteminstorage",{"_index":959,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeiteminstorage(key",{"_index":964,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["rename",{"_index":1633,"title":{},"body":{"index.html":{}}}],["renderer",{"_index":1225,"title":{},"body":{"injectables/ThemeService.html":{}}}],["renderer2",{"_index":1239,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory",{"_index":1230,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory2",{"_index":1231,"title":{},"body":{"injectables/ThemeService.html":{}}}],["replace",{"_index":755,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"index.html":{}}}],["replaysubject",{"_index":1281,"title":{},"body":{"injectables/UserService.html":{}}}],["replaysubject(1",{"_index":1278,"title":{},"body":{"injectables/UserService.html":{}}}],["reponses",{"_index":1331,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":434,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["request.clone",{"_index":740,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["require",{"_index":1368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":559,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LoginFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["res.jwt",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["resend",{"_index":439,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["resendconfirmationemail",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendconfirmationemail$(email",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["resendconfirmationemailfortest",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"modules/CoreModule.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"modules/SharedModule.html":{},"index.html":{},"overview.html":{}}}],["resetpassword",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword$(input",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":135,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resetpassworddto",{"_index":306,"title":{"interfaces/ResetPasswordDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfortest",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfortest$(input",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["resized",{"_index":39,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["respect",{"_index":1505,"title":{},"body":{"index.html":{}}}],["respects",{"_index":1495,"title":{},"body":{"index.html":{}}}],["result",{"_index":43,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":45,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retry",{"_index":1524,"title":{},"body":{"index.html":{}}}],["retrycreate",{"_index":1526,"title":{},"body":{"index.html":{}}}],["return",{"_index":79,"title":{},"body":{"pipes/ApiPathPipe.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":66,"title":{},"body":{"pipes/ApiPathPipe.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rf",{"_index":1403,"title":{},"body":{"index.html":{}}}],["rm",{"_index":1402,"title":{},"body":{"index.html":{}}}],["role",{"_index":26,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/enumerations.html":{}}}],["role.ghost",{"_index":1044,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":17,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"guards/NotUserGuard.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"index.html":{}}}],["root'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["round",{"_index":929,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["router",{"_index":371,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{}}}],["routermodule.forchild(routes",{"_index":222,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{}}}],["routermodule.forroot(routes",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{}}}],["run",{"_index":1404,"title":{},"body":{"index.html":{}}}],["running",{"_index":1029,"title":{},"body":{"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["s",{"_index":1478,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":1251,"title":{},"body":{"injectables/ThemeService.html":{}}}],["scripts",{"_index":1519,"title":{},"body":{"index.html":{}}}],["sed",{"_index":686,"title":{},"body":{"components/HomeComponent.html":{}}}],["see",{"_index":1301,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["semantic",{"_index":1528,"title":{},"body":{"index.html":{}}}],["send",{"_index":440,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sent",{"_index":471,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{}}}],["server",{"_index":35,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"index.html":{}}}],["services/log.service",{"_index":487,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["services/snackbar.service",{"_index":884,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["services/theme.service",{"_index":539,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["services/user.service",{"_index":488,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["serviceworkermodule",{"_index":507,"title":{},"body":{"modules/CoreModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":523,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":975,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["setheaders",{"_index":741,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{}}}],["setiteminstorage",{"_index":960,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setiteminstorage(key",{"_index":966,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setmeta",{"_index":563,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["settimeout",{"_index":247,"title":{},"body":{"components/AuthComponent.html":{}}}],["settings",{"_index":852,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["settings'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["settings.component",{"_index":519,"title":{},"body":{"modules/CoreModule.html":{}}}],["settings.component.html",{"_index":854,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.scss",{"_index":853,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts",{"_index":851,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:29",{"_index":865,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:30",{"_index":880,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:31",{"_index":881,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:32",{"_index":863,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:43",{"_index":871,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:47",{"_index":870,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:52",{"_index":874,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:75",{"_index":875,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:79",{"_index":878,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:83",{"_index":872,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:87",{"_index":879,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings.component.ts:92",{"_index":869,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["settings/layout",{"_index":518,"title":{},"body":{"modules/CoreModule.html":{},"components/LayoutSettingsComponent.html":{},"coverage.html":{}}}],["shared/shared.module",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{}}}],["shared/validators/must",{"_index":1101,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sharedmodule",{"_index":256,"title":{"modules/SharedModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["short",{"_index":1450,"title":{},"body":{"index.html":{}}}],["shows",{"_index":1606,"title":{},"body":{"index.html":{}}}],["sidenav",{"_index":822,"title":{},"body":{"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sidenav.component",{"_index":521,"title":{},"body":{"modules/CoreModule.html":{}}}],["sidenav.component.html",{"_index":946,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":945,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts",{"_index":944,"title":{},"body":{"components/LayoutSidenavComponent.html":{},"coverage.html":{}}}],["sidenav.component.ts:18",{"_index":949,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts:19",{"_index":947,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts:20",{"_index":948,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts:22",{"_index":950,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav.component.ts:24",{"_index":951,"title":{},"body":{"components/LayoutSidenavComponent.html":{}}}],["sidenav/layout",{"_index":520,"title":{},"body":{"modules/CoreModule.html":{},"components/LayoutSidenavComponent.html":{},"coverage.html":{}}}],["sign",{"_index":634,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sint",{"_index":682,"title":{},"body":{"components/HomeComponent.html":{}}}],["sit",{"_index":668,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":454,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/LayoutNavComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sizeinpixels",{"_index":932,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["snackbar",{"_index":1204,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["snackbarservice",{"_index":585,"title":{"injectables/SnackbarService.html":{}},"body":{"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"coverage.html":{}}}],["software",{"_index":1590,"title":{},"body":{"index.html":{}}}],["soluta",{"_index":692,"title":{},"body":{"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"components/ArticleComponent.html":{},"modules/ArticleModule.html":{},"components/AuthComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"modules/SharedModule.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"index.html":{}}}],["space",{"_index":450,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["span')).gettext",{"_index":199,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specification",{"_index":1530,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":1184,"title":{},"body":{"modules/SharedModule.html":{}}}],["src",{"_index":65,"title":{},"body":{"pipes/ApiPathPipe.html":{},"directives/ImageDefaultDirective.html":{}}}],["src/.../auth.mock.ts",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.model.ts",{"_index":1386,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.service.ts",{"_index":1387,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../must",{"_index":1390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../shared.module.ts",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":1388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/article/article.component.ts",{"_index":201,"title":{},"body":{"components/ArticleComponent.html":{},"coverage.html":{}}}],["src/app/article/article.component.ts:10",{"_index":208,"title":{},"body":{"components/ArticleComponent.html":{}}}],["src/app/article/article.module.ts",{"_index":214,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":223,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:19",{"_index":239,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:20",{"_index":241,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":233,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:25",{"_index":234,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:27",{"_index":236,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.mock.ts",{"_index":1024,"title":{},"body":{"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/auth/auth.model.ts",{"_index":643,"title":{},"body":{"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/RegisterDto.html":{},"interfaces/ResetPasswordDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/auth/auth.module.ts",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/auth/auth.service.ts",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth/auth.service.ts:101",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:28",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:35",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:47",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:59",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:69",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/auth.service.ts:89",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth/confirm",{"_index":355,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"coverage.html":{}}}],["src/app/auth/forgot",{"_index":572,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"coverage.html":{}}}],["src/app/auth/login",{"_index":989,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/register",{"_index":1089,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/auth/reset",{"_index":1124,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/core/core.module.ts",{"_index":500,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/guards/confirmed",{"_index":478,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/not",{"_index":1087,"title":{},"body":{"guards/NotUserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts",{"_index":1259,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/user.guard.ts:12",{"_index":1260,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/guards/user.guard.ts:19",{"_index":1261,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/core/interceptors/http",{"_index":705,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"coverage.html":{}}}],["src/app/core/layout/layout",{"_index":809,"title":{},"body":{"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/layout.component.ts",{"_index":531,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/core/layout/layout.component.ts:33",{"_index":793,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:34",{"_index":791,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:38",{"_index":792,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:39",{"_index":789,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:40",{"_index":795,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:41",{"_index":788,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:42",{"_index":794,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:43",{"_index":796,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:44",{"_index":782,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:67",{"_index":785,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:76",{"_index":783,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:80",{"_index":784,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:85",{"_index":787,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/layout/layout.component.ts:89",{"_index":786,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/core/models/error.model.ts",{"_index":47,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":6,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/local",{"_index":956,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/core/services/log.service.ts",{"_index":978,"title":{},"body":{"injectables/LogService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/core/services/log.service.ts:16",{"_index":984,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/services/log.service.ts:18",{"_index":983,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/services/log.service.ts:24",{"_index":981,"title":{},"body":{"injectables/LogService.html":{}}}],["src/app/core/services/snackbar.service.ts",{"_index":1197,"title":{},"body":{"injectables/SnackbarService.html":{},"coverage.html":{}}}],["src/app/core/services/snackbar.service.ts:14",{"_index":1211,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/core/services/snackbar.service.ts:15",{"_index":1203,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/core/services/snackbar.service.ts:19",{"_index":1207,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["src/app/core/services/theme.service.ts",{"_index":1222,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/services/theme.service.ts:10",{"_index":1232,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:20",{"_index":1236,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:33",{"_index":1237,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:42",{"_index":1234,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:8",{"_index":1240,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme.service.ts:9",{"_index":1238,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/user.service.ts",{"_index":1263,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/user.service.ts:16",{"_index":1277,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:17",{"_index":1280,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:18",{"_index":1279,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:19",{"_index":1276,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:20",{"_index":1270,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:37",{"_index":1273,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:49",{"_index":1271,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/user.service.ts:57",{"_index":1274,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/home/home.component.ts",{"_index":655,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:10",{"_index":658,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.ts",{"_index":701,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/not",{"_index":1075,"title":{},"body":{"components/NotFoundComponent.html":{},"modules/NotFoundModule.html":{},"coverage.html":{}}}],["src/app/shared/directives/image",{"_index":753,"title":{},"body":{"directives/ImageDefaultDirective.html":{},"coverage.html":{}}}],["src/app/shared/pipes/api",{"_index":53,"title":{},"body":{"pipes/ApiPathPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module.ts",{"_index":1160,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/validators/must",{"_index":1361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/environments/environment.prod.ts",{"_index":1364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":1553,"title":{},"body":{"index.html":{}}}],["stack",{"_index":1427,"title":{},"body":{"index.html":{}}}],["staged",{"_index":1574,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1302,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standardized",{"_index":1504,"title":{},"body":{"index.html":{}}}],["start",{"_index":1437,"title":{},"body":{"index.html":{}}}],["start:frcontainerized",{"_index":1439,"title":{},"body":{"index.html":{}}}],["started",{"_index":1295,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starter",{"_index":801,"title":{},"body":{"components/LayoutComponent.html":{},"index.html":{}}}],["starting",{"_index":1535,"title":{},"body":{"index.html":{}}}],["stash",{"_index":1532,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1490,"title":{},"body":{"index.html":{}}}],["status",{"_index":49,"title":{},"body":{"interfaces/ApiError.html":{},"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sticky",{"_index":803,"title":{},"body":{"components/LayoutComponent.html":{}}}],["storage.service",{"_index":1242,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["storage.service.ts",{"_index":957,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":963,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:22",{"_index":967,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:27",{"_index":965,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:8",{"_index":961,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["store",{"_index":985,"title":{},"body":{"injectables/LogService.html":{},"miscellaneous/enumerations.html":{}}}],["strict",{"_index":77,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stringvalue",{"_index":968,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["studio",{"_index":1455,"title":{},"body":{"index.html":{}}}],["styles",{"_index":200,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["styleurls",{"_index":203,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subject",{"_index":383,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["submit",{"_index":588,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe",{"_index":415,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((account",{"_index":395,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["subscribe((afterclosed",{"_index":411,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["subscription",{"_index":376,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sudo",{"_index":1476,"title":{},"body":{"index.html":{}}}],["support",{"_index":1635,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":922,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["svg",{"_index":1636,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/MockUser.html":{},"components/RegisterFormComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["switchmap((account",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"injectables/UserService.html":{}}}],["switchmap((res",{"_index":408,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{}}}],["table",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1567,"title":{},"body":{"index.html":{}}}],["tags",{"_index":1557,"title":{},"body":{"index.html":{}}}],["take",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["take(1",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["taken",{"_index":1118,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["takeuntil",{"_index":389,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["takeuntil(this.isdestroyed",{"_index":410,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["tap",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/HttpJwtInterceptor.html":{}}}],["tap((loggedinuser",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap((res",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["target",{"_index":904,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["target?.files",{"_index":907,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["team",{"_index":1500,"title":{},"body":{"index.html":{}}}],["template",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["templateref",{"_index":877,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["templateurl",{"_index":205,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["test",{"_index":249,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["tested",{"_index":1512,"title":{},"body":{"index.html":{}}}],["textcontent",{"_index":569,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["textonlysnackbar",{"_index":1214,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["theme",{"_index":915,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{}}}],["themefromstorage",{"_index":1246,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":538,"title":{"injectables/ThemeService.html":{}},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["this.account",{"_index":416,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{}}}],["this.account$.pipe",{"_index":1291,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountid",{"_index":1142,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.accountkey",{"_index":1282,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountsubject$.asobservable",{"_index":1275,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountsubject$.next(account",{"_index":1283,"title":{},"body":{"injectables/UserService.html":{}}}],["this.accountsubject$.next(undefined",{"_index":1289,"title":{},"body":{"injectables/UserService.html":{}}}],["this.activatedroute.snapshot.parammap.get('id",{"_index":1141,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.activatedroute.snapshot.parammap.get('token",{"_index":399,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.appdescription",{"_index":567,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.appdescriptionelement?.nativeelement",{"_index":568,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.applypropertheme(this.isdarktoggled",{"_index":1253,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.apptitle",{"_index":564,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.apptitleelement?.nativeelement?.textcontent",{"_index":565,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.areconsolesallowed",{"_index":986,"title":{},"body":{"injectables/LogService.html":{}}}],["this.authservice",{"_index":414,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.authservice.resendconfirmationemail",{"_index":406,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["this.changedetectorref.detectchanges",{"_index":246,"title":{},"body":{"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.changedetectorref.markforcheck",{"_index":897,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.constructor.name",{"_index":491,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["this.createformgroup('change",{"_index":610,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.destinations",{"_index":555,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.dialog.closeall",{"_index":901,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.dialog.open(confirmemaildialogcomponent).afterclosed",{"_index":409,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.dialog.open(forgotpassworddialogcomponent).afterclosed",{"_index":613,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.dialog.open(templateref",{"_index":900,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.dialogref.close",{"_index":468,"title":{},"body":{"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordDialogComponent.html":{}}}],["this.errorhappens.emit((err",{"_index":1015,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.errormessage",{"_index":245,"title":{},"body":{"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.f.email.seterrors",{"_index":624,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.f.email?.value",{"_index":1105,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.f.firstname?.value",{"_index":1103,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.f.identifier.seterrors",{"_index":1019,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.f.identifier?.value",{"_index":1013,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.f.lastname?.value",{"_index":1104,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.f.password.seterrors",{"_index":1021,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.f.password?.value",{"_index":1014,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":617,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formgroup",{"_index":609,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formgroup.controls",{"_index":608,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formgroup.disable",{"_index":611,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.formgroup.enable",{"_index":616,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.getfilefromevent($event",{"_index":891,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.horizontalposition",{"_index":1218,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.http",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.isaccountalreadyconfirmed",{"_index":396,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["this.isdarkthemetoggled",{"_index":886,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.isdarktoggled",{"_index":1249,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.isdarktoggledkey",{"_index":1248,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.isdestroyed$.complete",{"_index":403,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.isdestroyed$.next(true",{"_index":402,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.isformsubmitted",{"_index":1145,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.isloading",{"_index":413,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.ispasswordhidden",{"_index":1012,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.isprocessing",{"_index":404,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["this.isresetpasswordfailed",{"_index":1148,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.isresetpasswordsucceed",{"_index":1146,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.isusablewithoutapi",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"components/LayoutSettingsComponent.html":{}}}],["this.jwt",{"_index":1285,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.getiteminstorage",{"_index":1247,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/UserService.html":{}}}],["this.localstorageservice.getiteminstorage(this.jwtkey",{"_index":1284,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.removeiteminstorage(this.accountkey",{"_index":1288,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.removeiteminstorage(this.jwtkey",{"_index":1290,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.setiteminstorage",{"_index":1254,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.localstorageservice.setiteminstorage(this.accountkey",{"_index":1286,"title":{},"body":{"injectables/UserService.html":{}}}],["this.localstorageservice.setiteminstorage(this.jwtkey",{"_index":1287,"title":{},"body":{"injectables/UserService.html":{}}}],["this.logservice.error(messagetodev",{"_index":725,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{}}}],["this.logservice.info",{"_index":744,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{}}}],["this.logservice.info(logsubject.guard",{"_index":490,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["this.logservice.info(logsubject.store",{"_index":974,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.metaservice.updatetag",{"_index":570,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.mustnotberejectedvalidator",{"_index":621,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.renderer",{"_index":1244,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.renderer[isdarktheme",{"_index":1255,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.rendererfactory.createrenderer(undefined",{"_index":1245,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.router.navigate",{"_index":412,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":615,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"injectables/UserService.html":{}}}],["this.router.navigate(['home",{"_index":1107,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["this.router.parseurl",{"_index":1088,"title":{},"body":{"guards/NotUserGuard.html":{}}}],["this.router.parseurl('/auth",{"_index":1262,"title":{},"body":{"guards/UserGuard.html":{}}}],["this.router.parseurl('/auth/confirm",{"_index":492,"title":{},"body":{"guards/ConfirmedUserGuard.html":{}}}],["this.setmeta",{"_index":561,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.snackbar.open(message",{"_index":1215,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["this.snackbarservice.open('not",{"_index":888,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.snackbarservice.open((err",{"_index":898,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.snackbarservice.open(this.errormessage",{"_index":626,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.src",{"_index":777,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["this.themeservice.init",{"_index":554,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.themeservice.isdarktoggled",{"_index":887,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.themeservice.toggledark",{"_index":902,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.titleservice.settitle(this.apptitle",{"_index":566,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.token",{"_index":398,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.userservice",{"_index":894,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.userservice.account",{"_index":393,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["this.userservice.account$.pipe",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["this.userservice.delete",{"_index":752,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"components/LayoutSettingsComponent.html":{}}}],["this.userservice.jwt",{"_index":738,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"guards/UserGuard.html":{}}}],["this.userservice.update",{"_index":896,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["this.userservice.update(loggedinuser.account",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(res.account",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.verifytoken(this.token",{"_index":400,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["this.verticalposition",{"_index":1219,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["throwerror",{"_index":716,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interfaces/MockUser.html":{}}}],["throwerror(new",{"_index":733,"title":{},"body":{"interceptors/HttpErrorInterceptor.html":{},"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["thumb.jpg",{"_index":41,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["thumbpath",{"_index":42,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["title",{"_index":536,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{}}}],["titleservice",{"_index":553,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["toggledark",{"_index":1228,"title":{},"body":{"injectables/ThemeService.html":{}}}],["token",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoginDto.html":{},"interfaces/MockUser.html":{},"interfaces/RegisterDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":1486,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":1221,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["tools",{"_index":1629,"title":{},"body":{"index.html":{}}}],["top",{"_index":1213,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["trackbyindex",{"_index":780,"title":{},"body":{"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["trackbyindex(index",{"_index":562,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSidenavComponent.html":{}}}],["transform",{"_index":59,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["transform(src",{"_index":60,"title":{},"body":{"pipes/ApiPathPipe.html":{}}}],["translate",{"_index":918,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["translation",{"_index":1589,"title":{},"body":{"index.html":{}}}],["tree",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["treemap",{"_index":1607,"title":{},"body":{"index.html":{}}}],["trigger",{"_index":1516,"title":{},"body":{"index.html":{}}}],["true",{"_index":405,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"modules/CoreModule.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"guards/UserGuard.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":74,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpErrorInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{}}}],["tslint:enable",{"_index":622,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["type",{"_index":20,"title":{},"body":{"interfaces/Account.html":{},"interfaces/ApiError.html":{},"pipes/ApiPathPipe.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"interfaces/ForogtPasswordDto.html":{},"interceptors/HttpErrorInterceptor.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"interfaces/LoggedInUser.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/LoginDto.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"interfaces/RegisterDto.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordDto.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"interfaces/Upload.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typography",{"_index":660,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":61,"title":{},"body":{"pipes/ApiPathPipe.html":{},"components/ConfirmEmailComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"interceptors/HttpJwtInterceptor.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"interfaces/MockUser.html":{},"guards/NotUserGuard.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["undefined/unreachable",{"_index":756,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["unknown",{"_index":748,"title":{},"body":{"interceptors/HttpJwtInterceptor.html":{},"injectables/LocalStorageService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["unsafe",{"_index":773,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["unset",{"_index":933,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["unsubscribe",{"_index":401,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["up",{"_index":1448,"title":{},"body":{"index.html":{}}}],["update",{"_index":1268,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["update(account",{"_index":1272,"title":{},"body":{"injectables/UserService.html":{}}}],["updateavatar",{"_index":1269,"title":{},"body":{"injectables/UserService.html":{}}}],["updateavatar$(formdata",{"_index":895,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":18,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/MockUser.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["updateon",{"_index":591,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["upload",{"_index":19,"title":{"interfaces/Upload.html":{}},"body":{"interfaces/Account.html":{},"components/LayoutSettingsComponent.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uploads/public/uuid",{"_index":40,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["uploads/public/uuid.jpg",{"_index":38,"title":{},"body":{"interfaces/Account.html":{},"interfaces/LoggedInUser-1.html":{},"interfaces/Upload.html":{}}}],["urltree",{"_index":484,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{}}}],["usage",{"_index":761,"title":{},"body":{"directives/ImageDefaultDirective.html":{}}}],["use",{"_index":925,"title":{},"body":{"components/LayoutSettingsComponent.html":{},"index.html":{}}}],["useclass",{"_index":528,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":426,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"interfaces/MockUser.html":{},"miscellaneous/variables.html":{}}}],["user.guard",{"_index":219,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{}}}],["user.guard.ts",{"_index":479,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{},"coverage.html":{}}}],["user.guard.ts:12",{"_index":482,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{}}}],["user.guard.ts:19",{"_index":483,"title":{},"body":{"guards/ConfirmedUserGuard.html":{},"guards/NotUserGuard.html":{}}}],["userguard",{"_index":260,"title":{"guards/UserGuard.html":{}},"body":{"modules/AuthModule.html":{},"guards/UserGuard.html":{},"coverage.html":{}}}],["username",{"_index":1412,"title":{},"body":{"index.html":{}}}],["users",{"_index":1444,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":286,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"guards/ConfirmedUserGuard.html":{},"interfaces/Destination.html":{},"interceptors/HttpJwtInterceptor.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"guards/NotUserGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["uses",{"_index":1563,"title":{},"body":{"index.html":{}}}],["using",{"_index":1420,"title":{},"body":{"index.html":{}}}],["usr/bin/chromium",{"_index":1479,"title":{},"body":{"index.html":{}}}],["usr/bin/google",{"_index":1480,"title":{},"body":{"index.html":{}}}],["v${packagejson.version",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v0.0.0",{"_index":1552,"title":{},"body":{"index.html":{}}}],["v0.x.x",{"_index":1536,"title":{},"body":{"index.html":{}}}],["v1.0.0",{"_index":1537,"title":{},"body":{"index.html":{}}}],["valid",{"_index":633,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["validators",{"_index":604,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.email",{"_index":620,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["validators.pattern(/^.{8,191",{"_index":1149,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.pattern(/^.{8,255",{"_index":1108,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["validators.required",{"_index":619,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validtoken",{"_index":1045,"title":{},"body":{"interfaces/MockUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":238,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutSettingsComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"changelog.html":{}}}],["variable",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1644,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vel",{"_index":691,"title":{},"body":{"components/HomeComponent.html":{}}}],["verification",{"_index":435,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["verified",{"_index":444,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["verify",{"_index":430,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["verifytoken",{"_index":366,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["verifytoken(token",{"_index":377,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["version",{"_index":1303,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["versioning",{"_index":1529,"title":{},"body":{"index.html":{}}}],["versions",{"_index":1534,"title":{},"body":{"index.html":{}}}],["verticalposition",{"_index":1199,"title":{},"body":{"injectables/SnackbarService.html":{}}}],["viewchild",{"_index":534,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["viewchild('appdescriptionelement",{"_index":544,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["viewchild('apptitleelement",{"_index":542,"title":{},"body":{"interfaces/Destination.html":{},"components/LayoutComponent.html":{}}}],["visibility",{"_index":1023,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["visibility_off",{"_index":1022,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["visual",{"_index":1454,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1608,"title":{},"body":{"index.html":{}}}],["void",{"_index":209,"title":{},"body":{"components/ArticleComponent.html":{},"components/AuthComponent.html":{},"components/ConfirmEmailComponent.html":{},"components/ConfirmEmailDialogComponent.html":{},"interfaces/Destination.html":{},"components/ForgotPasswordComponent.html":{},"components/ForgotPasswordDialogComponent.html":{},"components/HomeComponent.html":{},"directives/ImageDefaultDirective.html":{},"components/LayoutComponent.html":{},"components/LayoutFooterComponent.html":{},"components/LayoutNavComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/LogService.html":{},"components/LoginFormComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThemeService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["voluptates",{"_index":683,"title":{},"body":{"components/HomeComponent.html":{}}}],["vscode",{"_index":1320,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["want",{"_index":1426,"title":{},"body":{"index.html":{}}}],["warn",{"_index":627,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SnackbarService.html":{}}}],["watch/debug",{"_index":1432,"title":{},"body":{"index.html":{}}}],["wb_sunny",{"_index":913,"title":{},"body":{"components/LayoutSettingsComponent.html":{}}}],["web",{"_index":800,"title":{},"body":{"components/LayoutComponent.html":{},"index.html":{}}}],["webdev",{"_index":1611,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":1624,"title":{},"body":{"index.html":{}}}],["website",{"_index":1492,"title":{},"body":{"index.html":{}}}],["weight",{"_index":849,"title":{},"body":{"components/LayoutNavComponent.html":{}}}],["welcome",{"_index":422,"title":{},"body":{"components/ConfirmEmailComponent.html":{}}}],["well",{"_index":1547,"title":{},"body":{"index.html":{}}}],["width",{"_index":457,"title":{},"body":{"components/ConfirmEmailComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LayoutSettingsComponent.html":{},"components/LayoutSidenavComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["window?.matchmedia('(prefers",{"_index":1250,"title":{},"body":{"injectables/ThemeService.html":{}}}],["without",{"_index":1028,"title":{},"body":{"interfaces/MockUser.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["worker",{"_index":509,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":524,"title":{},"body":{"modules/CoreModule.html":{}}}],["works",{"_index":210,"title":{},"body":{"components/ArticleComponent.html":{},"index.html":{}}}],["wrap",{"_index":817,"title":{},"body":{"components/LayoutFooterComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["yes",{"_index":1000,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserService.html":{}}}],["you're",{"_index":1423,"title":{},"body":{"index.html":{}}}],["yours",{"_index":1397,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":1153,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["zone.js",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/HomeModule.html":{},"modules/NotFoundModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Account.html":{"url":"interfaces/Account.html","title":"interface - Account","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Account\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        avatar\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        isConfirmed\n                                \n                                \n                                        lastName\n                                \n                                \n                                        roles\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         Upload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Upload\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isConfirmed\n                                    \n                                \n                                \n                                    \n                                        isConfirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum Role {\n  Admin = 'admin',\n  Ghost = 'ghost',\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\nexport interface Account {\n  id: number;\n  createdAt: Date;\n  updatedAt: Date;\n  firstName: string;\n  lastName: string;\n  email: string;\n  roles: Role[];\n  avatar?: Upload;\n  isConfirmed: boolean;\n}\n\nexport interface Upload {\n  /**\n   * File path, must be prefixed by server host\n   * @example 'uploads/public/uuid.jpg'\n   */\n  path: string;\n\n  /**\n   * Resized file path, must be prefixed by server host\n   * @example 'uploads/public/uuid-thumb.jpg'\n   */\n  thumbPath: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/error.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n  status: number;\n  message: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ApiPathPipe.html":{"url":"pipes/ApiPathPipe.html","title":"pipe - ApiPathPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ApiPathPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipes/api-path.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        apiPath\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(src: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipes/api-path.pipe.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    src\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\nimport { environment } from '../../../environments/environment';\n\n@Pipe({\n  name: 'apiPath',\n})\nexport class ApiPathPipe implements PipeTransform {\n  transform(src: string | undefined): string | undefined {\n    // tslint:disable-next-line: strict-boolean-expressions\n    return src ? `${environment.apiUrl}/${src}` : undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    path: 'home',\n    loadChildren: () => \"import('./home/home.module').then((m) => m.HomeModule)\",\n  },\n  {\n    path: 'not-found',\n    loadChildren: () =>\n      \"import('./not-found/not-found.module').then((m) => m.NotFoundModule)\",\n  },\n  {\n    path: 'auth',\n    loadChildren: () => \"import('./auth/auth.module').then((m) => m.AuthModule)\",\n  },\n  {\n    path: 'article',\n    loadChildren: () =>\n      \"import('./article/article.module').then((m) => m.ArticleModule)\",\n  },\n  { path: '**', redirectTo: 'not-found', pathMatch: 'full' },\n];\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    CoreModule,\n    RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArticleComponent.html":{"url":"components/ArticleComponent.html","title":"component - ArticleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ArticleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/article/article.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-article\n            \n\n            \n                styleUrls\n                ./article.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./article.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/article/article.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ArticleComponent implements OnInit {\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        article works!\n\n    \n\n    \n                \n                    ./article.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'article works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArticleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_declarations\n\n\n\n\nArticleComponent\n\nArticleComponent\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nArticleComponent->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArticleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConfirmedUserGuard } from '../core/guards/confirmed-user.guard';\n\nimport { ArticleComponent } from './article.component';\n\nconst routes: Routes = [\n  { path: '', component: ArticleComponent, canActivate: [ConfirmedUserGuard] },\n];\n\n@NgModule({\n  declarations: [ArticleComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class ArticleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                isUsableWithoutApi\n                            \n                            \n                                mockUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onErrorHappens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onErrorHappens\n                        \n                        \n                    \n                \n            \n            \n                \nonErrorHappens(errorMessage: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUsableWithoutApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl === ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockUser\n\n                        \n                    \n                    \n                        \n                            Default value : mockUser\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n} from '@angular/core';\n\nimport { environment } from '../../environments/environment';\n\nimport { MockUser, mockUser } from './auth.mock';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthComponent implements OnInit {\n  errorMessage = '';\n  isUsableWithoutApi = environment.apiUrl === '';\n  mockUser: MockUser = mockUser;\n\n  constructor(private readonly changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {}\n\n  onErrorHappens(errorMessage: string): void {\n    this.errorMessage = errorMessage;\n    this.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      this.errorMessage = '';\n    }, 500);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n  Test: {{ mockUser?.email }} / {{ mockUser?.password }}\n\n\n    \n\n    \n                \n                    ./auth.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      Test: {{ mockUser?.email }} / {{ mockUser?.password }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConfirmEmailComponent\n\nConfirmEmailComponent\n\nAuthModule -->\n\nConfirmEmailComponent->AuthModule\n\n\n\n\n\nConfirmEmailDialogComponent\n\nConfirmEmailDialogComponent\n\nAuthModule -->\n\nConfirmEmailDialogComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nForgotPasswordDialogComponent\n\nForgotPasswordDialogComponent\n\nAuthModule -->\n\nForgotPasswordDialogComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAuthModule -->\n\nRegisterFormComponent->AuthModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthModule -->\n\nResetPasswordComponent->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AuthComponent\n                        \n                        \n                            ConfirmEmailComponent\n                        \n                        \n                            ConfirmEmailDialogComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            ForgotPasswordDialogComponent\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NotUserGuard } from '../core/guards/not-user.guard';\nimport { UserGuard } from '../core/guards/user.guard';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { AuthComponent } from './auth.component';\nimport { ConfirmEmailDialogComponent } from './confirm-email-dialog/confirm-email-dialog.component';\nimport { ConfirmEmailComponent } from './confirm-email/confirm-email.component';\nimport { ForgotPasswordDialogComponent } from './forgot-password-dialog/forgot-password-dialog.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\nconst routes: Routes = [\n  { path: '', component: AuthComponent, canActivate: [NotUserGuard] },\n  {\n    path: 'confirm-email',\n    component: ConfirmEmailComponent,\n    canActivate: [UserGuard],\n  },\n  {\n    path: 'confirm-email/:token',\n    component: ConfirmEmailComponent,\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent,\n    canActivate: [NotUserGuard],\n  },\n  {\n    path: 'reset-password/:id/:token',\n    component: ResetPasswordComponent,\n  },\n];\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    LoginFormComponent,\n    RegisterFormComponent,\n    ConfirmEmailDialogComponent,\n    ConfirmEmailComponent,\n    ForgotPasswordComponent,\n    ForgotPasswordDialogComponent,\n    ResetPasswordComponent,\n  ],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isUsableWithoutApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                login$\n                            \n                            \n                                register$\n                            \n                            \n                                resendConfirmationEmail$\n                            \n                            \n                                resetPassword$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail$\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail$(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forgotPassword$\n                        \n                        \n                    \n                \n            \n            \n                \nforgotPassword$(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login$\n                        \n                        \n                    \n                \n            \n            \n                \nlogin$(input: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register$\n                        \n                        \n                    \n                \n            \n            \n                \nregister$(input: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resendConfirmationEmail$\n                        \n                        \n                    \n                \n            \n            \n                \nresendConfirmationEmail$(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetPassword$\n                        \n                        \n                    \n                \n            \n            \n                \nresetPassword$(input: ResetPasswordDto, id: number, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUsableWithoutApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl === ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/auth.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap, take, tap } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { UserService } from '../core/services/user.service';\n\nimport {\n  confirmEmailForTest$,\n  forgotPasswordForTest$,\n  loginForTest$,\n  registerForTest$,\n  resendConfirmationEmailForTest$,\n  resetPasswordForTest$,\n} from './auth.mock';\nimport {\n  LoggedInUser,\n  LoginDto,\n  RegisterDto,\n  ResetPasswordDto,\n} from './auth.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  isUsableWithoutApi = environment.apiUrl === '';\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly http: HttpClient,\n  ) {}\n\n  login$(input: LoginDto): Observable {\n    if (this.isUsableWithoutApi) {\n      return loginForTest$(input).pipe(\n        tap((res) => this.userService.update(res.account, res.jwt)),\n      );\n    }\n\n    return this.http\n      .post(`${environment.apiUrl}/auth/login`, input)\n      .pipe(tap((res) => this.userService.update(res.account, res.jwt)));\n  }\n\n  register$(input: RegisterDto): Observable {\n    if (this.isUsableWithoutApi) {\n      return registerForTest$(input).pipe(\n        tap((res) => this.userService.update(res.account, res.jwt)),\n      );\n    }\n\n    return this.http\n      .post(`${environment.apiUrl}/auth/register`, input)\n      .pipe(tap((res) => this.userService.update(res.account, res.jwt)));\n  }\n\n  resendConfirmationEmail$(email: string): Observable {\n    if (this.isUsableWithoutApi) {\n      return resendConfirmationEmailForTest$();\n    }\n\n    return this.http.get(\n      `${environment.apiUrl}/auth/resend-confirmation-email/${email}`,\n    );\n  }\n\n  confirmEmail$(token: string): Observable {\n    if (this.isUsableWithoutApi) {\n      return this.userService.account$.pipe(\n        take(1),\n        switchMap((account) => confirmEmailForTest$(account, token)),\n        tap((loggedInUser) => {\n          this.userService.update(loggedInUser.account, loggedInUser.jwt);\n        }),\n      );\n    }\n\n    return this.http\n      .get(`${environment.apiUrl}/auth/confirm-email/${token}`)\n      .pipe(\n        tap((loggedInUser) =>\n          this.userService.update(loggedInUser.account, loggedInUser.jwt),\n        ),\n      );\n  }\n\n  forgotPassword$(email: string): Observable {\n    const lowerCaseEmail = email.toLowerCase();\n\n    if (this.isUsableWithoutApi) {\n      return forgotPasswordForTest$();\n    }\n\n    return this.http.get(\n      `${environment.apiUrl}/auth/forgot-password/${lowerCaseEmail}`,\n    );\n  }\n\n  resetPassword$(\n    input: ResetPasswordDto,\n    id: number,\n    token: string,\n  ): Observable {\n    if (this.isUsableWithoutApi) {\n      return resetPasswordForTest$(input, id, token);\n    }\n\n    return this.http.post(\n      `${environment.apiUrl}/auth/reset-password/${id}/${token}`,\n      input,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailComponent.html":{"url":"components/ConfirmEmailComponent.html","title":"component - ConfirmEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/confirm-email/confirm-email.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email\n            \n\n            \n                styleUrls\n                ./confirm-email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                isAccountAlreadyConfirmed\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isProcessing\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRequestConfirmEmail\n                            \n                            \n                                    Private\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, changeDetectorRef: ChangeDetectorRef, authService: AuthService, userService: UserService, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/confirm-email/confirm-email.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRequestConfirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nonRequestConfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            verifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account | undefined\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAccountAlreadyConfirmed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isProcessing\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/confirm-email/confirm-email.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { finalize, switchMap, takeUntil } from 'rxjs/operators';\n\nimport { Account } from '../../core/models/user.model';\nimport { UserService } from '../../core/services/user.service';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\nimport { ConfirmEmailDialogComponent } from '../confirm-email-dialog/confirm-email-dialog.component';\n\n@Component({\n  selector: 'app-confirm-email',\n  templateUrl: './confirm-email.component.html',\n  styleUrls: ['./confirm-email.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmEmailComponent implements OnInit, OnDestroy {\n  isLoading = false;\n  isProcessing = false;\n  isAccountAlreadyConfirmed = false;\n  token: string | undefined = undefined;\n  account: Account | undefined = undefined;\n  private readonly isDestroyed$ = new Subject();\n\n  constructor(\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly authService: AuthService,\n    private readonly userService: UserService,\n    private readonly dialog: MatDialog,\n    private readonly router: Router,\n  ) {}\n\n  ngOnInit(): void {\n    this.userService.account$\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe((account) => {\n        this.isAccountAlreadyConfirmed = account?.isConfirmed ?? false;\n\n        this.token =\n          this.activatedRoute.snapshot.paramMap.get('token') ?? undefined;\n\n        return this.token === undefined\n          ? undefined\n          : this.verifyToken(this.token);\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onRequestConfirmEmail(): Subscription {\n    this.isProcessing = true;\n\n    return this.userService.account$\n      .pipe(\n        switchMap((account) =>\n          this.authService.resendConfirmationEmail$(\n            (account as Account)?.email,\n          ),\n        ),\n        switchMap((res) =>\n          this.dialog.open(ConfirmEmailDialogComponent).afterClosed(),\n        ),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe((afterClosed) => this.router.navigate(['/']));\n  }\n\n  private verifyToken(token: string): Subscription {\n    this.isAccountAlreadyConfirmed = false;\n    this.isLoading = true;\n\n    return this.authService\n      .confirmEmail$(token)\n      .pipe(\n        finalize(() => {\n          this.isLoading = false;\n          this.changeDetectorRef.detectChanges();\n        }),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe(\n        (loggedInUser) => {\n          this.account = loggedInUser.account;\n          this.changeDetectorRef.detectChanges();\n        },\n        (err) => {\n          if ((err as Error)?.message === AuthError.EmailConfirmed) {\n            this.isAccountAlreadyConfirmed = true;\n            this.changeDetectorRef.detectChanges();\n          }\n        },\n      );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n      \n    \n  \n\n\n\n  \n\n\n\n  \n    done\n  \n  Welcome {{ account!.firstName }} ! Your are now a confirmed user !\n  \n    \n    Continue\n  \n\n\n\n  \n    error_outline\n  \n  You have not confirmed your email address, verify your inbox and click on\n    the link in the email to continue.\n  You can request a new verification link if the old one has expired.\n  \n    \n\n    \n\n    \n      Resend\n      send\n    \n  \n\n\n\n  \n    error_outline\n  \n  Could not confirm your address.\n  You can request a new verification link if the old one has expired.\n  \n    \n\n    \n\n    \n      Resend\n      send\n    \n  \n\n\n\n  \n    done\n  \n  Everything is ready, your email address has already been verified.\n  \n    \n    Continue\n  \n\n\n    \n\n    \n                \n                    ./confirm-email.component.scss\n                \n                .button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n.status-icon {\n  font-size: 75px;\n  height: 75px;\n  width: 75px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                done    Welcome {{ account!.firstName }} ! Your are now a confirmed user !          Continue        error_outline    You have not confirmed your email address, verify your inbox and click on    the link in the email to continue.  You can request a new verification link if the old one has expired.                    Resend      send            error_outline    Could not confirm your address.  You can request a new verification link if the old one has expired.                    Resend      send            done    Everything is ready, your email address has already been verified.          Continue  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmEmailDialogComponent.html":{"url":"components/ConfirmEmailDialogComponent.html","title":"component - ConfirmEmailDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmEmailDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-email-dialog\n            \n\n            \n                styleUrls\n                ./confirm-email-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-email-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-email-dialog',\n  templateUrl: './confirm-email-dialog.component.html',\n  styleUrls: ['./confirm-email-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmEmailDialogComponent implements OnInit {\n  constructor(\n    private readonly dialogRef: MatDialogRef,\n  ) {}\n\n  ngOnInit(): void {}\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Check your mailbox\n\n  A confirmation email has been sent, please check your inbox and follow the\n    link in the email to confirm your registration.\n\n\n  Ok\n\n\n    \n\n    \n                \n                    ./confirm-email-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Check your mailbox  A confirmation email has been sent, please check your inbox and follow the    link in the email to confirm your registration.  Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmEmailDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ConfirmedUserGuard.html":{"url":"guards/ConfirmedUserGuard.html","title":"guard - ConfirmedUserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ConfirmedUserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/confirmed-user.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/confirmed-user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/confirmed-user.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LogService, LogSubject } from '../services/log.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmedUserGuard implements CanActivate {\n  constructor(\n    private readonly logService: LogService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  canActivate(): Observable {\n    return this.userService.account$.pipe(\n      map((account) => {\n        const isConfirmed = account?.isConfirmed ?? false;\n        if (!isConfirmed) {\n          this.logService.info(LogSubject.Guard, this.constructor.name);\n\n          return this.router.parseUrl('/auth/confirm-email');\n        }\n\n        return true;\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nLayoutComponent->CoreModule\n\n\n\n\n\nLayoutFooterComponent\n\nLayoutFooterComponent\n\nCoreModule -->\n\nLayoutFooterComponent->CoreModule\n\n\n\n\n\nLayoutNavComponent\n\nLayoutNavComponent\n\nCoreModule -->\n\nLayoutNavComponent->CoreModule\n\n\n\n\n\nLayoutSettingsComponent\n\nLayoutSettingsComponent\n\nCoreModule -->\n\nLayoutSettingsComponent->CoreModule\n\n\n\n\n\nLayoutSidenavComponent\n\nLayoutSidenavComponent\n\nCoreModule -->\n\nLayoutSidenavComponent->CoreModule\n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nCoreModule->LayoutComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\n\n\nHttpErrorInterceptor\n\nHttpErrorInterceptor\n\nCoreModule -->\n\nHttpErrorInterceptor->CoreModule\n\n\n\n\n\nHttpJwtInterceptor\n\nHttpJwtInterceptor\n\nCoreModule -->\n\nHttpJwtInterceptor->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LayoutComponent\n                        \n                        \n                            LayoutFooterComponent\n                        \n                        \n                            LayoutNavComponent\n                        \n                        \n                            LayoutSettingsComponent\n                        \n                        \n                            LayoutSidenavComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HttpErrorInterceptor\n                        \n                        \n                            HttpJwtInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LayoutComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\nimport { environment } from '../../environments/environment';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HttpErrorInterceptor } from './interceptors/http-error.interceptor';\nimport { HttpJwtInterceptor } from './interceptors/http-jwt.interceptor';\nimport { LayoutFooterComponent } from './layout/layout-footer/layout-footer.component';\nimport { LayoutNavComponent } from './layout/layout-nav/layout-nav.component';\nimport { LayoutSettingsComponent } from './layout/layout-settings/layout-settings.component';\nimport { LayoutSidenavComponent } from './layout/layout-sidenav/layout-sidenav.component';\nimport { LayoutComponent } from './layout/layout.component';\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    LayoutSettingsComponent,\n    LayoutFooterComponent,\n    LayoutSidenavComponent,\n    LayoutNavComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n    }),\n    SharedModule,\n    RouterModule,\n    HttpClientModule,\n  ],\n  exports: [LayoutComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpJwtInterceptor,\n      multi: true,\n    }\n  ],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Destination.html":{"url":"interfaces/Destination.html","title":"interface - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/layout/layout.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        icon\n                                \n                                \n                                        name\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { Account } from '../models/user.model';\nimport { ThemeService } from '../services/theme.service';\nimport { UserService } from '../services/user.service';\n\nexport interface Destination {\n  name: string;\n  path: string;\n\n  icon: string;\n}\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutComponent implements OnInit, AfterViewChecked, OnDestroy {\n  @ViewChild('appTitleElement') appTitleElement?: ElementRef;\n  @ViewChild('appDescriptionElement') appDescriptionElement?: ElementRef;\n\n  appTitle = '';\n  appDescription = '';\n  destinations: Destination[] = [];\n  account: Account | undefined;\n  readonly appVersion = environment.version;\n  readonly isUnknownUserAllowedToNavigate = true;\n  private readonly isDestroyed$ = new Subject();\n\n  constructor(\n    private readonly metaService: Meta,\n    private readonly themeService: ThemeService,\n    private readonly titleService: Title,\n    private readonly userService: UserService,\n  ) {\n    this.themeService.init();\n    this.destinations = [\n      {\n        name: $localize`:@@home:Home`,\n        path: 'home',\n        icon: 'home',\n      },\n      {\n        name: $localize`:@@articles:Articles`,\n        path: 'article',\n        icon: 'book',\n      },\n    ];\n  }\n\n  ngOnInit(): Subscription {\n    return this.userService.account$\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe(\n        (res) => (this.account = res),\n        (err) => (this.account = undefined),\n      );\n  }\n\n  ngAfterViewChecked(): void {\n    this.setMeta();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  private setMeta(): void {\n    this.appTitle = this.appTitleElement?.nativeElement?.textContent as string;\n    this.titleService.setTitle(this.appTitle);\n\n    this.appDescription = this.appDescriptionElement?.nativeElement\n      ?.textContent as string;\n    this.metaService.updateTag({\n      name: 'description',\n      content: this.appDescription,\n    });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/forgot-password/forgot-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPasswordHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                    Private\n                                mustNotBeRejectedValidator\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, snackbarService: SnackbarService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/forgot-password/forgot-password.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(updateOn: \"submit\" | \"change\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOn\n                                    \n                                            \"submit\" | \"change\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mustNotBeRejectedValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustNotBeRejectedValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription | undefined\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPasswordHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/forgot-password/forgot-password.component.ts:36\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\nimport { SnackbarService } from '../../core/services/snackbar.service';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\nimport { ForgotPasswordDialogComponent } from '../forgot-password-dialog/forgot-password-dialog.component';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ForgotPasswordComponent implements OnInit, OnDestroy {\n  formGroup: FormGroup;\n  isLoading = false;\n  isPasswordHidden = true;\n  errorMessage = '';\n  private readonly isDestroyed$ = new Subject();\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly router: Router,\n    private readonly snackbarService: SnackbarService,\n    private readonly dialog: MatDialog,\n  ) {\n    this.formGroup = this.createFormGroup('change');\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onSubmit(): Subscription | undefined {\n    this.isLoading = true;\n    this.formGroup.disable();\n\n    return this.authService\n      .forgotPassword$(this.f.email?.value as string)\n      .pipe(\n        switchMap((res) =>\n          this.dialog.open(ForgotPasswordDialogComponent).afterClosed(),\n        ),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe(\n        (afterClosed) => this.router.navigate(['/auth']),\n        (err) => {\n          this.errorMessage = (err as Error)?.message;\n          this.isLoading = false;\n          this.formGroup.enable();\n        },\n      );\n  }\n\n  private createFormGroup(updateOn: 'submit' | 'change'): FormGroup {\n    // tslint:disable\n    return this.formBuilder.group(\n      {\n        email: [null, [Validators.required, Validators.email]],\n      },\n      {\n        updateOn,\n        validators: this.mustNotBeRejectedValidator(),\n      },\n      // tslint:enable\n    );\n  }\n\n  private mustNotBeRejectedValidator(): () => void {\n    return () => {\n      if (this.errorMessage === AuthError.EmailNotFound) {\n        this.f.email.setErrors({ mustNotBeRejected: true });\n      } else if (this.errorMessage !== '') {\n        this.snackbarService.open(this.errorMessage, 'warn');\n      }\n      this.errorMessage = '';\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    Forgot password\n    Enter your email address to receive instructions on how to change your\n      password.\n\n    \n      \n        \n          Email address\n          \n          You must fill in this field\n          Not a valid email\n          Please check your email address\n        \n\n        \n          \n\n          Sign in\n\n          \n            Submit\n            send\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .form-field {\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Forgot password    Enter your email address to receive instructions on how to change your      password.                            Email address                    You must fill in this field          Not a valid email          Please check your email address                                    Sign in                      Submit            send                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordDialogComponent.html":{"url":"components/ForgotPasswordDialogComponent.html","title":"component - ForgotPasswordDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForgotPasswordDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password-dialog\n            \n\n            \n                styleUrls\n                ./forgot-password-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-forgot-password-dialog',\n  templateUrl: './forgot-password-dialog.component.html',\n  styleUrls: ['./forgot-password-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ForgotPasswordDialogComponent implements OnInit {\n  constructor(\n    private readonly dialogRef: MatDialogRef,\n  ) {}\n\n  ngOnInit(): void {}\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Check your mailbox\n\n  If your email address exists in our database, you will receive a password\n    recovery link at your email address in a few minutes.\n\n\n  Ok\n\n\n    \n\n    \n                \n                    ./forgot-password-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Check your mailbox  If your email address exists in our database, you will receive a password    recovery link at your email address in a few minutes.  Ok'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForogtPasswordDto.html":{"url":"interfaces/ForogtPasswordDto.html","title":"interface - ForogtPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ForogtPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent implements OnInit {\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  h1 typography\n  h2 typography\n  h3 typography\n  h4 typography\n  h5 typography\n\n  Lorem, ipsum dolor sit amet consectetur adipisicing elit. Asperiores esse\n    ab dignissimos ipsa. Ducimus rem assumenda minima sint voluptates ratione,\n    consectetur perferendis sed, enim natus animi consequuntur vel soluta\n    autem!\n  Palette\n  Primary\n  Accent\n  Warn\n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  h1 typography  h2 typography  h3 typography  h4 typography  h5 typography  Lorem, ipsum dolor sit amet consectetur adipisicing elit. Asperiores esse    ab dignissimos ipsa. Ducimus rem assumenda minima sint voluptates ratione,    consectetur perferendis sed, enim natus animi consequuntur vel soluta    autem!  Palette  Primary  Accent  Warn'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [{ path: '', component: HomeComponent }];\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpErrorInterceptor.html":{"url":"interceptors/HttpErrorInterceptor.html","title":"interceptor - HttpErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/http-error.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/http-error.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/http-error.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError } from '../models/error.model';\nimport { LogService } from '../services/log.service';\n\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private readonly logService: LogService) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    return next.handle(request).pipe(\n      // tslint:disable-next-line: rxjs-no-implicit-any-catch\n      catchError((err: HttpErrorResponse) => {\n        const messageToDev = `${this.constructor.name} - ${err.message}`;\n        this.logService.error(messageToDev);\n\n        let messageToEndUser = '';\n        if (err.error instanceof ErrorEvent) {\n          messageToEndUser = err?.error?.message;\n        } else if (err.error instanceof ProgressEvent) {\n          messageToEndUser = err.message;\n        } else {\n          messageToEndUser = (err.error as ApiError)?.message;\n        }\n\n        return throwError(new Error(messageToEndUser));\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpJwtInterceptor.html":{"url":"interceptors/HttpJwtInterceptor.html","title":"interceptor - HttpJwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpJwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interceptors/http-jwt.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/interceptors/http-jwt.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/interceptors/http-jwt.interceptor.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { LogService, LogSubject } from '../services/log.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class HttpJwtInterceptor implements HttpInterceptor {\n  constructor(\n    private readonly userService: UserService,\n    private readonly logService: LogService,\n  ) {}\n\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler,\n  ): Observable> {\n    const jwt = this.userService.jwt;\n    let newRequest = request;\n    if (jwt !== undefined) {\n      newRequest = request.clone({\n        setHeaders: { Authorization: `Bearer ${jwt}` },\n      });\n      this.logService.info(\n        LogSubject.Intercept,\n        `${this.constructor.name} jwt added to request`,\n      );\n    }\n\n    return next.handle(newRequest).pipe(\n      tap(\n        () => {},\n        (err: unknown) => {\n          if (err instanceof HttpErrorResponse) {\n            if (err.status === 401) {\n              this.logService.info(\n                LogSubject.Intercept,\n                `${this.constructor.name} 401 forbidden`,\n              );\n              this.userService.delete();\n            }\n          }\n        },\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDefaultDirective.html":{"url":"directives/ImageDefaultDirective.html","title":"directive - ImageDefaultDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ImageDefaultDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/image-default.directive.ts\n        \n\n            \n                Description\n            \n            \n                Replace undefined/unreachable image by a default one\nand add 'image-loaded' css class when image is loaded\nUsage :\n\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img[default]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                default\n                            \n                            \n                                src\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        default\n                    \n                \n                \n                    \n                        Type :     \"profile\" | \"landscape\"\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/image-default.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        src\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/image-default.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/image-default.directive.ts:19\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, HostBinding, HostListener, Input } from '@angular/core';\n\n/**\n * Replace undefined/unreachable image by a default one\n * and add 'image-loaded' css class when image is loaded\n *\n * Usage :\n * \n */\n@Directive({\n  // tslint:disable-next-line: directive-selector\n  selector: 'img[default]',\n})\nexport class ImageDefaultDirective {\n  @Input() default!: 'profile' | 'landscape';\n  @HostBinding('src') @Input() src?: string;\n\n  // tslint:disable-next-line: no-unsafe-any\n  @HostListener('error') onError(): void {\n    const isSourceFilled = this.src !== undefined && this.src !== '';\n    this.src = isSourceFilled\n      ? `assets/images/default_broken.jpg`\n      : `assets/images/default_${this.default}.jpg`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewChecked\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                appDescription\n                            \n                            \n                                    Optional\n                                appDescriptionElement\n                            \n                            \n                                appTitle\n                            \n                            \n                                    Optional\n                                appTitleElement\n                            \n                            \n                                    Readonly\n                                appVersion\n                            \n                            \n                                destinations\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                    Readonly\n                                isUnknownUserAllowedToNavigate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setMeta\n                            \n                            \n                                trackByIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(metaService: Meta, themeService: ThemeService, titleService: Title, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/layout/layout.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewChecked\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setMeta\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByIndex\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Account | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            appDescriptionElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('appDescriptionElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            appTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            appTitleElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('appTitleElement')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            appVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.version\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destinations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Destination[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isUnknownUserAllowedToNavigate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { Account } from '../models/user.model';\nimport { ThemeService } from '../services/theme.service';\nimport { UserService } from '../services/user.service';\n\nexport interface Destination {\n  name: string;\n  path: string;\n\n  icon: string;\n}\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutComponent implements OnInit, AfterViewChecked, OnDestroy {\n  @ViewChild('appTitleElement') appTitleElement?: ElementRef;\n  @ViewChild('appDescriptionElement') appDescriptionElement?: ElementRef;\n\n  appTitle = '';\n  appDescription = '';\n  destinations: Destination[] = [];\n  account: Account | undefined;\n  readonly appVersion = environment.version;\n  readonly isUnknownUserAllowedToNavigate = true;\n  private readonly isDestroyed$ = new Subject();\n\n  constructor(\n    private readonly metaService: Meta,\n    private readonly themeService: ThemeService,\n    private readonly titleService: Title,\n    private readonly userService: UserService,\n  ) {\n    this.themeService.init();\n    this.destinations = [\n      {\n        name: $localize`:@@home:Home`,\n        path: 'home',\n        icon: 'home',\n      },\n      {\n        name: $localize`:@@articles:Articles`,\n        path: 'article',\n        icon: 'book',\n      },\n    ];\n  }\n\n  ngOnInit(): Subscription {\n    return this.userService.account$\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe(\n        (res) => (this.account = res),\n        (err) => (this.account = undefined),\n      );\n  }\n\n  ngAfterViewChecked(): void {\n    this.setMeta();\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n\n  private setMeta(): void {\n    this.appTitle = this.appTitleElement?.nativeElement?.textContent as string;\n    this.titleService.setTitle(this.appTitle);\n\n    this.appDescription = this.appDescriptionElement?.nativeElement\n      ?.textContent as string;\n    this.metaService.updateTag({\n      name: 'description',\n      content: this.appDescription,\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n  \n\n\n\n  Ng-new\n  Angular progressive web app starter.\n  Home\n  Articles\n\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                // sticky footer layout\n.layout {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n}\n\n.content {\n  flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Ng-new  Angular progressive web app starter.  Home  Articles'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutFooterComponent.html":{"url":"components/LayoutFooterComponent.html","title":"component - LayoutFooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutFooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout-footer/layout-footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-footer\n            \n\n            \n                styleUrls\n                ./layout-footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout-footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appDescription\n                            \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        appDescription\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-footer/layout-footer.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        appVersion\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-footer/layout-footer.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-footer/layout-footer.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-layout-footer',\n  templateUrl: './layout-footer.component.html',\n  styleUrls: ['./layout-footer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutFooterComponent implements OnInit {\n  @Input() appDescription?: string;\n  @Input() appVersion?: string;\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  {{ appDescription }}\n  {{ appVersion }}\n\n\n    \n\n    \n                \n                    ./layout-footer.component.scss\n                \n                $footer-height: 50px;\n\n.layout-footer {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  line-height: $footer-height;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ appDescription }}  {{ appVersion }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutFooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutNavComponent.html":{"url":"components/LayoutNavComponent.html","title":"component - LayoutNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout-nav/layout-nav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-nav\n            \n\n            \n                styleUrls\n                ./layout-nav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                trackByIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                appTitle\n                            \n                            \n                                destinations\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        appTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        destinations\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByIndex\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-nav/layout-nav.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { Account } from '../../models/user.model';\n\n@Component({\n  selector: 'app-layout-nav',\n  templateUrl: './layout-nav.component.html',\n  styleUrls: ['./layout-nav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutNavComponent implements OnInit {\n  @Input() sidenav?: MatSidenav;\n  @Input() appTitle?: string;\n  @Input() account?: Account;\n  @Input() destinations?: { path: string; icon: string; name: string }[];\n\n  ngOnInit(): void {}\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n  \n  \n    \n    {{ appTitle }}\n  \n  \n    \n      {{ destination.icon }}\n      {{ destination.name }}\n    \n  \n\n  \n\n  \n\n\n    \n\n    \n                \n                    ./layout-nav.component.scss\n                \n                $nav-height: 50px;\n\n.layout-nav {\n  display: flex;\n  justify-content: space-between;\n  line-height: $nav-height - 2px;\n  padding: 0 8px;\n\n  .fill-remaining-space {\n    flex: 1 1 auto;\n  }\n}\n\n.app-brand {\n  display: flex;\n  height: $nav-height;\n\n  .app-brand-icon {\n    border-radius: 50%;\n    object-fit: contain;\n    padding: 2px;\n  }\n\n  .app-brand-title {\n    font-size: 20px;\n    font-weight: normal;\n    line-height: $nav-height;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu                {{ appTitle }}              {{ destination.icon }}      {{ destination.name }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutSettingsComponent.html":{"url":"components/LayoutSettingsComponent.html","title":"component - LayoutSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout-settings/layout-settings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-settings\n            \n\n            \n                styleUrls\n                ./layout-settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDarkThemeToggled\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isUsableWithoutApi\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getFileFromEvent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseDialog\n                            \n                            \n                                onImportImage\n                            \n                            \n                                onLogOut\n                            \n                            \n                                onOpenDialog\n                            \n                            \n                                onToggleDarkTheme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(localeId: string, themeService: ThemeService, userService: UserService, dialog: MatDialog, changeDetectorRef: ChangeDetectorRef, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localeId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFileFromEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileFromEvent($event: Event | DataTransfer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Event | DataTransfer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     File\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCloseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nonCloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onImportImage\n                        \n                        \n                    \n                \n            \n            \n                \nonImportImage($event: Event | DataTransfer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                            Event | DataTransfer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogOut\n                        \n                        \n                    \n                \n            \n            \n                \nonLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onOpenDialog\n                        \n                        \n                    \n                \n            \n            \n                \nonOpenDialog(templateRef: TemplateRef)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateRef\n                                    \n                                            TemplateRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onToggleDarkTheme\n                        \n                        \n                    \n                \n            \n            \n                \nonToggleDarkTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkThemeToggled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUsableWithoutApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : environment.apiUrl === ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/layout/layout-settings/layout-settings.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { Account } from '../../models/user.model';\nimport { SnackbarService } from '../../services/snackbar.service';\nimport { ThemeService } from '../../services/theme.service';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-layout-settings',\n  templateUrl: './layout-settings.component.html',\n  styleUrls: ['./layout-settings.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutSettingsComponent implements OnInit, OnDestroy {\n  @Input() account?: Account;\n  isDarkThemeToggled = false;\n  isUsableWithoutApi = environment.apiUrl === '';\n  private readonly isDestroyed$ = new Subject();\n\n  constructor(\n    @Inject(LOCALE_ID) readonly localeId: string,\n    private readonly themeService: ThemeService,\n    private readonly userService: UserService,\n    private readonly dialog: MatDialog,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly snackbarService: SnackbarService,\n  ) {}\n\n  ngOnInit(): void {\n    this.isDarkThemeToggled = this.themeService.isDarkToggled;\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onImportImage($event: Event | DataTransfer): void {\n    if (this.isUsableWithoutApi) {\n      return void this.snackbarService.open('Not available in demo', 'warn');\n    }\n    const file = this.getFileFromEvent($event);\n    const formData = new FormData();\n    formData.append('file', file);\n\n    void this.userService\n      .updateAvatar$(formData)\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe(\n        (upload) => {\n          void this.userService.update({\n            ...(this.account as Account),\n            avatar: upload,\n          });\n          this.changeDetectorRef.markForCheck();\n        },\n        (err) => this.snackbarService.open((err as Error).message, 'warn'),\n      );\n  }\n\n  onLogOut(): void {\n    this.userService.delete();\n  }\n\n  onOpenDialog(templateRef: TemplateRef): void {\n    this.dialog.open(templateRef);\n  }\n\n  onCloseDialog(): void {\n    this.dialog.closeAll();\n  }\n\n  onToggleDarkTheme(): void {\n    this.themeService.toggleDark();\n    this.isDarkThemeToggled = this.themeService.isDarkToggled;\n  }\n\n  private getFileFromEvent($event: Event | DataTransfer): File {\n    const event = $event as Event;\n    event.preventDefault();\n    const target = event.target as HTMLInputElement;\n    const file = (target?.files ?? ($event as DataTransfer)?.files)[0];\n\n    return file;\n  }\n}\n\n    \n\n    \n        \n  \n  person\n\n\n\n  \n    \n      \n        \n        \n      \n\n      {{ account?.firstName }}\n      \n        {{ account.email }}\n      \n    \n    \n      \n        person\n        Sign in\n      \n      \n    \n    \n      \n        exit_to_app\n        Sign out\n      \n      \n    \n    \n      \n        wb_sunny\n        Light theme\n      \n      \n        nights_stay\n        Dark theme\n      \n    \n    \n      translate\n      {{ localeId === 'fr' ? 'English' : 'Français' }}\n    \n  \n\n\n\n  Are you sure ?\n  \n    If you sign out you will have to enter your credentials again to use\n      application !\n  \n  \n    Cancel\n    Sign out\n  \n\n\n    \n\n    \n                \n                    ./layout-settings.component.scss\n                \n                @mixin round-button($sizeInPixels, $paddingInPixels) {\n  border-radius: 50%;\n  height: $sizeInPixels + $paddingInPixels;\n  line-height: 1;\n  min-width: unset;\n  padding: 0;\n  width: $sizeInPixels + $paddingInPixels;\n\n  img {\n    border-radius: 50%;\n    height: 100%;\n    object-fit: cover;\n    padding: $paddingInPixels;\n    width: 100%;\n  }\n}\n\n.round {\n  @include round-button(36px, 2px);\n\n  &.large {\n    @include round-button(100px, 10px);\n  }\n}\n\n::ng-deep .mat-menu-content {\n  padding: 0 !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    person                                        {{ account?.firstName }}              {{ account.email }}                            person        Sign in                                  exit_to_app        Sign out                                  wb_sunny        Light theme                    nights_stay        Dark theme                    translate      {{ localeId === \\'fr\\' ? \\'English\\' : \\'Français\\' }}        Are you sure ?      If you sign out you will have to enter your credentials again to use      application !        Cancel    Sign out  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutSidenavComponent.html":{"url":"components/LayoutSidenavComponent.html","title":"component - LayoutSidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutSidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/layout/layout-sidenav/layout-sidenav.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-sidenav\n            \n\n            \n                styleUrls\n                ./layout-sidenav.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout-sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                trackByIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                            \n                                destinations\n                            \n                            \n                                sidenav\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n                \n                    \n                        Type :         Account\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        destinations\n                    \n                \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sidenav\n                    \n                \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trackByIndex\n                        \n                        \n                    \n                \n            \n            \n                \ntrackByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/layout/layout-sidenav/layout-sidenav.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\n\nimport { Account } from '../../models/user.model';\n\n@Component({\n  selector: 'app-layout-sidenav',\n  templateUrl: './layout-sidenav.component.html',\n  styleUrls: ['./layout-sidenav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutSidenavComponent implements OnInit {\n  @Input() sidenav!: MatSidenav;\n  @Input() account?: Account;\n  @Input() destinations?: { path: string; icon: string; name: string }[];\n\n  ngOnInit(): void {}\n\n  trackByIndex(index: number): number {\n    return index;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n\n        {{ account?.firstName }}\n        {{\n          account?.email\n        }}\n      \n    \n    \n      {{ destination.icon }}\n      {{ destination.name }}\n    \n  \n\n\n    \n\n    \n                \n                    ./layout-sidenav.component.scss\n                \n                .layout-sidenav {\n  width: 250px;\n}\n\n.layout-sidenav-avatar {\n  border-radius: 50%;\n  height: 100px;\n  object-fit: cover;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ account?.firstName }}        {{          account?.email        }}                    {{ destination.icon }}      {{ destination.name }}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutSidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItemInStorage\n                            \n                            \n                                removeItemInStorage\n                            \n                            \n                                setItemInStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemInStorage\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemInStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeItemInStorage\n                        \n                        \n                    \n                \n            \n            \n                \nremoveItemInStorage(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setItemInStorage\n                        \n                        \n                    \n                \n            \n            \n                \nsetItemInStorage(key: string, value: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/local-storage.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { LogService, LogSubject } from '../services/log.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n  constructor(private readonly logService: LogService) {}\n\n  getItemInStorage(key: string): unknown {\n    const stringValue = localStorage.getItem(key) as string;\n    const value = (JSON.parse(stringValue) as unknown) ?? undefined;\n    this.logService.info(\n      LogSubject.Store,\n      value !== undefined ? `get ${key}` : `get ${key} (${value})`,\n    );\n\n    return value;\n  }\n\n  setItemInStorage(key: string, value: unknown): void {\n    localStorage.setItem(key, JSON.stringify(value));\n    this.logService.info(LogSubject.Store, `set ${key}`);\n  }\n\n  removeItemInStorage(key: string): void {\n    localStorage.removeItem(key);\n    this.logService.info(LogSubject.Store, `remove ${key}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogService.html":{"url":"injectables/LogService.html","title":"injectable - LogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/log.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                areConsolesAllowed\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/log.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            info\n                        \n                        \n                    \n                \n            \n            \n                \ninfo(subject: LogSubject, message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/log.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                                LogSubject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            areConsolesAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : !environment.production\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/log.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { environment } from '../../../environments/environment';\n\nexport enum LogSubject {\n  Intercept = '🎾',\n  Guard = '⚔️',\n  Store = '💾',\n  Error = '❌',\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogService {\n  areConsolesAllowed = !environment.production;\n\n  info(subject: LogSubject, message: string): void {\n    if (this.areConsolesAllowed) {\n      console.info(`${subject}: ${message}`);\n    }\n  }\n\n  error(message: string): void {\n    if (this.areConsolesAllowed) {\n      console.error(`${LogSubject.Error}: ${message}`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggedInUser.html":{"url":"interfaces/LoggedInUser.html","title":"interface - LoggedInUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggedInUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        account\n                                \n                                \n                                        jwt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:         Account\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Account\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggedInUser-1.html":{"url":"interfaces/LoggedInUser-1.html","title":"interface - LoggedInUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggedInUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        account\n                                \n                                \n                                        jwt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        account\n                                    \n                                \n                                \n                                    \n                                        account:         Account\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Account\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export enum Role {\n  Admin = 'admin',\n  Ghost = 'ghost',\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\nexport interface Account {\n  id: number;\n  createdAt: Date;\n  updatedAt: Date;\n  firstName: string;\n  lastName: string;\n  email: string;\n  roles: Role[];\n  avatar?: Upload;\n  isConfirmed: boolean;\n}\n\nexport interface Upload {\n  /**\n   * File path, must be prefixed by server host\n   * @example 'uploads/public/uuid.jpg'\n   */\n  path: string;\n\n  /**\n   * Resized file path, must be prefixed by server host\n   * @example 'uploads/public/uuid-thumb.jpg'\n   */\n  thumbPath: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginDto.html":{"url":"interfaces/LoginDto.html","title":"interface - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/login-form/login-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPasswordHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                    Private\n                                mustNotBeRejectedValidator\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorHappens\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, snackbarService: SnackbarService)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/login-form/login-form.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        errorHappens\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:30\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(updateOn: \"submit\" | \"change\", previousValue?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOn\n                                    \n                                            \"submit\" | \"change\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previousValue\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mustNotBeRejectedValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustNotBeRejectedValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/login-form/login-form.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription | undefined\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPasswordHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/login-form/login-form.component.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/login-form/login-form.component.ts:37\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { SnackbarService } from '../../core/services/snackbar.service';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginFormComponent implements OnInit, OnDestroy {\n  @Output() readonly errorHappens = new EventEmitter();\n  formGroup: FormGroup;\n  isLoading = false;\n  isPasswordHidden = true;\n  errorMessage = '';\n  private readonly isDestroyed$ = new Subject();\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly router: Router,\n    private readonly snackbarService: SnackbarService,\n  ) {\n    this.formGroup = this.createFormGroup('change');\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onSubmit(): Subscription | undefined {\n    this.isLoading = true;\n    this.formGroup.disable();\n    this.isPasswordHidden = true;\n\n    return this.authService\n      .login$({\n        email: this.f.identifier?.value as string,\n        password: this.f.password?.value as string,\n      })\n      .pipe(takeUntil(this.isDestroyed$))\n      .subscribe(\n        (res) => this.router.navigate(['/']),\n        (err) => {\n          this.errorHappens.emit((err as Error).message);\n          this.errorMessage = (err as Error).message;\n          this.isLoading = false;\n          this.formGroup.enable();\n        },\n      );\n  }\n\n  private createFormGroup(\n    updateOn: 'submit' | 'change',\n    previousValue?: { [key: string]: unknown },\n  ): FormGroup {\n    // tslint:disable\n    const formGroup = this.formBuilder.group(\n      {\n        identifier: [undefined, [Validators.required, Validators.email]],\n        password: [undefined, [Validators.required]],\n      },\n      {\n        updateOn,\n        validators: this.mustNotBeRejectedValidator(),\n      },\n      // tslint:enable\n    );\n    if (previousValue !== undefined) {\n      formGroup.setValue(previousValue);\n    }\n\n    return formGroup;\n  }\n\n  private mustNotBeRejectedValidator(): () => void {\n    return () => {\n      if (this.errorMessage === AuthError.InvalidEmail) {\n        this.f.identifier.setErrors({ mustNotBeRejected: true });\n      } else if (this.errorMessage === AuthError.InvalidPassword) {\n        this.f.password.setErrors({ mustNotBeRejected: true });\n      } else if (this.errorMessage !== '') {\n        this.snackbarService.open(this.errorMessage, 'warn');\n      }\n      this.errorMessage = '';\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    Email address\n    \n    You must fill in this field\n    Please check your identifier\n    Not a valid email\n  \n\n  \n    \n    Password\n    \n      {{\n        isPasswordHidden ? 'visibility_off' : 'visibility'\n      }}\n    \n    You must fill in this field\n    Please check your password\n  \n\n  \n    \n    Forgot password\n    \n      Submit\n      send\n    \n  \n\n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                .form-field {\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Email address        You must fill in this field    Please check your identifier    Not a valid email            Password          {{        isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\'      }}        You must fill in this field    Please check your password            Forgot password          Submit      send      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockUser.html":{"url":"interfaces/MockUser.html","title":"interface - MockUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MockUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.mock.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Account\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { delay, switchMap } from 'rxjs/operators';\n\nimport { Account, Role } from '../core/models/user.model';\n\nimport {\n  AuthError,\n  LoggedInUser,\n  LoginDto,\n  RegisterDto,\n  ResetPasswordDto,\n} from './auth.model';\n\nexport interface MockUser extends Account {\n  password: string;\n}\n\n/** Fake User to test app without running API */\nexport const mockUser: MockUser = {\n  id: 42,\n  email: 'johndoe@email.com',\n  password: 'JohnDoePass123',\n  firstName: 'John',\n  lastName: 'Doe',\n  isConfirmed: true,\n  createdAt: new Date('September 22, 2018 15:00:00'),\n  updatedAt: new Date('October 12, 2020 19:00:00'),\n  roles: [Role.Ghost],\n};\nconst validToken = 'johndoe.test.token';\n\nconst mockDelay = 1000;\n\nexport const loginForTest$ = (input: LoginDto): Observable => {\n  const isEmailCorrect = input.email.toLowerCase() === mockUser.email;\n  if (!isEmailCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Invalid email'))),\n    );\n  }\n  const isPasswordCorrect = input.password === mockUser.password;\n  if (!isPasswordCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Invalid password'))),\n    );\n  }\n  const { password, ...account } = mockUser;\n\n  return of({\n    jwt: 'ey...',\n    account,\n  } as LoggedInUser).pipe(delay(mockDelay));\n};\n\nexport const registerForTest$ = (\n  input: RegisterDto,\n): Observable => {\n  if (input.email.toLowerCase() === mockUser.email) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Email already exists'))),\n    );\n  }\n\n  return of({\n    jwt: 'ey...',\n    account: {\n      id: 43,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      firstName: input.firstName,\n      lastName: input.lastName,\n      email: input.email,\n      isConfirmed: false,\n    },\n  } as LoggedInUser).pipe(delay(mockDelay));\n};\n\nexport const confirmEmailForTest$ = (\n  account: Account | undefined,\n  token: string,\n): Observable => {\n  if (account === undefined) {\n    return throwError(new Error(AuthError.EmailConfirmed));\n  }\n  if (account.isConfirmed) {\n    return throwError(new Error(AuthError.EmailConfirmed));\n  }\n  if (token !== validToken) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => {\n        return throwError(new Error(AuthError.InvalidToken));\n      }),\n    );\n  }\n  const confirmedMockUser = { ...mockUser, isConfirmed: true };\n\n  return of({\n    jwt: 'ey...',\n    account: confirmedMockUser,\n  }).pipe(delay(mockDelay));\n};\n\nexport const resendConfirmationEmailForTest$ = (): Observable => {\n  return of({ isSuccess: true }).pipe(delay(2000));\n};\n\nexport const forgotPasswordForTest$ = (): Observable => {\n  return of({ isProcessed: true }).pipe(delay(mockDelay));\n};\n\nexport const resetPasswordForTest$ = (\n  input: ResetPasswordDto,\n  id: number,\n  token: string,\n): Observable => {\n  const isParamsCorrect = id === mockUser.id && token === validToken;\n  if (!isParamsCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => {\n        return throwError(new Error(AuthError.InvalidToken));\n      }),\n    );\n  }\n\n  return of({ isProcessed: true }).pipe(delay(mockDelay));\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/not-found/not-found.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotFoundComponent implements OnInit {\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  404\n  Page not found\n\n\n    \n\n    \n                \n                    ./not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  404  Page not found'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotFoundModule.html":{"url":"modules/NotFoundModule.html","title":"module - NotFoundModule","body":"\n                   \n\n\n\n\n    Modules\n    NotFoundModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/not-found/not-found.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NotFoundComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NotFoundComponent } from './not-found.component';\n\nconst routes: Routes = [{ path: '', component: NotFoundComponent }];\n\n@NgModule({\n  declarations: [NotFoundComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class NotFoundModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/NotUserGuard.html":{"url":"guards/NotUserGuard.html","title":"guard - NotUserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    NotUserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/not-user.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/not-user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/not-user.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LogService, LogSubject } from '../services/log.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotUserGuard implements CanActivate {\n  constructor(\n    private readonly logService: LogService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  canActivate(): Observable {\n    return this.userService.account$.pipe(\n      map((account) => {\n        if (account !== undefined) {\n          this.logService.info(LogSubject.Guard, this.constructor.name);\n\n          return this.router.parseUrl('/');\n        }\n\n        return true;\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterDto.html":{"url":"interfaces/RegisterDto.html","title":"interface - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/register-form/register-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isLoading\n                            \n                            \n                                isPasswordHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                    Private\n                                mustNotBeRejectedValidator\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCloseDialog\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorHappens\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, router: Router, snackbarService: SnackbarService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/register-form/register-form.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        errorHappens\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(updateOn: \"submit\" | \"change\", previousValue?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOn\n                                    \n                                            \"submit\" | \"change\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previousValue\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mustNotBeRejectedValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustNotBeRejectedValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCloseDialog\n                        \n                        \n                    \n                \n            \n            \n                \nonCloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/register-form/register-form.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription | undefined\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPasswordHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/register-form/register-form.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/register-form/register-form.component.ts:41\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\nimport { ApiError } from '../../core/models/error.model';\nimport { SnackbarService } from '../../core/services/snackbar.service';\nimport { mustMatchValidator } from '../../shared/validators/must-match.validator';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\nimport { ConfirmEmailDialogComponent } from '../confirm-email-dialog/confirm-email-dialog.component';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RegisterFormComponent implements OnInit, OnDestroy {\n  @Output() readonly errorHappens = new EventEmitter();\n  formGroup: FormGroup;\n  isLoading = false;\n  isPasswordHidden = true;\n  errorMessage = '';\n  private readonly isDestroyed$ = new Subject();\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly router: Router,\n    private readonly snackbarService: SnackbarService,\n    private readonly dialog: MatDialog,\n  ) {\n    this.formGroup = this.createFormGroup('change');\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onSubmit(): Subscription | undefined {\n    this.isLoading = true;\n    this.formGroup.disable();\n    this.isPasswordHidden = true;\n\n    return this.authService\n      .register$({\n        firstName: this.f.firstName?.value as string,\n        lastName: this.f.lastName?.value as string,\n        email: this.f.email?.value as string,\n        password: this.f.password?.value as string,\n      })\n      .pipe(\n        switchMap((res) =>\n          this.dialog.open(ConfirmEmailDialogComponent).afterClosed(),\n        ),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe(\n        (afterClosed) => this.router.navigate(['/']),\n        (err) => {\n          this.errorHappens.emit((err as ApiError).message);\n          this.errorMessage = (err as ApiError).message;\n          this.isLoading = false;\n          this.formGroup.enable();\n        },\n      );\n  }\n\n  onCloseDialog(): Promise {\n    this.dialog.closeAll();\n\n    return this.router.navigate(['home']);\n  }\n\n  private createFormGroup(\n    updateOn: 'submit' | 'change',\n    previousValue?: { [key: string]: unknown },\n  ): FormGroup {\n    // tslint:disable\n    const formGroup = this.formBuilder.group(\n      {\n        firstName: [null, [Validators.required]],\n        lastName: [null, [Validators.required]],\n        email: [null, [Validators.required, Validators.email]],\n        password: [\n          null,\n          [Validators.required, Validators.pattern(/^.{8,255}$/)],\n        ],\n        confirmPassword: [null, [Validators.required]],\n      },\n      {\n        updateOn,\n        validators: [\n          mustMatchValidator('password', 'confirmPassword'),\n          this.mustNotBeRejectedValidator(),\n        ],\n      },\n      // tslint:enable\n    );\n\n    if (previousValue !== undefined) {\n      formGroup.setValue(previousValue);\n    }\n\n    return formGroup;\n  }\n\n  private mustNotBeRejectedValidator(): (formGroup: FormGroup) => void {\n    return (formGroup: FormGroup) => {\n      if (this.errorMessage === AuthError.EmailExists) {\n        formGroup.controls.email.setErrors({ mustNotBeRejected: true });\n      } else if (this.errorMessage !== '') {\n        this.snackbarService.open(this.errorMessage, 'warn');\n      }\n      this.errorMessage = '';\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    First name\n    \n    You must fill in this field\n    Must contain 2-50 alphanumeric characters\n  \n\n  \n    Last name\n    \n    You must fill in this field\n    Must contain 2-50 alphanumeric characters\n  \n\n  \n    Email address\n    \n    You must fill in this field\n    Not a valid email\n    Email is already taken\n  \n\n  \n    \n    Password\n    \n      {{\n        isPasswordHidden ? 'visibility_off' : 'visibility'\n      }}\n    \n    You must fill in this field\n    Must contain 8+ characters\n  \n\n  \n    \n    Confirm password\n    \n      \n        {{ isPasswordHidden ? 'visibility_off' : 'visibility' }}\n      \n    \n    Passwords doesn't match\n    You must fill in this field\n    \n  \n\n  \n    \n    \n    \n      Submit\n      send\n    \n  \n\n\n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                .form-field {\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      First name        You must fill in this field    Must contain 2-50 alphanumeric characters        Last name        You must fill in this field    Must contain 2-50 alphanumeric characters        Email address        You must fill in this field    Not a valid email    Email is already taken            Password          {{        isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\'      }}        You must fill in this field    Must contain 8+ characters            Confirm password                  {{ isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\' }}              Passwords doesn\\'t match    You must fill in this field                          Submit      send      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/reset-password/reset-password.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountId\n                            \n                            \n                                errorMessage\n                            \n                            \n                                formGroup\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDestroyed$\n                            \n                            \n                                isFormSubmitted\n                            \n                            \n                                isPasswordHidden\n                            \n                            \n                                isResetPasswordFailed\n                            \n                            \n                                isResetPasswordSucceed\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createFormGroup\n                            \n                            \n                                    Private\n                                mustNotBeRejectedValidator\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthService, snackbarService: SnackbarService, changeDetectorRef: ChangeDetectorRef, activatedRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/reset-password/reset-password.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbarService\n                                                  \n                                                        \n                                                                        SnackbarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(updateOn: \"submit\" | \"change\", previousValue?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOn\n                                    \n                                            \"submit\" | \"change\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previousValue\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mustNotBeRejectedValidator\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mustNotBeRejectedValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/reset-password/reset-password.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Subscription | undefined\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDestroyed$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFormSubmitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPasswordHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResetPasswordFailed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isResetPasswordSucceed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/auth/reset-password/reset-password.component.ts:42\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { finalize, takeUntil } from 'rxjs/operators';\n\nimport { SnackbarService } from '../../core/services/snackbar.service';\nimport { mustMatchValidator } from '../../shared/validators/must-match.validator';\nimport { AuthError } from '../auth.model';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  formGroup: FormGroup;\n\n  isFormSubmitted = false;\n  isResetPasswordSucceed = false;\n  isResetPasswordFailed = false;\n\n  accountId = 0;\n  token = '';\n  isPasswordHidden = true;\n  errorMessage = '';\n  private readonly isDestroyed$ = new Subject();\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.formGroup.controls;\n  }\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly authService: AuthService,\n    private readonly snackbarService: SnackbarService,\n    private readonly changeDetectorRef: ChangeDetectorRef,\n    private readonly activatedRoute: ActivatedRoute,\n  ) {\n    this.formGroup = this.createFormGroup('change');\n  }\n\n  async ngOnInit(): Promise {\n    const idFromUrl = this.activatedRoute.snapshot.paramMap.get('id') ?? '';\n    this.accountId = idFromUrl !== '' ? parseInt(idFromUrl, 10) : 0;\n    this.token = this.activatedRoute.snapshot.paramMap.get('token') ?? '';\n  }\n\n  ngOnDestroy(): void {\n    this.isDestroyed$.next(true);\n    this.isDestroyed$.complete();\n  }\n\n  onSubmit(): Subscription | undefined {\n    this.isFormSubmitted = true;\n    this.formGroup.disable();\n    this.isPasswordHidden = true;\n\n    return this.authService\n      .resetPassword$(\n        { newPassword: this.f.password?.value as string },\n        this.accountId,\n        this.token,\n      )\n      .pipe(\n        finalize(() => {\n          this.isFormSubmitted = false;\n          this.changeDetectorRef.detectChanges();\n        }),\n        takeUntil(this.isDestroyed$),\n      )\n      .subscribe(\n        (res) => (this.isResetPasswordSucceed = true),\n        (err) => {\n          this.errorMessage = (err as Error)?.message;\n          if (\n            this.errorMessage ===\n            AuthError.NewPasswordMustBeDifferentFromCurrent\n          ) {\n            this.isFormSubmitted = false;\n            this.formGroup.enable();\n            this.f.password.setErrors({ mustNotBeRejected: true });\n            this.errorMessage = '';\n          } else {\n            this.isResetPasswordFailed = true;\n          }\n        },\n      );\n  }\n\n  private createFormGroup(\n    updateOn: 'submit' | 'change',\n    previousValue?: { [key: string]: unknown },\n  ): FormGroup {\n    // tslint:disable\n    const formGroup = this.formBuilder.group(\n      {\n        password: [\n          null,\n          [Validators.required, Validators.pattern(/^.{8,191}$/)],\n        ],\n        confirmPassword: [null, [Validators.required]],\n      },\n      {\n        updateOn,\n        validators: [\n          mustMatchValidator('password', 'confirmPassword'),\n          this.mustNotBeRejectedValidator(),\n        ],\n      },\n      // tslint:enable\n    );\n    if (previousValue !== undefined) {\n      formGroup.setValue(previousValue);\n    }\n\n    return formGroup;\n  }\n\n  private mustNotBeRejectedValidator(): () => void {\n    return () => {\n      if (this.errorMessage !== '') {\n        this.snackbarService.open(this.errorMessage, 'warn');\n      }\n      this.errorMessage = '';\n    };\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n\n\n\n  \n\n\n\n  Set your new password\n  \n    \n      \n        \n        Password\n        \n          {{\n            isPasswordHidden ? 'visibility_off' : 'visibility'\n          }}\n        \n        You must fill in this field\n        Must contain 8+ characters\n        New password must be different from current\n      \n\n      \n        \n        Confirm password\n        \n          \n            {{ isPasswordHidden ? 'visibility_off' : 'visibility' }}\n          \n        \n        Passwords doesn't match\n        You must confirm the password\n      \n\n      \n        \n        \n        \n          Submit\n          send\n        \n      \n    \n  \n\n\n\n  \n    error_outline\n  \n  Could not reset your password.\n  You can request a new verification link if the old one has expired.\n  \n    \n\n    \n\n    \n      Forgot password\n      open_in_new\n    \n  \n\n\n\n  \n    done\n  \n  You have just changed your password, you can now authenticate yourself.\n  \n    \n    \n      Sign in\n      open_in_new\n    \n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                .auth-card {\n  max-width: 400px;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n.status-icon {\n  font-size: 75px;\n  height: 75px;\n  width: 75px;\n}\n\n.form-field {\n  width: 100%;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Set your new password                            Password                  {{            isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\'          }}                You must fill in this field        Must contain 8+ characters        New password must be different from current                            Confirm password                              {{ isPasswordHidden ? \\'visibility_off\\' : \\'visibility\\' }}                          Passwords doesn\\'t match        You must confirm the password                                              Submit          send                          error_outline    Could not reset your password.  You can request a new verification link if the old one has expired.                    Forgot password      open_in_new            done    You have just changed your password, you can now authenticate yourself.                Sign in      open_in_new      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArticleComponent', 'selector': 'app-article'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfirmEmailComponent', 'selector': 'app-confirm-email'},{'name': 'ConfirmEmailDialogComponent', 'selector': 'app-confirm-email-dialog'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'ForgotPasswordDialogComponent', 'selector': 'app-forgot-password-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LayoutComponent', 'selector': 'app-layout'},{'name': 'LayoutFooterComponent', 'selector': 'app-layout-footer'},{'name': 'LayoutNavComponent', 'selector': 'app-layout-nav'},{'name': 'LayoutSettingsComponent', 'selector': 'app-layout-settings'},{'name': 'LayoutSidenavComponent', 'selector': 'app-layout-sidenav'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [{'name': 'ImageDefaultDirective', 'selector': 'img[default]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordDto.html":{"url":"interfaces/ResetPasswordDto.html","title":"interface - ResetPasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResetPasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth/auth.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        newPassword\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Account } from '../core/models/user.model';\n\nexport enum AuthError {\n  InvalidEmail = 'Invalid email',\n  InvalidPassword = 'Invalid password',\n  EmailExists = 'Email already exists',\n  EmailConfirmed = 'Email already confirmed',\n  EmailNotFound = 'Email not found',\n  InvalidToken = 'Invalid token',\n  NewPasswordMustBeDifferentFromCurrent = 'New password must be different from current',\n}\n\nexport interface ForogtPasswordDto {\n  email: string;\n}\n\nexport interface LoginDto {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterDto {\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface ResetPasswordDto {\n  newPassword: string;\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nApiPathPipe\n\nApiPathPipe\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nApiPathPipe->SharedModule\n\n\n\n\n\nImageDefaultDirective\n\nImageDefaultDirective\n\nSharedModule -->\n\nImageDefaultDirective->SharedModule\n\n\n\n\n\nApiPathPipe \n\nApiPathPipe \n\nApiPathPipe  -->\n\nSharedModule->ApiPathPipe \n\n\n\n\n\nImageDefaultDirective \n\nImageDefaultDirective \n\nImageDefaultDirective  -->\n\nSharedModule->ImageDefaultDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiPathPipe\n                        \n                        \n                            ImageDefaultDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiPathPipe\n                        \n                        \n                            ImageDefaultDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { ImageDefaultDirective } from './directives/image-default.directive';\nimport { ApiPathPipe } from './pipes/api-path.pipe';\n\nconst materialModules = [\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatTabsModule,\n  MatTooltipModule,\n];\n\nconst directives = [ImageDefaultDirective];\nconst pipes = [ApiPathPipe];\n\n@NgModule({\n  declarations: [directives, pipes],\n  imports: [CommonModule, materialModules],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    materialModules,\n    directives,\n    pipes,\n  ],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SnackbarService.html":{"url":"injectables/SnackbarService.html","title":"injectable - SnackbarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SnackbarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/snackbar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                horizontalPosition\n                            \n                            \n                                verticalPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/snackbar.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(message: string, color: \"primary\" | \"warn\" | \"accent\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/snackbar.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                            \"primary\" | \"warn\" | \"accent\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MatSnackBarRef\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            horizontalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBarHorizontalPosition\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/snackbar.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            verticalPosition\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatSnackBarVerticalPosition\n\n                        \n                    \n                    \n                        \n                            Default value : 'top'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/snackbar.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarRef,\n  MatSnackBarVerticalPosition,\n  TextOnlySnackBar,\n} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackbarService {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  constructor(private readonly snackBar: MatSnackBar) {}\n\n  open(\n    message: string,\n    color: 'primary' | 'warn' | 'accent',\n  ): MatSnackBarRef {\n    return this.snackBar.open(message, undefined, {\n      duration: 3000,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n      panelClass: ['mat-toolbar', `mat-${color}`],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theme.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDarkToggled\n                            \n                            \n                                    Private\n                                    Readonly\n                                isDarkToggledKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyProperTheme\n                            \n                            \n                                init\n                            \n                            \n                                toggleDark\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/theme.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                        RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            applyProperTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    applyProperTheme(isDarkTheme: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theme.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDarkTheme\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theme.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleDark\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleDark()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/theme.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDarkToggled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            isDarkToggledKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'isDarkToggled'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            renderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Renderer2\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/theme.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\nimport { LocalStorageService } from './local-storage.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private readonly renderer: Renderer2;\n  private readonly isDarkToggledKey = 'isDarkToggled';\n  isDarkToggled = false;\n\n  constructor(\n    private readonly localStorageService: LocalStorageService,\n    private readonly rendererFactory: RendererFactory2,\n  ) {\n    // tslint:disable-next-line: no-null-keyword\n    this.renderer = this.rendererFactory.createRenderer(undefined, null);\n  }\n\n  init(): void {\n    const themeFromStorage = this.localStorageService.getItemInStorage(\n      this.isDarkToggledKey,\n    ) as boolean | undefined;\n\n    this.isDarkToggled =\n      themeFromStorage !== undefined\n        ? (this.isDarkToggled = themeFromStorage)\n        : window?.matchMedia('(prefers-color-scheme: dark)')?.matches ?? false;\n\n    this.applyProperTheme(this.isDarkToggled);\n  }\n\n  toggleDark(): void {\n    this.isDarkToggled = !this.isDarkToggled;\n    this.applyProperTheme(this.isDarkToggled);\n    this.localStorageService.setItemInStorage(\n      this.isDarkToggledKey,\n      this.isDarkToggled,\n    );\n  }\n\n  private applyProperTheme(isDarkTheme: boolean): void {\n    this.renderer[isDarkTheme ? 'addClass' : 'removeClass'](\n      document.body,\n      'theme-dark',\n    );\n    this.renderer[isDarkTheme ? 'removeClass' : 'addClass'](\n      document.body,\n      'theme-light',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        path\n                                \n                                \n                                        thumbPath\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    File path, must be prefixed by server host\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbPath\n                                    \n                                \n                                \n                                    \n                                        thumbPath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Resized file path, must be prefixed by server host\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export enum Role {\n  Admin = 'admin',\n  Ghost = 'ghost',\n}\n\nexport interface LoggedInUser {\n  jwt: string;\n  account: Account;\n}\n\nexport interface Account {\n  id: number;\n  createdAt: Date;\n  updatedAt: Date;\n  firstName: string;\n  lastName: string;\n  email: string;\n  roles: Role[];\n  avatar?: Upload;\n  isConfirmed: boolean;\n}\n\nexport interface Upload {\n  /**\n   * File path, must be prefixed by server host\n   * @example 'uploads/public/uuid.jpg'\n   */\n  path: string;\n\n  /**\n   * Resized file path, must be prefixed by server host\n   * @example 'uploads/public/uuid-thumb.jpg'\n   */\n  thumbPath: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/user.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(logService: LogService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/user.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logService\n                                                  \n                                                        \n                                                                        LogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/guards/user.guard.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { LogService, LogSubject } from '../services/log.service';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGuard implements CanActivate {\n  constructor(\n    private readonly logService: LogService,\n    private readonly router: Router,\n    private readonly userService: UserService,\n  ) {}\n\n  canActivate(): Observable {\n    const jwt = this.userService.jwt;\n\n    return this.userService.account$.pipe(\n      map((account) => {\n        if (jwt === undefined || account === undefined) {\n          this.logService.info(LogSubject.Guard, this.constructor.name);\n\n          return this.router.parseUrl('/auth');\n        }\n\n        return true;\n      }),\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                account$\n                            \n                            \n                                    Private\n                                    Readonly\n                                accountKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                accountSubject$\n                            \n                            \n                                jwt\n                            \n                            \n                                    Private\n                                    Readonly\n                                jwtKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                update\n                            \n                            \n                                updateAvatar$\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService, router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(account: Account, jwt?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                                Account\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jwt\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Account\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAvatar$\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAvatar$(formData: FormData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/user.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            account$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.accountSubject$.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            accountKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'account'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            accountSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jwt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | undefined\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            jwtKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/user.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { Account, Upload } from '../models/user.model';\n\nimport { LocalStorageService } from './local-storage.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private readonly accountKey = 'account';\n  private readonly jwtKey = 'jwt';\n  private readonly accountSubject$ = new ReplaySubject(1);\n  account$ = this.accountSubject$.asObservable();\n  jwt: string | undefined;\n\n  constructor(\n    private readonly localStorageService: LocalStorageService,\n    private readonly router: Router,\n    private readonly http: HttpClient,\n  ) {\n    const account = this.localStorageService.getItemInStorage(\n      this.accountKey,\n    ) as Account | undefined;\n    this.accountSubject$.next(account);\n    const jwt = this.localStorageService.getItemInStorage(this.jwtKey) as\n      | string\n      | undefined;\n    this.jwt = jwt;\n  }\n\n  update(account: Account, jwt?: string): Account {\n    this.localStorageService.setItemInStorage(this.accountKey, account);\n    this.accountSubject$.next(account);\n\n    if (jwt !== undefined) {\n      this.localStorageService.setItemInStorage(this.jwtKey, jwt);\n      this.jwt = jwt;\n    }\n\n    return account;\n  }\n\n  delete(): void {\n    this.localStorageService.removeItemInStorage(this.accountKey);\n    this.accountSubject$.next(undefined);\n    this.localStorageService.removeItemInStorage(this.jwtKey);\n    this.jwt = undefined;\n    this.router.navigate(['/auth']);\n  }\n\n  updateAvatar$(formData: FormData): Observable {\n    return this.account$.pipe(\n      take(1),\n      switchMap((account) =>\n        account !== undefined\n          ? this.http.post(\n              `${environment.apiUrl}/accounts/${account.id}/avatar`,\n              formData,\n            )\n          : of(undefined),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.0.1 (2021-09-27)\nFeatures\n\ndev container,  env var for docker:prod (638c1d7)\nfirebase ready to deploy config (8239170)\nvscode native debugger config (09ced85)\n\nBug Fixes\n\nangular 12 related debugger issue (629d290)\njwt interceptor fired before error interceptor on http error reponses (c7605c2)\n\n0.0.0 (2021-08-21)\nFeatures\n\ninitial commit (5809b0f)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/article/article.component.ts\n            \n            component\n            ArticleComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            interface\n            MockUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            confirmEmailForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            forgotPasswordForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            loginForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            mockDelay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            mockUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            registerForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            resendConfirmationEmailForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            resetPasswordForTest$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.mock.ts\n            \n            variable\n            validToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            ForogtPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            LoggedInUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/auth/auth.model.ts\n            \n            interface\n            ResetPasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/auth/confirm-email-dialog/confirm-email-dialog.component.ts\n            \n            component\n            ConfirmEmailDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/confirm-email/confirm-email.component.ts\n            \n            component\n            ConfirmEmailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/forgot-password-dialog/forgot-password-dialog.component.ts\n            \n            component\n            ForgotPasswordDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/auth/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/auth/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/auth/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/auth/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/guards/confirmed-user.guard.ts\n            \n            guard\n            ConfirmedUserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/not-user.guard.ts\n            \n            guard\n            NotUserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http-error.interceptor.ts\n            \n            interceptor\n            HttpErrorInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/http-jwt.interceptor.ts\n            \n            interceptor\n            HttpJwtInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout-footer/layout-footer.component.ts\n            \n            component\n            LayoutFooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout-nav/layout-nav.component.ts\n            \n            component\n            LayoutNavComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout-settings/layout-settings.component.ts\n            \n            component\n            LayoutSettingsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout-sidenav/layout-sidenav.component.ts\n            \n            component\n            LayoutSidenavComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/layout/layout.component.ts\n            \n            interface\n            Destination\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/error.model.ts\n            \n            interface\n            ApiError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            Account\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            LoggedInUser\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            Upload\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/log.service.ts\n            \n            injectable\n            LogService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/snackbar.service.ts\n            \n            injectable\n            SnackbarService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/directives/image-default.directive.ts\n            \n            directive\n            ImageDefaultDirective\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/pipes/api-path.pipe.ts\n            \n            pipe\n            ApiPathPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            variable\n            directives\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            variable\n            materialModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/shared.module.ts\n            \n            variable\n            pipes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/validators/must-match.validator.ts\n            \n            function\n            mustMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^12.0.0\n        \n            @angular/cdk : ^12.0.0\n        \n            @angular/common : ^12.0.0\n        \n            @angular/compiler : ^12.0.0\n        \n            @angular/core : ^12.0.0\n        \n            @angular/forms : ^12.0.0\n        \n            @angular/localize : ^12.0.0\n        \n            @angular/material : ^12.0.0\n        \n            @angular/platform-browser : ^12.0.0\n        \n            @angular/platform-browser-dynamic : ^12.0.0\n        \n            @angular/router : ^12.0.0\n        \n            @angular/service-worker : ^12.0.0\n        \n            rxjs : ~6.6.7\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthError   (src/.../auth.model.ts)\n                        \n                        \n                            LogSubject   (src/.../log.service.ts)\n                        \n                        \n                            Role   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.model.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthError\n                    \n                \n                        \n                            \n                                 InvalidEmail\n                            \n                        \n                        \n                            \n                                Value : Invalid email\n                            \n                        \n                        \n                            \n                                 InvalidPassword\n                            \n                        \n                        \n                            \n                                Value : Invalid password\n                            \n                        \n                        \n                            \n                                 EmailExists\n                            \n                        \n                        \n                            \n                                Value : Email already exists\n                            \n                        \n                        \n                            \n                                 EmailConfirmed\n                            \n                        \n                        \n                            \n                                Value : Email already confirmed\n                            \n                        \n                        \n                            \n                                 EmailNotFound\n                            \n                        \n                        \n                            \n                                Value : Email not found\n                            \n                        \n                        \n                            \n                                 InvalidToken\n                            \n                        \n                        \n                            \n                                Value : Invalid token\n                            \n                        \n                        \n                            \n                                 NewPasswordMustBeDifferentFromCurrent\n                            \n                        \n                        \n                            \n                                Value : New password must be different from current\n                            \n                        \n            \n        \n\n    src/app/core/services/log.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogSubject\n                    \n                \n                        \n                            \n                                 Intercept\n                            \n                        \n                        \n                            \n                                Value : 🎾\n                            \n                        \n                        \n                            \n                                 Guard\n                            \n                        \n                        \n                            \n                                Value : ⚔️\n                            \n                        \n                        \n                            \n                                 Store\n                            \n                        \n                        \n                            \n                                Value : 💾\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : ❌\n                            \n                        \n            \n        \n\n    src/app/core/models/user.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 Ghost\n                            \n                        \n                        \n                            \n                                Value : ghost\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            mustMatchValidator   (src/.../must-match.validator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/validators/must-match.validator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            mustMatchValidator\n                        \n                        \n                    \n                \n            \n            \n                \nmustMatchValidator(controlName, matchingControlName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchingControlName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\ndemo (en-US) - demo (fr) - compodoc - changelog\n\n\nMake it yours\n\nClone this project and move into it\nReset git history : rm -rf .git && git init\nRun npm ci after reset git history (important for pre-commit hooks)\nReplace ALL ng-new occurrence with your project name\nReplace ALL Angular progressive web app starter. occurrence with your project description\nReplace ALL miaborde occurrence with your Github username\nChange icons in assets folder, You can generate yours with pwa-asset-generator\nIf you not using Firebase you can delete all related files : rm -r *firebase* .firebase*\nYou're good to go :)\n\n\nIf you want the full stack you can get corresponding API here.\n\nRun it in development\nLocal Node.js\nYou can run this project in watch/debug mode in local dev environment, to do so you need Node.js.\nExample :\n# install dependencies\nnpm i\n# run in development mode, default language\nnpm run start\n# run in development mode, in french\nnpm run start:frContainerized\nYou can run this project in watch/debug mode in fully containerized environment, to do so you just need Docker (for linux users you also need Docker-compose).\nExample :\n# with docker only\ndocker-compose -f docker-compose.dev.yml build\ndocker-compose -f docker-compose.dev.yml up\n\n# if you have Docker AND Node.js installed you can use short commands :\nnpm run docker:build\nnpm run docker\nWhen you add a npm package to your project you need to force your container to build.\n\nVSCode debugger\nWith Visual Studio Code you can easily launch this app in debug mode, you just need Google Chrome. All settings are already done in .vscode folder. Follow this guide to know more.\n\nIf you want to 'attach' debugger\nYou need to open your Chrome instance with chrome --remote-debugging-port=9222\n\n\nIf you want Chromium instead of Chrome on Linux distros\ncreate an alias with this command : sudo ln -s /usr/bin/chromium /usr/bin/google-chrome, path can be different on your distro !\n\nRun it in production\nContainerized\nYou can run this project in production mode in container, to do so you just need Docker.\nExample :\n# with docker only\ndocker-compose -f docker-compose.prod.yml build\ndocker-compose -f docker-compose.prod.yml up\n\n# if you have Docker AND Node.js installed you can use short commands :\nnpm run docker:build:prod\nnpm run docker:prodDocumentation\n\nCode documentation: this project use Compodoc a documentation tool for Angular & Nestjs applications. It generates a static documentation of your application.\n\nExample :\n# code documentation: build doc website and open it\nnpm run docGit flow\nThis project respects Conventional commits, a Git commit convention made by the Angular team. Basically, every pull request should end up with one commit and a standardized commit message.\nTo easily respect this a tool is provided: Commitizen called with npm run cz command, you are not obligated to use it, if you make your commits manually they will be tested too.\n\nAttention !\nDo not commit without a node_modules folder at the root of the project (run npm i command to get it), otherwise your commit and your code will not trigger lint / format / cz scripts.\n\nExample :\n# add your changes\ngit add .\n# commit with commitizen-cli\nnpm run cz\n# push changes\ngit push\n\n# if your commit fail you can perform changes and retry with previous message\nnpm run cz -- --retryCreate a release\nThis project respects Semantic Versioning.\nTo easily respect this specification a tool is provided: Standard-version.\n\nNote: commit or stash any changes before create a release.\nNote: Semantic versioning works differently for versions starting with v0.x.x. Everything before v1.0.0 is considered experimental and breaking changes are only minor version bumps. The moment you feel comfortable you need to bump the version manually to v1.0.0 and then the well-known versioning kicks in where breaking changes bump the major version, features bump the minor and fixes bump the patch version.\n\nExample :\n# add your changes\ngit add .\n\n# release first version of the project (v0.0.0)\nnpm run release -- --first-release\n# OR\n# release first stable version of the project (v1.0.0)\nnpm run release -- --release-as 1.0.0\n# OR\n# perform a prerelease\nnpm run release:prerelease\n# OR\n# perform a release\nnpm run release\n\n# push your changes, WITH version tags\ngit push --follow-tags\nWhen you perform a release you automatically perform the following actions :\n\nincrement version number in package.json (uses the fix: and feat: tags to establish the semantic versioning)\nadd a Git tag\nbuild project in prod mode for Github Pages demos and Documentation in ./docs folder\ncreate/update CHANGELOG.md\ncommit all staged changes with correct commit message\n\n\nInternationalization\nThis project is available in multiple languages, it implements Angular internationalization. If you run it in containerized mode Nginx server redirects users to the correct version of the app, according to their browser language.\nWhen you add/modify/delete a localized string in project you have to update locale to generate new messages.xlf file and translate the new string in messages.{fr,others}.xlf file(s). To do this, it is advisable to use a translation software like Poedit.\nExample :\n# update locale\nnpm run locale\nWhen you update locale you automatically perform the following actions :\n\nupdate messages.xlf with angular built-in internationalization module\nmerge messages.xlf and messages.fr.xlf using ngx-i18nsupport-lib\n\n\nPerformances monitoring\n\nSource map explorer: determines which file each byte in your minified code came from. It shows you a treemap visualization to help you debug where all the code is coming from.\n\nWebdev measure: analyzes web apps and web pages, collecting modern performance metrics and insights on developer best practices. Click here to check your app\n\n\nExample :\n# analyze your webpack bundle with source-map-explorer\nnpm run analyzeDeploy it\nFirebase\n\nLogin to your Firebase account if needed : npm i -g firebase-tools && firebase login\nI18n configuration is already done in firebase.json, you just have to rename your project in .firebaserc and deploy with : firebase deploy\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotFoundModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_declarations\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_NotFoundModule\n\n\n\ncluster_NotFoundModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nCoreModule->LayoutComponent \n\n\n\n\n\nArticleComponent\n\nArticleComponent\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nArticleComponent->ArticleModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthComponent->AuthModule\n\n\n\n\n\nConfirmEmailComponent\n\nConfirmEmailComponent\n\nAuthModule -->\n\nConfirmEmailComponent->AuthModule\n\n\n\n\n\nConfirmEmailDialogComponent\n\nConfirmEmailDialogComponent\n\nAuthModule -->\n\nConfirmEmailDialogComponent->AuthModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAuthModule -->\n\nForgotPasswordComponent->AuthModule\n\n\n\n\n\nForgotPasswordDialogComponent\n\nForgotPasswordDialogComponent\n\nAuthModule -->\n\nForgotPasswordDialogComponent->AuthModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAuthModule -->\n\nLoginFormComponent->AuthModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAuthModule -->\n\nRegisterFormComponent->AuthModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAuthModule -->\n\nResetPasswordComponent->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCoreModule -->\n\nSharedModule->CoreModule\n\n\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nApiPathPipe \n\nApiPathPipe \n\nApiPathPipe  -->\n\nSharedModule->ApiPathPipe \n\n\n\n\n\nImageDefaultDirective \n\nImageDefaultDirective \n\nImageDefaultDirective  -->\n\nSharedModule->ImageDefaultDirective \n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nCoreModule -->\n\nLayoutComponent->CoreModule\n\n\n\n\n\nLayoutFooterComponent\n\nLayoutFooterComponent\n\nCoreModule -->\n\nLayoutFooterComponent->CoreModule\n\n\n\n\n\nLayoutNavComponent\n\nLayoutNavComponent\n\nCoreModule -->\n\nLayoutNavComponent->CoreModule\n\n\n\n\n\nLayoutSettingsComponent\n\nLayoutSettingsComponent\n\nCoreModule -->\n\nLayoutSettingsComponent->CoreModule\n\n\n\n\n\nLayoutSidenavComponent\n\nLayoutSidenavComponent\n\nCoreModule -->\n\nLayoutSidenavComponent->CoreModule\n\n\n\n\n\nHttpErrorInterceptor\n\nHttpErrorInterceptor\n\nCoreModule -->\n\nHttpErrorInterceptor->CoreModule\n\n\n\n\n\nHttpJwtInterceptor\n\nHttpJwtInterceptor\n\nCoreModule -->\n\nHttpJwtInterceptor->CoreModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\n\n\nNotFoundModule\n\nNotFoundModule\n\nNotFoundModule -->\n\nNotFoundComponent->NotFoundModule\n\n\n\n\n\nApiPathPipe\n\nApiPathPipe\n\nSharedModule -->\n\nApiPathPipe->SharedModule\n\n\n\n\n\nImageDefaultDirective\n\nImageDefaultDirective\n\nSharedModule -->\n\nImageDefaultDirective->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            confirmEmailForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            directives   (src/.../shared.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            forgotPasswordForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            loginForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            materialModules   (src/.../shared.module.ts)\n                        \n                        \n                            mockDelay   (src/.../auth.mock.ts)\n                        \n                        \n                            mockUser   (src/.../auth.mock.ts)\n                        \n                        \n                            pipes   (src/.../shared.module.ts)\n                        \n                        \n                            registerForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            resendConfirmationEmailForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            resetPasswordForTest$   (src/.../auth.mock.ts)\n                        \n                        \n                            validToken   (src/.../auth.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/auth/auth.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            confirmEmailForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  account: Account | undefined,\n  token: string,\n): Observable => {\n  if (account === undefined) {\n    return throwError(new Error(AuthError.EmailConfirmed));\n  }\n  if (account.isConfirmed) {\n    return throwError(new Error(AuthError.EmailConfirmed));\n  }\n  if (token !== validToken) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => {\n        return throwError(new Error(AuthError.InvalidToken));\n      }),\n    );\n  }\n  const confirmedMockUser = { ...mockUser, isConfirmed: true };\n\n  return of({\n    jwt: 'ey...',\n    account: confirmedMockUser,\n  }).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forgotPasswordForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): Observable => {\n  return of({ isProcessed: true }).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (input: LoginDto): Observable => {\n  const isEmailCorrect = input.email.toLowerCase() === mockUser.email;\n  if (!isEmailCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Invalid email'))),\n    );\n  }\n  const isPasswordCorrect = input.password === mockUser.password;\n  if (!isPasswordCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Invalid password'))),\n    );\n  }\n  const { password, ...account } = mockUser;\n\n  return of({\n    jwt: 'ey...',\n    account,\n  } as LoggedInUser).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockDelay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mockUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MockUser\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  id: 42,\n  email: 'johndoe@email.com',\n  password: 'JohnDoePass123',\n  firstName: 'John',\n  lastName: 'Doe',\n  isConfirmed: true,\n  createdAt: new Date('September 22, 2018 15:00:00'),\n  updatedAt: new Date('October 12, 2020 19:00:00'),\n  roles: [Role.Ghost],\n}\n                        \n                    \n\n                \n                    \n                        Fake User to test app without running API \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  input: RegisterDto,\n): Observable => {\n  if (input.email.toLowerCase() === mockUser.email) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => throwError(new Error('Email already exists'))),\n    );\n  }\n\n  return of({\n    jwt: 'ey...',\n    account: {\n      id: 43,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      firstName: input.firstName,\n      lastName: input.lastName,\n      email: input.email,\n      isConfirmed: false,\n    },\n  } as LoggedInUser).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resendConfirmationEmailForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): Observable => {\n  return of({ isSuccess: true }).pipe(delay(2000));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPasswordForTest$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  input: ResetPasswordDto,\n  id: number,\n  token: string,\n): Observable => {\n  const isParamsCorrect = id === mockUser.id && token === validToken;\n  if (!isParamsCorrect) {\n    return of(undefined).pipe(\n      delay(mockDelay),\n      switchMap(() => {\n        return throwError(new Error(AuthError.InvalidToken));\n      }),\n    );\n  }\n\n  return of({ isProcessed: true }).pipe(delay(mockDelay));\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'johndoe.test.token'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            directives\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ImageDefaultDirective]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            materialModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatSidenavModule,\n  MatSnackBarModule,\n  MatTabsModule,\n  MatTooltipModule,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pipes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ApiPathPipe]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  version: `v${packageJson.version}`,\n  /** set to '' empty string to enable mocked account */\n  apiUrl: '',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  version: `(dev) v${packageJson.version}`,\n  /** set to '' empty string to enable mocked account */\n  apiUrl: 'https://localhost/api',\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
